%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: d_082-11.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For:  
%%CreationDate: 12/29/2017
%%BoundingBox: 0 0 999 999
%%HiResBoundingBox: 0 0 999 999
%%CropBox: 0 0 999 999
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 30113 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFFCFCFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFC9CFC9C9C9CFC9C9C9CFC9C9C9CFC9
%C9C9CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9C9
%CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9C9CFC9C9FD3FFFCFCFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9
%C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7CEC9C9A7
%CEC9C9A7CEFD3FFFCFCFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9CFC9FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFC9C9C9CEC9C9C9CEC9C9C9CEC9
%C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9
%CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEFD3FFFCACFC9CEC9CF
%C9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CE
%C9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFCFA7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9
%C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7
%C9C9C9A7C9C9C9FD3FFFCFCFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CE
%C9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CF
%C9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFCFC9CEC9C9C9CEC9C9C9CEC9
%C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9
%CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9FD3FFFCFCEC9CE
%C9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE
%C9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE
%C9CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFC9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9
%C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9A7
%C9C9C9A7C9C9C9A7C9FD3FFFCFCEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE
%C9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE
%C9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9FFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFA8A8CAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFD40C9FD17FFA8FD05
%FFCAFD05FFA8FD1BFFCACEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9A6C9CEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFA8CAA8FFCFFFCAFFCFFFCAFFCFA8A1FFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCFA6C9C8C9A6C9C8C9A6C9C8C9
%A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A0C9A6C9A6C9C8C97BA0C8C9A6C9
%C8C9A6C9C9C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9FD3FFFCFCEC9CEC9
%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9C9A0C9C9CEC9
%CEC9A67BC9C9CEC9CEC9CECACFCACFC9CFC9CEC9CEC9CEC9CEC9CEC9CEC9
%CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%A8A1A8FFFFFFCAFFFFFFCAFFA8FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFCFC8C9C9C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9
%C9C9C8C9C9C9C8C9C9C87B7B7BC9C8FD04C9CFCACFC9CFCACFC8C9C9C9C8
%C9C9C9C8C9C9C9FD1EFFCAA1A1A8FD07FFA8FFCAFFCAFFCAFD0FFFCFC9C9
%CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C8CEC9C9C9CEC9C9A0FD04C9CEFD04
%C97B7B757BA0C9C9CEC9C9C9CEC9CEC9CEC9C9C9CEC9C9C9CEC9C9C9CEC9
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%A8A87DA1A1FFCFFFCAFFA8CAA8FFA8CAA8FFA8FFCAFFCFFFCAFFCFFFCAFF
%CFFFCACFC8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A0C9C8C9A6C9C8C9
%A6C9C8C9A6C9C8A6FD047B507B7BA6A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8
%C9A6C9C8C9A6C9FD11FFCAFD0BFFA8FFA1A8A1A8FD06FFCAFFFFFFCAFD11
%FFCFC9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C8FD04C9CEC9C9C9CEC9C9
%C9CEC9C97BA67BA67BA07B7B757BA6C9C9CEC9C9C9CEC9C9C9CEC9C9C9CE
%C9C9C9CEC9FFFFCAFFFFFFCAFFFFFFCAFFFFFFA8FFA8CAA8FFA8FFCAFFFF
%FFCAA8A1A17DFD04A1FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9
%C8C9C8C9C8C9C8C9A6A67B7B7BA0FD047B507B507BC8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9FD0FFFA8FFCAFFA8FFCAFD04FFA8A1A8A1A1A1
%A8A1FFFFCAA1FD19FFCACEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C2
%C9C9C9C8CEC9C9C8CEC8A67BA67BA0FD047B75FD047BA6C9C9C8CEC9C9C8
%CEC9C9C8CEC9C9C8CEC9C9C8CAFFCFFFCAFFCFFFCAFFCFFFCAFFA8FFA8FF
%A8FFA8FFCAFFCAFF7DA17DA17DA17DA8CFCA7DA1A8FFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCFA6C9C8C9A6C9C8C9A6C9C8C9A6C9
%C8C9A6C9C8C8A0C9C8C9A6C9C8C9A6A6FD067B507B507B507B507B509FC8
%C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9FD11FFA7FD07FFCAA8A1A8A1A8
%A1A8A1FFFFFFCAFD19FFCFCEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C9
%C8C9C8C9C8CEC9C9C8CEC9C99FA67B7B75A67B7B7BA07B7B757B7BC9C8CE
%C9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCA7BA8FFCAFFFFFFCAFFA1A17DA1A1A17DA1A1FFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFCFC8C9C8C9C8C9C8C9C8C9C8
%C9A0C9C8C9C8C9C8C8A0C8C2C8A0C8C2C8A0A67B7B507B507B7B7B50A0C8
%C9C8A67BA6C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9FD10FFCF7B7CFD
%07FFA8A1A1A1A8A1A1A1A8A1FD1BFFCFC9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C2C9C8C9C8C9C8A0757B7B7B759F7BA0FD057BC9C8C9C8
%C9C8C9C8C9C9CEC8C9C8C9C8C9C8C9C8C9C8CFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFA07B50A7CFFFCAFFCFFFA8A17DA17DA17DA17DA1A8FFCAFFCFFF
%A8FFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCACFC8C9A6C9C8C9A6C9
%C8C9A0C8C8C9A6C9C8C9A6C9A0C8A0C9C8C9A6C97B7B507B7B9FFD067B50
%7B50A0C8C9A6C9C8C9A7CFC9CFA6C9C8C9A6C9C8C9A6C9FD0FFFA7A67B7B
%7BFD05FFA8CAA1A8A1A8A1A8A1A8A1FD05FFCAFFCAFFCAFD11FFCFC9C8CE
%C8C9C8CEC8C9C8C9C8C9C8CEC8C9C8CEC8C9C2C9C8C9C8CEC8A6A0C9A0A6
%7BA67BA67BA67B7B757B9FC9C8CEC8C9C8CFC9CFC9CEC8C9C8CEC8C9C8CE
%C8FFFFCAFFFFFFCAFFFFFFCAFFFFFF7CA0FD047B507B7CFFA1A17DA1A1A1
%7DA1A1A17DA1A8FFCAFFA8CAA8FFA8CAA8FFCAFFA8FFFFFFCAFFFFFFCAFF
%FFFFCACFC8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8C9C8C9C2C8A0C9C8C9
%C8C9C8C87BA0FD047B507B507B507B507B7BC8C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9FD0DFFA7A67BA67BA0FD057BA8A1A1A1A8A1A1A1A8A1A1
%A1FFFFFFA8FFCAFFA8FFCAFFA8FFCAFFCFFD0BFFCAC9C8C9C8C9C8C9C8C9
%C8C8C8C9C8C9C8C9C8C9C2C9C8C9C8C9C8C9C8C9A6A67BA67B7B757B7B7B
%757B7B7B757B7BC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CAFFCFFFCA
%FFCFFFCAFFCFCAFD067B757B507B507C7CA17DA17DA17DA17DA1A1FFCAFF
%A8CAA8FFA8CAA8FFA8CAA8FFA8FFA8FFCFFFCAFFCFFFCAFFCFCFA6C9C8C9
%A6C9C8C9A6C8A0C9A6C9C8C9A6C9A0C8A6C8A0C9A6C9C8C9A6C9A09F7B7B
%507B76A1A6A67B7B747B509FC8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9
%FD0BFF7CA67BA6FD047B757B7B7B757BA1A8A1A8A1A8A1A8A1CFFFFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFD0BFFCFCEC8C9C8C9C8C9C8C9C8C9C2C9
%C8C9C8CEC8C9C8CEC8C9C8CEC8C9C8C9FD067BA0A17CC9C8CEC8C9C8A6A0
%C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CAFFFFFFCAFFFFFFCAFFFFFF
%A7A07B7B517B757C7B7B757B50A1A1A17DA1A1A17DA1A1FFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFFFFFCAFFFFFFCAFFFFCFC8C9C8C8A0C9C8C8
%A0C9C2C8A0C9C8C9A6C8C8C9C8C8C8C9C8C9C8C97B7B507B507B9FC976A1
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9FD0AFFA7
%7B7B757B7B9F7B7B7BFFFFFF9AA09AA19A9A9ABCBCBC9AC3C3FD1BFFCFC9
%C8C9C8C9C8C9C8C9C8C9C8C8C8C9C8C9C8C9C8C9C2C9C8C9C8C9C8A0757B
%7BC8C8C9C8A176C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8CFFFCAFFCFFFCAFFCFFF757B507B757B7B7B757B507B7B9A939A93
%9A93BC9ABC9ABC9AC3CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCACFC8C9A6C9C8C9A6C9C8C8A0C9C8C8A0C9C8C9A6C9C8C8A0
%C9C8C9A6C9A0C8A6C9C8C9A6C9767DA6C9C8C9A6C9C8C9A6C9C8C9A6C9C8
%C9A6C9C8C9A6C9C8C9A6C9FD0AFFA67BA7A7A67BA67BA67B7B757B7BFD06
%A1C9C3C3A1CAA1FD1BFFCFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C2C9C8C9C8C9C8C9C8C9C8C9C8C9C8A17CC9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8FFFFCAFFFFFFCAFFFFFFCACF7B7B7B
%A07B7B747B507B507C7DA87DA87DFFA8FFA8FFA8FFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCACFC8C9C8C9C8C9C8C9C8C8A0
%C9C8C9A0C9C8C9C8C9C8C8A0C9C8C9C8C9C8C9C8C9C8C9C8C9767DC8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9FD0BFF7BA67BA0
%FD047B757B7B7B757BA8A87DA8A8FFA8FFA8FFA8FD1BFFCAC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C2C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%A17CC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CAFF
%CFFFCAFFCFFFCAFFCFFF7C7B757B5176A1A77B7B517B50A87DA87DFFA8CF
%A8FFA8A8CAFFCFFFCACAA1CFCAFFCFFFA8CAA8FFCAFFCFFFCAFFCFFFCAFF
%CFCFA0C9C8C9A0C9C8C9A0C8A0C9A0C9C8C9A0C9C8C9A0C8A0C9A0C9C8C9
%A0C9A6C9A0C9C8C976A1C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9
%C8C9A0C9C8C9FD0AFFA7FD047B75FF76CAFFFFFFA87DA7FD05A8FFA8CEC9
%FFA8FD04FFC39ABD9AFFFFFFCABD9A9AA1FD0BFFCAC9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C2C9C8C9C8C9C8C9C8A6C8C9C8C9C8A17CC9
%C9C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CAFFFFFFCA
%FFFFFFCAFF7B7B507B7BA8CA76A1FFCAFF7DA87DA87DA87DFFA77C9FA0A0
%FFCAFFFFA152CACA9A9AFFFF7676FFA19AA8FFFFFFCAFFFFFFCAFFFFCFC8
%C9C8C9C8C9C8C9C8C9C2C9C8C9C8C8C8C9C8C9A0C8C2C9C8C8A6C9C8C97B
%A6C8C9C9FFFFFFCAC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9FD0AFFA67CCAFD04FF76A7FFFFFFA8A8A87DFD04A8A052A0527CC9
%FFFFFF7D52A8FFCAC3FFFF527DFFFF9BCAFD0AFFCFC9C8C9C8C9C8C9C8C9
%C2C9C8C9C8C8A0C9C8C9C8C9C2C9C8C99FC8C8C9A6A6A6C9C9FFA8FFFFFF
%CFFFFFCFCACFC9CEC9C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCF767DFFCFFF7DA87DA87DA87DCF757C527C75
%C9A8FFA19A9AC3CACA9AFF9ABC9ACACAC3A8FFCAFFCFFFCAFFCFFFCACFC8
%C9A0C9C8C9A0C9C8C8A0C9C8C97BA0C8C9A6C9C8C8A0C9A6A67BC9C8A67B
%A6C8A8FD0EFFC9C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9FD11FF76A8FFFFFD
%09A8C8A0537CC8CAFFFFBD9ABCBCFFCAC3C3BCBCBCC3FF9BCAFD0AFFCFC9
%C8C9C8C9C8C9C8C9C8C9C8C9C8A67BC9A8FFCFCFC8CFC8C97BA6C8C99FA6
%A0C9C9CFC9A1FD0CFFC9C9C8C9C8C9C8C9C8C9C8C9C8C9C8FFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCAFFFF767DFFFFCA7DA87DA87DA87DFFA7A0527CA6FF
%A8FF9ABCBCBCCACA9ACA94BCBCC3CAC3A8FFCAFFFFFFCAFFFFFFCACFC8C9
%C2C9C8C9C2C9C8C8A0C9C8A67BA0A8FD07FFCFCFA7C9A6A67BA6A0C9C2C9
%7DFD0CFFC9C2C9C8C9C2C9C8C9C2C9C8C9C2C9FD10FFCA76A1FFFFA8A87D
%A8A8A87DA8A8FFA8CFA8FFA8FFFFBC9ABCBCCACAC3C3BCBCBCC3FF9ACAFD
%0AFFCAC9C8C9C8C9C8C9C8C9C8C8C8C9A0A07BA6C9CFFD08FFCACEA6A0A0
%C8A6C8A6A1A8FD0BFFC9C9C8C9C8C9C8C9C8C9C8C9C8C9C8CAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFA1767CFFCAA87DA87DA87DA87DFFA8CFA8FFA8CF
%A8A69ABC9ABCCACA9ACA94BC9AC3CFA1A8FFCFFFCAFFCFFFCAFFCFCFA0C9
%C2C8A0C9C2C8A0C8A0C8A0A07B7B7BC9C9FFCAFFFFFFCAFFFFFFA0A67BA6
%7BA67BA676A1FD0BFFC9C2C8A0C9C2C8A0C9C2C8A0C9C2C8FD10FFCA76A1
%FFFFFD09A8FFA8FFA8FFA8FFA6BC9AC3BCC8A0C3C3BCBCC3C3FF9AFD0BFF
%CAC9C8C9C8C9C8C9C8C9C8C8C8C97BA07BA6A6A6CAFD08FFC9A6A6A0A6A6
%A6A0A17CCFFD0AFFC9C9C8C9C8C9C8C9C8C9C8C9C8C9C8CAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFA1767CA69FA77DA87DA87DA87DFFA8FFA8FFA8FFA8
%A69ABC9ABCA0A099A09ABC9AC3FFA1A8FFFFFFCAFFFFFFCAFFFFCFC2C9C8
%C9C2C9C8C9C2C9C2C9A0A07B7C7BA67BA7A8FD07FF7CA67BA67BA67BA676
%7D7BFFA8CF7BA6A8FFFFFFCAC9C8C9C2C9C8C9C2C9C8C9C2C9C8C9FD0FFF
%CFA776A1A6A67DA8A8A87DFD04A8FFA8FFA8FFA8FFA6FD04BCC8A0A0A0BC
%BCBC9ACF9BCAFD0AFFCFC9C8C9C8C9C8C9C8C9C2C9C8A67BA6A0A67BA6A0
%CFCFC9A0CFCAFFFFA67BA6A0A67BA6A0A176A6FFFFA8A6A0A7CACFCFFFA0
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8CFFFCAFFCFFFCAFFCFFFCAFFCFFFA7A6
%7C7C76A69FA17DA17DA17DA17DC3A1C9A1C3A1C9A1A0759975997BA099A0
%93BC9AC27B9AA7FFCAFFCFFFCAFFCFFFCACFC2C8A0C9C2C8A0C9C2C89FA6
%7BA67BA67BA67BA6A8CFA7A6A0CF7BCF7B7B507B7A7B7BA6767C7BFFA7CA
%7BA6A0CF7CCAA8A69FC8C2C8A0C9C2C8A0C9C2C8A0C9FD0DFFFD04A676A1
%A6A09ABC9A9A9ABC9A9ABCC3BCBC9AC2997B747B7A7A747B7A7A7AA09ABC
%9AA69AA6A7FD09FFCFC9C8C9C8C9C8C9C8C9A0A6A6A6A0A6A6A6A0A6A6FF
%A7CFA0A67B7B7A7A747B7A7A747B7A7B7BA6A8A7A8A6A6A7A8A6A8CFA0A6
%A6C8C8C9C8C9C8C9C8C9C8C9C8FFFFCAFFFFFFCAFFFFA6FD047B7A7B7B7C
%757B507A507B747B507A507A507A507A507A507A507A507A507A507A507A
%507A507B747B7A7B7BA7CAFFFFFFCACFC2C8A0C9C2C8A07B7A7B747B7A7B
%747B7A7B747B7A7A507A507A507A507A507A507A507A507A507A507B507B
%7B7B747C7B7B747B7A7B7BC9C2C8A0C9C2C8A0C9FD08FFCF7A7A507A7A7A
%507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A
%7A7A507A7A7A507A7A7A507A7AFD05FFCAC9C8C9C2C9C87B507A7A7A507A
%7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A
%507A7A7A507A7A7A507A7A7A9FC9C8C9C2C9C8C9C2CAFFCFFFCAFFCFFFCA
%A77CA67CA77CA67CA7FD247B7CA67CCFCFFFCAFFCFCFA0C9C2C8A0C9A09F
%7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F
%7B9F7B9F7B9F7B9F7B9F7B9F7B9F7B9F9FC8A0C9C2C8A0C9C2C8FD3FFFCA
%C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8
%C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2
%C9C8C9C2CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFCFA0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8FD3FFFCAC9C2C9C8C9C2C9C8C9C2C9C8C9C2
%C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8
%C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8CFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCACFC2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9FD3F
%FFCAC9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCACFC2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8A0C9FD3FFFCAC9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2A8CFCACFA8CFCACF
%A8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CF
%CACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACAA0C9C2C2
%A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9
%C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2A0C9C2C2
%C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8
%C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2
%C9C8C9C2CFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAA0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFC9C2C9C8C9C2C9C8C9C2C9C8C9C2
%C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8
%C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8CFFD3FFFC2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9CAFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8FD40FFC2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2
%C9C2C9C2C9C2C9C2C9C2C9C2C9CAFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFC9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8FD40FFA0C9C2C8A0C9
%C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8
%A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A0C9C2C8A8FF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8FD40FFC2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2
%C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8C9C2C9C8
%C9C2C9C8C9C2C9C8C9C2C9C8C9CAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFC9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C9CFC9CF
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8CFFD3FFFC8C9A0C9C8
%C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9A0C9A0C9C8C9A0C9C8C9A0C9C8C9A0
%C9C8C9A0CAC9CFA7C9C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9CA
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCAFFCACAA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8FD04C9CEC9C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8FD1BFFCAFD09FFCAFD1AFFC8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8A67BA57B7B7A7B9FC9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CAFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFA8A1A1CACAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFC9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9A0C9C8C9C8C9C8A69FA57BA57B9F7B7B7BC8
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8FD
%1AFFCFA1A8A1FD22FFA0C9C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0C9C8C9A0
%C9C8A57BA57A7B7A7B7A7B7A7B50A0A0C99FC9A0C9C8C9A0C9C8C9A0C9C8
%C9A0C9C8C9A0C9C8C9A0C9C8C9A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA
%FFCFFFCACFA8FFCAFFCFA87DA1A1FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFC9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C99FA67B9F7BA57B9F7BA57B7B75A6A6A6C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8FD17FFA8FFFFFFA1A8
%A1FD22FFC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C99FA57B9F
%7A7B7A9F7A7B7A9F7A7B50C89FA69FC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9CAFFFFFFCAFFFFFFCAFFFFFFA8FFA8FFA8FFFFFFCAFF
%A1A1A8FFFFA17DFFFFFFCAFFFFFFCAFFA8A8A1CAFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFFFFFCAFFFFFFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8A69FA57BA57B9F7BA57B9F7BA57B7B7BA67BC9C8C9C8C9C9CFCA
%CFC9CFC9C9C8C9C8C9C8C9C8C9C8C9C8FD0BFFCAFFA8FFCAFFA8FFFFFFA8
%A8A1FD0AFFCAA1A8A8A8A1A1A1CACAA8A1CAFD11FFC8C9A6C9C8C9A6C9C8
%C9A6C9C8C9A6C9C8C9A6C9C8C97BA57B9F7B7B7A7B7A7B7A7B7A7B747B7B
%C8C8C9A6C9C8CFA7CFC9CFA7CFC8C9A6C9C8C9A6C9C8C9A6C9CAFFCAFFCF
%FFCAFFCFFFA8FFCAFFA8FFCAFFA8FFCFFFA1FFCFFFCAFFCFFFCAFFCFCA7D
%A17DA17DA17DA17DA17DA17DCACFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFC9
%C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9A6A69FA57BA59FA69FA6
%9FA57BA57B9F7BA57BA6C8CEC8C9C9CEC9CEC9CEC9C9C8CEC8C9C8CEC8C9
%C8CEC8FD19FFCAFD07FFA1A8A1A8A1A8A1A8A1A8A1A8A1A8A8FD10FFC8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8A57B9F7A7B7BA57B7B7BA5
%7B7B7A9F7A7B7A9F7B7BC8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9
%C8C9CAFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAA8A1A1A7FF
%FFFFCAFFFFFFCAFFCACAA8FFA8CAA8FFA8FFCAFFFFFFCAFFFFFFCAFFFFFF
%CAFFFFFFCAFFC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8A69FA57B
%A57B9F7BA57B9F7BA57B9F7BA57B9F7B9F7BA6C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8FD14FFCACAFFA1A8A1A1FD08FFCAFFCAFFA8FFCA
%FFA8FD14FFA6C9C8C9A6C9C8C9A6C9C8C9A7CFC9C9A6C9C8C97B9F7A7B7A
%7B7A7B7A7B7A7B7A7B7A7B7A7B7A7B7A7B7BC9A6C9C8C9A6C9C8C9A6C9C8
%C9A6C9C8C9A6C9C8C9A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF7D
%A8A8A17DA17DA1A8FFCFFFCAFFCFFFA8CFA8CAA8CFA8CFA8FFCAFFCAFFCF
%FFCAFFCFFFCAFFCFFFCAFFCFFFCEC8C9C8CEC8C9C8CEC8C9CACFCFCFCACF
%C9C9C8A57B9F7BA57B9F7BA57B9F7BA57B9F7BA57B9F7BA57B7BC8CEC8C9
%C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8FD17FFA8A8A1A8A1A8FD06FFCF
%FFCAFFCAFFCAFFCAFD14FFC8C9C8C9C8C9C8C9C8C9C8C9C9CEC9C9C9CEC8
%C97A9F7A7B7A9F7A7B7A9F7A7B7A9F7A7B7A9F7A7B7A7B7BC9C8C9C8C9C8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFA8CAA8A77DA1A1A17DFFFFFFCAFFFFFFA8FFA8CFA8FFA8FFA8
%FFCFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFC9C8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8A57BA57B9F7BA57B9F7BA57B9F7BA57B9F7BA57B7B
%75A6C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8FD13FFA8A1A1A8
%A1A1A1A8A1A1CAFD07FFA8FFCAFFA8FFCAFFCAFD12FFC8C9A6C9C8C9A6C9
%C8C9A6C9C8C9A6C9C8C9A6C99F7B7A7B7A7B7A7B7A7B7A7B7A7B7A7B7A7B
%507B507BA0C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9CAFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFA8A17DA17DA17DA17DA1A8FFCAFFCFFF
%CAFFA8CAA8FFA8CAA8FFA8FFA8FFCACFA8FFCFFFCAFFCFFFCAFFCFFFCAFF
%C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C97BA57B9F7BA57B9F7B
%A57B9FFD047B75FD047BCEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8
%CEC9FD13FFFD07A1C3A1FD09FFCAFFCAFFCAFFCAFFCFFFFFFFCAFD0EFFC8
%C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8A67A9F7A7B7A9F7A7B7A
%9F7A7B507B517B507B7BC9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8
%C9C8C9CAFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFA19A949A93BCBCBC9A
%BCC3FFCAFFFFFFCAFFCACAA8FFA8CAA8FFA8FFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFCEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9C9C8CEC9A6
%7BA57B9F7BA57B9F7B7C7B7C757B7B7B9FCEC9C9C8CEC9C9C8CEC9C9C8CE
%C9C9C8CEC9C9C8CEC9C9C8FD12FFA752765276767D767D76A8FD06FFCAFF
%CAFFA8FFCAFFA8FD14FFA6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9
%A6C9C87B507B7A7B757B7476757B767BA0C9C8C9A6C9C8C9A6C9C8C9A6C9
%C8C9A6C9C8C9A6C9C8C9A6C9C8C9A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFF7D7D527D527D7CFD047DFFCFFFCAFFCFFFA8CFA8CAA8CFA8CFA8FFCA
%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCEC9C9C9CEC9C9C9CEC9C9C9CE
%C9C9C9CEC9C9C9CEC9C9C9C87B7B75A17B7B76A0767CA6CEC9C9C9CEC9C9
%C8FD04C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9FD12FFA87DA87D7D7DA8
%7DA87DFD04FFCAC9CAA1FD04CAFFCAFFCAFD14FFC8C9C8C9C8C9C8C9C8C9
%C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9A09F757C7B7C767CA6C9C8C9C8C9
%C8C9C8C8A0C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9C8C9CAFFFFFFCAFF
%FFFFCAFFFFFFCAFFFFFFCAFFFD057DA87DA87DA87DC39A9A9ABCBCBC9ABC
%BCBC9AC3A8FFA8FFCFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFC9C9CEC9
%C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9C97CC9A07C76
%CEC9C9C9CEFD04C9C2C8A0FD04C9CEC9C9C9CEC9C9C9CEC9C9C9CEC9FD12
%FFFD057DA8A87DA87D7D76A176A1767D76A176A176A176A17DFFCAFD12FF
%C8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9A6C8A6C9C8C9A6C9C8C9A6C9C8A1
%7C7D76A0A6C9C8C9A6C9C8C9A0C9C8C9A6C9C8C9A6C9C8C9A6C9C8C9A6C9
%C8C9A6C9CAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFFD057DA87DA87D76
%527D527D5252527D767D527D767D527DA8FFA8FFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9C9C8CEC9CEC9CEC9
%CEC9CEC9CEC9A17C7CA0CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CEC9CEC9CEC9CEC9FD12FFA87D7D7DA8A8A87DFD08A8FFFFFFA8FFFF
%FFA8FFCFFFCFFD12FFC9C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9C9C9C8C9C9
%C9C8C9C9C9C8C9C9C97CA176C9C8FD04C9CEC9C9C8C9C9C9C8C9C9C9C8C9
%C9C9C8C9C9C9C8C9C9C9C8C9CAFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFCA
%FD057DA87DA87DFD09A85959597E5984A8FFA8FFCAFFFFFFCAFFFFFFCAFF
%FFFFCAFFFFFFCAFFCEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CECACFC9CEC9A7767DC9CEC9CEA8FFCFCEC9CEC9CEC9CEC9CEC9CEC9
%CEC9CEC9CEC9CEC9CEC9CEC9FD0BFFA8A0CFFFFFFFA8FD067DA87DA87DFD
%06A8FFA85A595A355A7DFFA8FD14FFA6C9C9C9A6C9C9C9A6C9C9C9A6C9C9
%C9A6C9C9C9A6C9C9C9A8A87DC9A6C9A07C76C9C9C975527DFFA7C9C9C9A6
%C9C9C9A6C9C9C9A6C9C9C9A6C9C9C9A6C9C9C9A8FFCFFFCAFFCFFFCAFFCF
%A050A7CFFFCAA8FD057DA87DA87DFD09A82F5935592F5AA8FFA8FFCAFFCA
%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCEC9CEC9CEC9CEC9CEC9C9C9CEC9CE
%A6C9A6C9C9CEC9CEC9FFA8769ACEC9C976A1C9CEC9C27CA8FFCFC9CEC9CE
%A6C8A6FD04C9CEC9CEC9CEC9CEC9CEC9CEC9FD0BFF7B7B7BFFFFFFA87D7D
%A87D7D7DA87DFD08A8FFA860595A59607DFFCAFD14FFC9CEC9C9C9CEFD04
%C9C8C9C9CEA6A67BA69FA6A6C9A6C9CAFFA0C3C9CEA77C76CEC9C9A7CECA
%FFA6C9A6C9A0A69FA67BA6A0C9C9CEC9C9C9CEC9C9C9CEC9C9CAFFFFFFCA
%FFFFFFCAFFA77B507BA7FFCAA8FD057DA87DA87DFD09A85984595A5984A8
%FFA8FFCFFFCAFFA6FFCAFFFFFFCAFFFFFFCAFFFFFFCEC9CEC9CEC9CEC9CE
%C9CEC9CEA6A6A5A69FA6A5A69FA6A5A7FFCFC9CEC9C976A1C9CEC9CEC9FF
%CFA69FA6A6A69FA6A5A69FA6C9CEC9CEC9CEC9CEC9CEC9CEC9FD0AFFA67B
%7B75A6FFFFFD067DA8A87DFD08A8FFFFFFA8FFFFFFA8FFCAFFCAFFFFFFA7
%A6A7FD0CFFC9C9A7C9C9C9A7C9C9C9A7C9A6A67BA69FA67BA69FA67BA57B
%CFA8A67B7B7B7C769F7AA57BA7FFCF7BA67BA69FA67BA69FA67BA6A6C9A7
%C9C9C9A7C9C9C9A7C9CAFFCAFFCFFFCAFFCFFF517B507B50FFCFA8FD057D
%A87DA87DFD09A85959597E5984A8FFA8FFA8FFCFA67BA6CAFFCAFFCFFFCA
%FFCFFFCAFFCEC9CFC9CEC9CFC9CEC9CEA6A69FA6A5C9A7CFCFFFFFCFA6A6
%A7FFA67B7A7B7BA07BA57BA5A7FFCFA7A8FFFFFFA7A6A5A69FA6A5A6A6C9
%C9CEC9CFC9CEC9CFC9FD09FFCA7B7B7B757BA8FF7DA87D7D7DA8A8A87DFD
%08A8FFA85A5960595A59FFCFFFCFFFFFFF7BA6A6CFFD0BFFC9C9C9CEC9C9
%C9CEC9C97BA59FA67BA59FFD0AFFA7747A507B757A507B7BCFFD08FFA8A7
%A6A67BA69FA67BCEC9C9C9CEC9C9C9CECAFFCAFFFFFFCAFFFFA8507B507B
%50A7FFFD067DA87DA87DFD09A835593559357EA8FFA8FFCAFFA7A57BA6A6
%FFCAFFFFFFCAFFFFFFCAFFCFC9CFC9CFC9CFC9CFC97B7BA57BA57BA7A8AF
%FD08FFA7A57B9F7BA57B9F7BA5CFFD05FFA9FD05FFA7A77BA57BA6A6CFC9
%CFC9CFC9CFC9FD09FFA87B757B7B7BA7FFFD077DA87DA87DFD06A8FFA85A
%595A355A7DFFA1C3C3FFFFA77BA67BA6FD0BFFA7CEC9C9A7CEC9C9A69F50
%7B7AA57B9F7BFFA9A9A8FD06FFA67AA57B9F7AA57B9F7AA6FD04FFA9A984
%A9A8AFFFCF7B9F7A7B7AA6A7CEC9C9A7CEC9C9CAFFCFFFCAFFCFFFCAFF7B
%7B507B75FFCAFD067DA87DA87DFD09A8595A595A5984A8CA9A9AA1FF7BA6
%7BA57BFFCFFFCAFFCFFFCAFFCFFFCFC9CFC9CFC9C99FA57B7B7AA67CA67C
%A67CA8A8FFCFFFA9FFA8A77C837C837C837C837C837CA77DA9A8A8A8FFA8
%A8A7A77CA67C9F7A7B7BA6A6CFC9CFC9CFC9FD0BFF7CA07CCFCAFF7D7D7D
%A87D7D7DA87DFD08A8FFA8FFFFFFA8FFFFFFCAFFCABCFFA69FA67BA6CFFD
%0AFFC9CFC9C9C9A6507A507A507D7E857E7F7E857E7F7E7F5A7F5A7F5A7F
%5A7F5A7F5A7F5A7F5A7F5A7F5A7F7E7F7E857E7F7E857E7F587A507A507A
%7BC9C9CFC9C9CAFFFFFFCAFFFFFFCAFFFFFF7CA67BA57CFD067DA87DA87D
%FD08A8FF7DA87D7D7DA8A8FFA8C394CAA7A67BA5A6FFFFFFCAFFFFFFCAFF
%FFFFCFC9CFC9CFA77B7A7A507A7C857E857F857E857F857E857F857E857F
%857E857F857E857F857E857F857E857F857E857F857E857E7B507A7A7A74
%C9C9CFC9CFC9FD09FFA8CFA77C7BA67BA6FD067DA8A87DA8A8A8A7A7A8A8
%A8FFFF7D527D527DA8FFCAFFA1BDFFFFA8A7A7FD0CFFC9CAA7CFC9CAA7CF
%C9CAA7CFC9CAA7CFC9CAA7CFA77F5A7F7E7F5A857F857E857F857E857E7F
%5A7F7E7F5AA8C9CAA7CFC9CAA7CFC9CAA7CFC9CAA7CFC9CAA7CFCAFFCAFF
%CFFFCAFFA6A57BA676A57B9A9A9A769A769A76A19AA0757B507A507A507B
%7CA77D7C527D52A8A8A8A7A776A8A8FF7DFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CBA8A97F857F857F857F857F
%A97F857FA97F857F857F857F857EA8A8CFCACFC9CFCACFC9CFCACFC9CFCA
%CFC9CFCAFD07FFCAA67BA69F7D7BA69A9A9ABC9A9A999F7A7A747B7A7A74
%7B7A7A747B7A7A517C767DA8A87D7C527D527CA8A1FD0DFFC9CFC9CFC9CF
%C9CFC9CFC9CFC9CFC9CFC9A87E857E7F7E857E7F7E857E7F7E857E7F7E85
%7E7F7E857E7F7E857E7FA2CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFCAFF
%CAFFFFFF7B7A507A507A517A507B747A507A507A507A507A507A507A507A
%507A507A507A507A507A507B517B507B517A507A507A50CFFFFFCAFFFFFF
%CAFFCFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCAA97EA984A97EA984A97E
%A984A97EA984A97EA984A97EA984A97EA984CFC9CFCACFC9CFCACFC9CFCA
%CFC9CFCACFC9FD06FFA6507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A
%507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7A507A7A7BA8FD
%08FFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CF
%A7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CFC9CFA7CF
%C9CFA7CFC9CFCAFFCFFFCAFFCFA8A7CAA7A8A7CAA7A8A7CAA7A8A7CAA7A8
%A7CAA7A8A7CAA7A8A7CAA7A8A7CAA7A8A7CAA7A8A7CAA7A8A7CAA7A8A7CA
%A8FFCAFFCFFFCAFFCFFFCFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA
%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA
%CFCACFCACFCACFCACFCACFCACFCAFD40FFC9CFCACFC9CFCACFC9CFCACFC9
%CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCA
%CFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFCACFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCFCACFCACF
%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACF
%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCAFD
%40FFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CF
%CACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACFA7CFCACF
%A7CFCACFA7CFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCF
%CFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCA
%CFCFCFCACFCFCFCACFCFCFCACFCFFD40FFCACFCACFCACFCACFCACFCACFCA
%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA
%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCFFFCAFFFFFFCAFFFF
%FFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCA
%FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFCFCFCAFF
%CFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCF
%CAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFD
%40FFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACF
%A8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CF
%CACFA8CFCACFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF
%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFCFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 11 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-29T13:51:39+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-12-29T13:51:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-12-29T13:51:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>196</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAADEAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9SXf+8k3/GNv1HKs/wDdy9xZ4/qHvYLLd28bBS4LE04ggkfMZx9O/ECW47m3&#xA;cmjjbr9G3fApiQ1cTgKBbnnKw+BTQA7+NaZZARMhfJYx7+SrO8cMrxtIrenQMy1I38MjOIBq2MbI&#xA;uljXNsGCq9WboMBrokRKrp08MtzAY3DHmhK1+JdxsR2y3CKyR94YZYkRPudqcMz6pchCxJkagBPj&#xA;npWGQEBfc+b6mEjllXeh1tblpfRBb1TSiVNd8nLLGI4jyaY4ZmXCLtTuI7iASepUGLqpam+RlmHB&#xA;xBsx6eRnwysKccnOL1A7AA0YVrRqVKkg9cGHPGY2CculnA1askMrlRGzOWFQATlvEGrwpXSb+WI5&#xA;U1Ng5O0bVBr4jMTWEGG3e5/ZkSMu/cwz6h7Z5u+q+Mo3KWlsY/rEiReqSIy5ABKip3PgMnHFKXIW&#xA;xOpA5leLaCSMSQuJFbYOCCpNadQTjKBB3BTHPanaW0ksIeSMxuS1UIoQASNwfljKFGgzllAVhZxM&#xA;KoQ1PtUptXAYsBmb+oe2RpPjPVdMHHTrUeEMY/4UZ1+D6I+4PIZz65e8onLWp2KuxV2KuxVRvTSy&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:433c6e47-b9ab-274a-8a97-7e31000f3d99</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:433c6e47-b9ab-274a-8a97-7e31000f3d99</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:e5872eba-8f6e-7549-85a8-c79ff916236c</stRef:instanceID>
            <stRef:documentID>xmp.did:e5872eba-8f6e-7549-85a8-c79ff916236c</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cf50cafe-8bb0-2445-a735-23863c14d1cb</stEvt:instanceID>
                  <stEvt:when>2017-12-22T11:25:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:433c6e47-b9ab-274a-8a97-7e31000f3d99</stEvt:instanceID>
                  <stEvt:when>2017-12-29T13:51:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1683.403093</stDim:w>
            <stDim:h>1015.869137</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -999 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 999 li
999 999 li
999 0 li
cp
clp
999 999 mo
.000250089 999 li
.000250089 0 li
999 0 li
999 999 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
500 500 mo
.000244141 500 li
.000244141 0 li
500 0 li
500 500 li
cp
0 .0210574 .0193179 0 cmyk
f
999 999 mo
499 999 li
499 499 li
999 499 li
999 999 li
f
999 500 mo
999 500 li
500 500 li
500 499 li
499 499 li
499 0 li
999 0 li
999 500 li
584.453 407.43 mo
584.453 407.43 li
582.258 256.077 li
585.972 260.062 li
604.727 280.177 li
616.138 292.416 li
616.138 292.416 li
616.104 288.795 li
602.186 266.571 li
592.898 251.74 li
585.007 249.399 li
585.544 247.645 li
582.674 244.568 li
584.806 237.599 li
597.742 195.298 li
597.742 195.298 li
597.742 195.298 li
594.624 197.138 li
581.811 221.294 li
574.136 235.762 li
576.072 243.842 li
574.383 244.232 li
573.196 248.111 li
573.148 248.269 li
522.974 259.848 li
526.127 261.629 li
553.453 260.648 li
569.821 260.059 li
575.729 254.458 li
573.508 407.43 li
584.453 407.43 li
676.439 382.577 mo
676.439 382.577 li
673.439 212.921 li
673.637 212.921 li
676.342 208.235 li
686.124 208.235 li
745.048 208.235 li
741.49 204.979 li
684.308 193.929 li
674.859 199.49 li
674.748 199.298 li
673.637 197.374 li
668.033 197.374 li
660.7 184.673 li
633.717 137.937 li
633.376 139.483 li
632.677 142.647 li
644.574 177.074 li
651.698 197.694 li
661.328 203.147 li
660.173 205.147 li
662.985 210.017 li
641.671 246.935 li
628.69 269.42 li
633.289 267.966 li
657.155 240.45 li
657.155 240.449 li
664.522 231.957 li
661.86 382.577 li
676.439 382.577 li
923.138 224.348 mo
923.138 224.348 li
923.138 215.697 916.125 208.684 907.474 208.684 cv
898.823 208.684 891.811 215.697 891.811 224.348 cv
923.138 224.348 li
866.874 122.916 mo
856.534 122.916 848.151 131.298 848.151 141.639 cv
878.444 141.639 li
885.597 141.639 li
904.993 141.639 li
904.993 134.307 899.049 128.364 891.719 128.364 cv
888.28 128.364 885.156 129.683 882.799 131.828 cv
879.501 126.487 873.612 122.916 866.874 122.916 cv
level3{
gsave
clp
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!&091!&091!&'0/!&'-.!&'*-!%s!+!%rs*!%rm(!%id&!%ia%!%`U"!%WKu!%WEs!%N9p!%N6o!%E*l
!%;si!%;mg!%2ad!%)Ua!$uF]!$u@[!$l7Y!$c(U!$YtS!$YnQ!$PbN!$GSJ!$GMH!$>>D!$52A!?G/?
!?=u;!?4i8!?4`5!?+Q1!?"E.!>n9+!>e*'!>[s$!Ymm!!Yd`s!Y[Qo!YREl!YR<i!Y@$c!Y6j_!Y-[[
!Y$LW!Xp=S!Xg.O!X^"L!XThH!XTbF!XKSB!=';=!<s/:!<iu6!<il3!<``0!<WQ,!<NE)!<E9&!<<*"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!&091!&091!&091!&9?2!&BE3!&BE3!&KK4!&TQ5!&]W6!&f]7!&oc8!'#i9!',r;!'?)=!'H/>!'Q2>
!'c>@!'uJB!(2VD!(D_E!(MhG!(_tI!(r.L!)/:N!)AFP!)SOQ!)naT!*"gU!*>$X!*P0Z!*b<\!*tE]
!+1Q_!+C]a!+^lc!+q#e!,./g!,IAj!,dPl!-!\n!-<nq!-O%s!-j4u!.0G#!.KV%!.fh(!/#q)!/?.,
!/Z=.!/uO1!0;a4!0Vs7!0r0:!18B=!1ST@!2"lD!2G2I!2bDL!2tPN!3:eR!3LqT!3h+V!47CZ!4RR\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\
!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\
!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\
!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\!4RR\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.424272 .994595 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzz!!!!!~>
<~!!!$#!WiH,"9\i2"U52:#RC\B#mq"I$OdIR%Ls![&J5Tf&ebrn'bqK"(Dmu,)&aD3)]Kb:*?H7D+!2RI
+X&!P+sS<X,U=W]-71)f-RU;k.4H\q.Olr!/1`>(/M/P+/hSb//hSe10/"t30/#"50ekC;0etL?1GgpF
2)R9M2`EZT3&s#]4$,Pe4[)(q5X@_(6q'O67Rp!@8kViO9hnJ\;,^Cl<E<1'=^#!5>[:ZC?smGRA7]@c
B5)*rD/O92EH6,BF`r"TH@('hIt<0&KS>/9M2I4NNfT9bPE_B"R$sM8StMgQV5C/gWN*##Xfen5Za@0L
~>
<~!!*0)"U55>$OdLV&JGio(E",2*?QCJ,:+]c.P*2*1,LmJ3''/b5!VD#6q0[;8P;cQ:f1+i<EE:*>?kH@
@:E_WAS,RhBkhF#DfB]:F*)SLG^4R\I!pHmIt3*%JqJ`1L5(J=LkpnEM2@(GM2@(GM2@(GM2@(GM2@(G
M2@(GM2@(HMMd:KMMd:KM2@(GM2@(GM2@(GM2@+IMMd:KMMd:JM2@(GM2@(GM2@(GM26tDLkpkCLPLY?
LPLY?LPCP<L5(G;L5(D9KnY56KS5#3K7ef/JqAT+JqAT+JqAT+JqAT+JqJ].K7ef/KS5#3KS4u1K7ef.
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
500 999 mo
.000250089 999 li
.000250089 499 li
499 499 li
500 499 li
500 500 li
500 999 li
325.617 824.98 mo
314.79 824.98 305.099 832.585 302.865 843.607 cv
302.627 844.779 302.483 845.948 302.425 847.107 cv
420.902 871.127 li
421.301 870.038 421.623 868.905 421.861 867.733 cv
424.411 855.153 416.282 842.888 403.702 840.338 cv
402.593 840.113 401.487 839.976 400.389 839.912 cv
398.841 833.623 395.434 827.94 390.667 823.613 cv
401.797 820.823 li
401.192 817.611 398.599 815.443 395.665 815.443 cv
395.176 815.443 394.679 815.503 394.179 815.629 cv
391.243 816.364 389.175 819.12 389 822.199 cv
385.135 819.142 380.511 816.922 375.35 815.876 cv
373.178 815.435 371.012 815.223 368.879 815.223 cv
357.454 815.223 346.938 821.298 341.145 830.914 cv
338.168 828.242 334.465 826.3 330.26 825.448 cv
328.702 825.132 327.148 824.98 325.617 824.98 cv
83.2949 814.498 mo
79.7661 814.498 76.4895 817.181 75.7083 820.897 cv
89.8221 822.997 li
90.6779 818.924 88.2122 815.152 84.3146 814.573 cv
83.9737 814.522 83.6332 814.498 83.2949 814.498 cv
134.199 773.935 mo
132.951 773.935 131.684 774.223 130.48 774.832 cv
126.069 777.064 124.177 782.757 126.253 787.548 cv
142.226 779.464 li
140.717 775.982 137.525 773.935 134.199 773.935 cv
346.381 756.645 mo
345.182 756.645 343.961 756.792 342.734 757.1 cv
334.132 759.255 328.563 768.462 330.295 777.666 cv
361.444 769.863 li
359.959 761.972 353.589 756.645 346.381 756.645 cv
103.733 679.511 mo
93.3923 679.511 85.0101 687.894 85.0101 698.234 cv
115.303 698.234 li
122.456 698.234 li
141.852 698.234 li
141.852 690.903 135.909 684.96 128.577 684.96 cv
125.139 684.96 122.016 686.278 119.658 688.423 cv
116.36 683.083 110.471 679.511 103.733 679.511 cv
371.223 638.017 mo
360.883 638.017 352.5 646.399 352.5 656.739 cv
382.793 656.739 li
389.946 656.739 li
409.342 656.739 li
409.342 649.408 403.399 643.465 396.068 643.465 cv
392.629 643.465 389.506 644.784 387.148 646.929 cv
383.85 641.588 377.961 638.017 371.223 638.017 cv
337.958 593.678 mo
337.958 593.678 li
337.958 585.028 330.945 578.015 322.294 578.015 cv
313.643 578.015 306.631 585.028 306.631 593.678 cv
337.958 593.678 li
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
584.453 407.43 mo
573.508 407.43 li
575.729 254.458 li
569.821 260.059 li
553.453 260.648 li
526.127 261.629 li
522.974 259.848 li
573.148 248.269 li
573.196 248.111 li
574.383 244.232 li
576.072 243.842 li
574.136 235.762 li
581.811 221.294 li
594.624 197.138 li
597.742 195.298 li
597.742 195.298 li
597.742 195.298 li
584.806 237.599 li
582.674 244.568 li
585.544 247.645 li
585.007 249.399 li
592.898 251.74 li
602.186 266.571 li
616.104 288.795 li
616.138 292.416 li
616.138 292.416 li
604.727 280.177 li
585.972 260.062 li
582.258 256.077 li
584.453 407.43 li
level3{
gsave
clp
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"&,*_"&,*_"&#$^"&#!]"&"s\"%njZ"%ngY"%ndX"%e[V"%eUT"%\LR"%\IQ"%S@O"%S:M"%J1K"%J+I
"@\(G"@\%F"@RnC"@Ib@"@@V="$q>8"@7A7"@.54"@%)1"@%#/"?pl,"?g`)"?g]("?^Q%"?^K#"?U;t
"?L/q"?L)o"?Brl"?9fi"?9`g"?0Td"?0Nb"?'?^">s3[">j'X">`pU">`gR">W[O"YiXM"Y`LJ"Y`CG
"YW7D">3"@">2q>">)b:"=lM5"Y)J3"Y)A0"Xu5-"Xl&)"Xbo&"XY`""XPSt"XPJq"XG>n"X>/j"X5#g
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"&,*_"&,*_"&50`"&50`"&>6a"&>6a"&>6a"&G<b"&PBc"&PBc"&bNe!`PKe!`YQf!`bWg!`k]h!EYZh
!Eb`i!Etlk!F(rl!F2#m!F;)n!FM5p!+D8q!+M>r!+VAr!+hMt!,%Z!!,7f#!,@l$!,S#&!,e2)!,n5)
!-4G,!-FP-!-X\/!-jh1!-sn2!.1(5!.C47!.^F:!.pR<!/-[=!/?g?!/QsA!/m0D!0*<F!0<HH!0NTJ
!0ifM!1&uP!1B2S!1]GW!1oPX!25b[!2Gk\!2c(_!2u1`!3;Cc!3MOe!3_[g!3qgi!4/!l!4J3o!4eEr
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr
!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr
!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr
!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr!4eEr
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.424272 .994595 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"9\i1"9\i1"9\i1"9\i1"9\i0!s8W-!sA`0"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE(!<E3%!<E3%zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~+X/-U,U=W],pjrd-R^Dm.4H_s/1iG*/M8\00/#"50etL>1,CaD2)R9M2E*QR2`NfX3B9,]4$,Md4?P_h
5!D.o5<qJ!5X@\&6UO706psI477Ka97n6'>84Z9C8P)KF8kM]J8kM`L91qoO9MA,R9he>V9he>W:/=Y]
:JXea;GpCk;cH^r<E3(#='&L,=^#!5>?kE=?!^lG@:<VS@Uiq[AnPaiBk_<tCi+$,DJsK7F)uGGG'A1U
G^4U^I!pHoJ:W<)KS>/8LPUhGN/`gWO-#KePa%H"R$jD5SXlCGTq\<XV5C/hWiN5&Xfek3Z*L^C[C3TT
~>
<~*ZuUN,UFfe.P!)'0/57>2)dKU4$>en5sn%/7S$*C9MJ8X;,U@n<``F->[:ZC?t!PUAS,RgC2@a)DfBZ9
F*)PJGBnL]I"$QrJqJ`1L5(M@MMmCONfK0]OH>WhPE_;sQBml(R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$X/+Q^=&*Q^=&*R$a8.R$X/+Q^=#(QBmi&
QC!r)Q^=&*Q^=&*QBmi&QBmi&QBmi&QBmi&Q^=&*Q^F/-R$a5,Q^=#(QBmi%Q'IW"Q'IW"QBmi&QBmi&
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
676.439 382.577 mo
661.86 382.577 li
664.522 231.957 li
657.155 240.449 li
657.155 240.45 li
633.289 267.966 li
628.69 269.42 li
641.671 246.935 li
662.985 210.017 li
660.173 205.147 li
661.328 203.147 li
651.698 197.694 li
644.574 177.074 li
632.677 142.647 li
633.376 139.483 li
633.717 137.937 li
660.7 184.673 li
668.033 197.374 li
673.637 197.374 li
674.748 199.298 li
674.859 199.49 li
684.308 193.929 li
741.49 204.979 li
745.048 208.235 li
686.124 208.235 li
676.342 208.235 li
673.637 212.921 li
673.439 212.921 li
676.439 382.577 li
level3{
gsave
clp
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
918.517 417.573 mo
873.469 385.424 805.507 362.876 740.287 362.876 cv
675.066 362.876 601.34 383.585 562.057 417.573 cv
918.517 417.573 li
cp
.272251 .20737 .765255 .00146487 cmyk
f
635.333 389.018 mo
629.682 375.199 li
631.91 375.199 li
626.16 361.138 li
628.426 361.138 li
622.601 346.893 li
625.177 346.893 li
616.776 326.345 li
608.373 346.893 li
610.95 346.893 li
605.125 361.138 li
607.39 361.138 li
601.641 375.199 li
603.868 375.199 li
598.218 389.018 li
635.333 389.018 li
cp
.346349 .29041 .841764 .0260014 cmyk
f
619.165 399.012 mo
614.153 399.012 li
614.153 389.018 li
619.165 389.018 li
619.165 399.012 li
cp
.276219 .443061 .584924 .032929 cmyk
f
752.416 358.741 mo
748.113 348.219 li
749.809 348.219 li
745.43 337.512 li
747.156 337.512 li
742.72 326.664 li
744.682 326.664 li
738.284 311.018 li
731.886 326.664 li
733.848 326.664 li
729.413 337.512 li
731.138 337.512 li
726.76 348.219 li
728.456 348.219 li
724.153 358.741 li
752.416 358.741 li
cp
.291752 .222629 .804593 .00369268 cmyk
f
740.104 366.352 mo
736.288 366.352 li
736.288 358.741 li
740.104 358.741 li
740.104 366.352 li
cp
.276219 .443061 .584924 .032929 cmyk
f
714.487 363.54 mo
710.635 354.122 li
712.154 354.122 li
708.235 344.539 li
709.779 344.539 li
705.809 334.83 li
707.565 334.83 li
701.839 320.826 li
696.112 334.83 li
697.868 334.83 li
693.898 344.539 li
695.443 344.539 li
691.524 354.122 li
693.042 354.122 li
689.191 363.54 li
714.487 363.54 li
cp
.291752 .222629 .804593 .00369268 cmyk
f
703.468 370.352 mo
700.052 370.352 li
700.052 363.54 li
703.468 363.54 li
703.468 370.352 li
cp
.276219 .443061 .584924 .032929 cmyk
f
897.003 917.065 mo
894.17 863.635 894.412 868.723 894.412 866.968 cv
894.375 867.582 li
894.339 866.968 li
894.339 868.723 894.58 863.635 891.748 917.065 cv
897.003 917.065 li
cp
.378668 .524163 .441932 .0630503 cmyk
f
906.769 846.566 mo
896.855 847.364 li
905.375 842.486 li
904.196 839.143 898.042 821.917 894.504 821.917 cv
890.442 822.089 881.657 846.323 877.754 862.315 cv
887.827 866.09 li
876.973 865.715 li
876.245 869.116 875.822 871.938 875.822 873.773 cv
875.822 884.102 884.184 892.477 894.504 892.499 cv
894.548 892.499 li
904.89 892.499 913.274 884.115 913.274 873.773 cv
913.274 868.983 910.39 857.508 906.769 846.566 cv
cp
.315007 .211215 .859678 .0047303 cmyk
f
337.958 593.678 mo
306.631 593.678 li
306.631 585.028 313.643 578.015 322.294 578.015 cv
330.945 578.015 337.958 585.028 337.958 593.678 cv
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!#@j#!#7d"!#7d"!#7a!!#7a!!#7]u!#.Ts!#.Ts!#.Qr!#.Nq!#%Hp!>@Np!>@Ko!>@Hn!>7?l!>7?l
!"q3j!"h*h!"h$f!"^pd!"^mc!"Uda!"U^_!"LU]!"LR\!"LO[!"CFY!"CCX!"C@W!":4T!":1S!"1(Q
!"1%P!"'qN!"'nM!"'kL!!sbJ!!s\H!!sYG!!sVF!!jMD!!jJC!!a>@!!a;?!!a8>!!X,;!!X):!!Nu8
!!Nr7!!Nl5!!Ni4!!E`2!!EZ0!!EW/!!<N-!!<K,!!<H+!!3<(!!39'!!*3&!!*-$!!!$"z!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!#@j#!#@j#!#@j#!#@j#!#@j#!#Ip$!#Ip$!#S!%!#S!%!#\'&!#e*&!#e*&!#n0'!$"6(!$"6(!$+<)
!$4B*!$=E*!$=E*!$FK+!$ON+!$XT,!$aZ-!$j]-!$sc.!%'i/!%0l/!%9r0!%C#1!%L)2!%U/3!%^54
!%g;5!%p>5!&$D6!&-J7!&6P8!&HY9!&Q_:!&Zb:!&ln<!&ut=!'*"=!'<.?!'E4@!'N7@!'W=A!'iIC
!'rOD!(/XE!(8^F!(JgG!(SmH!(f!I!(o$I!)#*J!)56L!)>9L!)PEN!)bQP!)t]R!*(`R!*:iS!*LuU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU
!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU
!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU
!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU!*LuU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.424272 .994595 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~z!!!!"!<E3&!WiE)!s8W-!sA`0"9\i1"U,&5"pP89"pYA<#RC\A#RC\B#mgnE$47+I$O[=N$k*OQ%1Na
U%1WjX%M''\&.fBa&J5Te&J>]h&eYfi',)#m',)#n'GM5q'GM5r'bqGu'bqGu'bqK"()@Z%(Ddl((`4,
.)&X;1)B0V7)]Kb:*??1B*Zc@E+!;[L+X&$R,9nHZ,UF``-7:/g-n$Mn.Olnu.kE5'/M/S-0/#"50JP=
=1GgpG2)[BP3&ioY3]fDc4?Yhj5!M:t5s[h)6UX@47Rfm=8P)NH8kViP9hnJ[:f1+h<)cjt<``C*~>
<~z!<E6(!sA`1"pYD>#mgqH$k3XU%M03a&eYik'c%Q$(Dn&/)]Kb:*?H:F+<_pQ,9nHZ,pjrd-n-Sp.k</
%/M8Y/0JP:;1G^jF2E!KQ2`NcW3]]>a4$,Pf4Ztql5<h@s5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S
"5<h@s5<h@s5<h@s5<h@s5<_7p5!D.n4Ztqk4Ztni4?P_g4?GVd4$,Mc4$,Mc4$,Mc4$,Ja3]];_3]];
^3B9)Z3&ilW3&iiU2`EZS2`<QP2E!HO2E!HN2)R6J1c.$G1G^dA1,:U?1,1L<0ekC;0ek@90J>(4~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
923.138 224.348 mo
891.811 224.348 li
891.811 215.697 898.823 208.684 907.474 208.684 cv
916.125 208.684 923.138 215.697 923.138 224.348 cv
level3{
gsave
clp
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
904.993 141.639 mo
885.597 141.639 li
878.444 141.639 li
848.151 141.639 li
848.151 131.298 856.534 122.916 866.874 122.916 cv
873.612 122.916 879.501 126.487 882.799 131.828 cv
885.156 129.683 888.28 128.364 891.719 128.364 cv
899.049 128.364 904.993 134.307 904.993 141.639 cv
level3{
gsave
clp
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.02737e-10 998.723 -998.723 1.02737e-10 749 -205.227 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
141.852 698.234 mo
122.456 698.234 li
115.303 698.234 li
85.0101 698.234 li
85.0101 687.894 93.3923 679.511 103.733 679.511 cv
110.471 679.511 116.36 683.083 119.658 688.423 cv
122.016 686.278 125.139 684.96 128.577 684.96 cv
135.909 684.96 141.852 690.903 141.852 698.234 cv
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
409.342 656.739 mo
389.946 656.739 li
382.793 656.739 li
352.5 656.739 li
352.5 646.399 360.883 638.017 371.223 638.017 cv
377.961 638.017 383.85 641.588 387.148 646.929 cv
389.506 644.784 392.629 643.465 396.068 643.465 cv
403.399 643.465 409.342 649.408 409.342 656.739 cv
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
794.488 405.192 mo
780.757 405.192 li
784.584 198.044 li
791.43 190.62 li
794.488 405.192 li
cp
.267033 .454841 .402533 .0089723 cmyk
f
789.054 190.62 mo
784.584 196.852 li
781.335 375.882 li
786.556 375.882 790.211 379.536 790.211 384.757 cv
790.211 405.192 li
794.869 405.192 li
794.869 375.882 li
791.811 190.62 li
789.054 190.62 li
cp
.3411 .488869 .444251 .0393988 cmyk
f
780.711 189.841 mo
755.487 212.003 li
764.641 215.375 li
737.311 225.476 li
728.638 239.815 li
753.56 239.556 li
722.365 257.878 li
722.365 274.69 li
765.725 261.26 li
784.734 237.943 li
853.77 252.394 li
853.77 234.45 li
827.272 223.088 li
841.6 221.844 li
834.622 212.003 li
794.822 201.006 li
807.519 201.006 li
784.734 165.384 li
780.711 189.841 li
cp
.350439 .272923 .876707 .0222477 cmyk
f
784.734 237.943 mo
853.77 252.393 li
853.77 234.45 li
827.272 223.088 li
841.6 221.844 li
834.622 212.003 li
794.822 201.006 li
807.519 201.006 li
786.254 167.761 li
793.066 194.291 li
784.876 198.626 li
816.914 224.402 li
782.467 227.774 li
755.487 250.9 li
723.415 257.261 li
722.365 257.878 li
722.365 274.69 li
765.725 261.26 li
784.734 237.943 li
cp
.442084 .36701 1 .115572 cmyk
f
780.711 136.409 mo
755.487 158.571 li
764.641 161.943 li
737.311 172.044 li
728.638 186.383 li
753.56 186.124 li
722.365 204.446 li
722.365 221.258 li
765.725 207.828 li
784.734 184.511 li
853.77 198.961 li
853.77 181.018 li
827.272 169.656 li
841.6 168.412 li
834.622 158.571 li
794.822 147.574 li
807.519 147.574 li
784.734 111.951 li
780.711 136.409 li
cp
.350439 .272923 .876707 .0222477 cmyk
f
784.734 184.511 mo
853.77 198.961 li
853.77 181.018 li
827.272 169.656 li
841.6 168.412 li
834.622 158.571 li
794.822 147.574 li
807.519 147.574 li
786.254 114.329 li
793.066 140.858 li
784.876 145.194 li
816.914 170.97 li
782.467 174.342 li
755.487 197.468 li
723.415 203.829 li
722.365 204.446 li
722.365 221.258 li
765.725 207.828 li
784.734 184.511 li
cp
.442084 .36701 1 .115572 cmyk
f
696.694 416.451 mo
690.27 416.451 li
691.728 413.573 693.511 413.051 693.511 413.051 cv
693.511 413.051 696.694 413.393 696.694 416.451 cv
cp
.0138857 .0937514 .080415 0 cmyk
f
674.828 416.451 mo
668.404 416.451 li
669.863 413.573 671.645 413.051 671.645 413.051 cv
671.645 413.051 674.828 413.393 674.828 416.451 cv
cp
f
688.617 391.149 mo
698.697 401.151 692.855 416.451 692.855 416.451 cv
696.43 416.451 li
696.43 416.451 703.25 396.272 702.984 396.099 cv
704.977 391.149 li
696.694 384.804 li
688.617 388.449 li
688.617 391.149 li
cp
f
670.573 390.434 mo
669.89 390.305 669.263 389.963 668.586 389.81 cv
668.586 393.082 667.744 396.35 666.669 399.582 cv
667.172 398.016 li
672.151 416.451 li
674.781 416.451 li
674.289 389.368 li
673.141 390.125 671.886 390.682 670.573 390.434 cv
cp
f
713.836 416.451 mo
707.411 416.451 li
708.87 413.573 710.653 413.051 710.653 413.051 cv
710.653 413.051 713.836 413.393 713.836 416.451 cv
cp
0 .00595102 .00817884 0 cmyk
f
661.959 416.451 mo
655.535 416.451 li
656.994 413.573 658.776 413.051 658.776 413.051 cv
658.776 413.051 661.959 413.393 661.959 416.451 cv
cp
f
719.162 371.476 mo
719.246 370.526 719.205 369.566 719.026 368.627 cv
718.301 364.827 715.36 361.536 711.666 360.389 cv
712.06 357.57 710.012 354.794 707.375 353.722 cv
704.738 352.651 701.7 353.022 699.043 354.045 cv
697.575 351.997 694.3 351.575 692.36 353.182 cv
689.287 349.453 683.036 348.952 679.408 352.145 cv
679.543 349.396 675.91 347.949 673.249 348.652 cv
670.587 349.354 668.382 351.275 665.734 352.024 cv
662.33 352.988 658.687 351.862 655.673 349.93 cv
653.678 346.188 li
650.829 342.345 645.751 340.927 641.303 342.693 cv
633.623 345.743 626.216 352.03 625.141 356.154 cv
626.748 362.238 632.21 361.945 637.177 359.9 cv
641.016 358.319 642.561 359.268 645.895 359.781 cv
645.172 361.935 646.5 364.593 648.695 365.242 cv
647.018 366.081 645.941 367.988 646.088 369.857 cv
646.235 371.727 647.598 373.442 649.385 374.009 cv
647.455 376.392 649.301 380.655 652.359 380.878 cv
651.39 383.244 652.81 386.117 655.052 387.346 cv
657.294 388.575 660.077 388.42 662.497 387.594 cv
662.405 388.803 663.749 389.648 664.957 389.756 cv
666.165 389.864 667.403 389.542 668.586 389.81 cv
669.263 389.963 669.89 390.305 670.573 390.434 cv
672.412 390.781 674.143 389.557 675.616 388.401 cv
679.274 392.769 686.594 393.386 690.932 389.693 cv
692.59 391.507 695.299 392.004 697.645 391.349 cv
702.642 397.626 710.749 399.593 710.749 399.593 cv
710.515 416.451 li
713.554 416.451 li
717.644 398.015 li
714.576 393.049 li
717.187 389.718 720.572 379.952 719.162 371.476 cv
cp
f
647.127 344.118 mo
647.127 344.118 659.811 340.622 660.546 342.49 cv
661.281 344.359 660.895 349.249 650.007 347.495 cv
647.127 344.118 li
cp
.0138857 .0937514 .080415 0 cmyk
f
629.016 355.208 mo
625.141 356.154 li
626.028 358.334 li
626.028 358.334 629.016 356.942 629.016 355.208 cv
cp
.281621 .310979 .365972 .0015259 cmyk
f
711.177 357.323 mo
711.177 357.323 725.225 357.397 723.749 361.219 cv
722.507 364.434 711.666 360.389 711.666 360.389 cv
711.177 357.323 li
cp
0 .00595102 .00817884 0 cmyk
f
664.957 389.756 mo
663.749 389.648 662.405 388.803 662.497 387.594 cv
661.722 387.858 660.91 388.043 660.091 388.147 cv
658.653 416.451 li
662.028 416.451 li
662.028 408.113 668.586 398.971 668.586 389.81 cv
667.403 389.542 666.165 389.864 664.957 389.756 cv
cp
f
636.549 348.431 mo
635.951 349.986 li
639.186 349.986 li
638.421 348.431 636.549 348.431 636.549 348.431 cv
cp
.281621 .310979 .365972 .0015259 cmyk
f
729.985 133.502 mo
729.291 132.209 727.036 126.6 719.251 124.12 cv
720.114 121.411 li
725.297 123.063 728.419 126.079 729.985 128.018 cv
731.552 126.079 734.673 123.063 739.857 121.411 cv
740.719 124.12 li
733.925 126.285 731.264 131.121 731.237 131.169 cv
729.985 133.502 li
cp
.0778515 .322606 .518791 0 cmyk
f
704.005 149.98 mo
703.106 148.558 701.682 145.375 696.074 143.842 cv
696.824 141.1 li
700.46 142.094 702.761 143.878 704.018 145.144 cv
705.275 143.878 707.575 142.094 711.212 141.1 cv
711.961 143.842 li
706.585 145.311 705.111 148.269 704.005 149.98 cv
cp
f
162.734 601.351 mo
162.04 600.058 159.784 594.449 151.999 591.969 cv
152.862 589.26 li
158.046 590.912 161.167 593.928 162.734 595.866 cv
164.3 593.928 167.421 590.912 172.605 589.26 cv
173.468 591.969 li
166.673 594.134 164.012 598.969 163.985 599.018 cv
162.734 601.351 li
cp
f
136.754 617.829 mo
135.854 616.407 134.43 613.223 128.823 611.691 cv
129.573 608.948 li
133.208 609.943 135.509 611.727 136.766 612.992 cv
138.023 611.727 140.324 609.943 143.96 608.948 cv
144.709 611.691 li
139.333 613.16 137.859 616.118 136.754 617.829 cv
cp
f
853.617 417.588 mo
845.134 417.588 li
847.06 413.786 849.413 413.097 849.413 413.097 cv
849.413 413.097 853.617 413.549 853.617 417.588 cv
cp
.0138857 .0937514 .080415 0 cmyk
f
824.743 417.588 mo
816.26 417.588 li
818.186 413.786 820.54 413.097 820.54 413.097 cv
820.54 413.097 824.743 413.549 824.743 417.588 cv
cp
f
842.951 384.175 mo
856.262 397.383 848.547 417.588 848.547 417.588 cv
853.269 417.588 li
853.269 417.588 862.275 390.94 861.923 390.712 cv
864.554 384.175 li
853.617 375.796 li
842.951 380.61 li
842.951 384.175 li
cp
f
819.123 383.23 mo
818.222 383.06 817.395 382.61 816.5 382.407 cv
816.5 386.727 815.389 391.044 813.969 395.311 cv
814.633 393.243 li
821.208 417.587 li
824.68 417.587 li
824.031 381.823 li
822.515 382.823 820.857 383.558 819.123 383.23 cv
cp
f
876.253 417.588 mo
867.77 417.588 li
869.696 413.786 872.05 413.097 872.05 413.097 cv
872.05 413.097 876.253 413.549 876.253 417.588 cv
cp
0 0 0 0 cmyk
f
807.749 417.588 mo
799.266 417.588 li
801.193 413.786 803.546 413.097 803.546 413.097 cv
803.546 413.097 807.749 413.549 807.749 417.588 cv
cp
f
883.287 358.197 mo
883.398 356.942 883.344 355.674 883.107 354.434 cv
882.15 349.417 878.265 345.07 873.387 343.556 cv
873.908 339.833 871.203 336.168 867.721 334.753 cv
864.239 333.337 860.227 333.828 856.719 335.178 cv
854.78 332.475 850.455 331.917 847.893 334.04 cv
843.836 329.115 835.581 328.454 830.792 332.669 cv
830.969 329.039 826.171 327.129 822.657 328.057 cv
819.143 328.984 816.231 331.521 812.734 332.51 cv
808.239 333.782 803.428 332.296 799.448 329.744 cv
796.815 324.804 li
793.051 319.728 786.345 317.856 780.473 320.188 cv
770.331 324.216 760.55 332.518 759.13 337.963 cv
761.252 345.998 768.465 345.611 775.023 342.91 cv
780.094 340.822 782.133 342.075 786.535 342.753 cv
785.582 345.598 787.336 349.108 790.234 349.964 cv
788.02 351.072 786.597 353.591 786.791 356.059 cv
786.985 358.528 788.785 360.793 791.145 361.541 cv
788.596 364.688 791.033 370.317 795.073 370.613 cv
793.793 373.737 795.668 377.531 798.628 379.153 cv
801.589 380.776 805.264 380.572 808.459 379.48 cv
808.338 381.077 810.113 382.193 811.708 382.335 cv
813.303 382.478 814.938 382.053 816.5 382.407 cv
817.395 382.61 818.222 383.06 819.123 383.23 cv
821.553 383.69 823.839 382.073 825.784 380.547 cv
830.614 386.315 840.281 387.13 846.008 382.252 cv
848.197 384.648 851.775 385.304 854.872 384.44 cv
861.472 392.728 872.177 395.326 872.177 395.326 cv
871.868 417.587 li
875.881 417.587 li
881.282 393.242 li
877.231 386.684 li
880.679 382.285 885.148 369.389 883.287 358.197 cv
cp
f
788.163 322.07 mo
788.163 322.07 804.912 317.453 805.883 319.921 cv
806.854 322.388 806.344 328.845 791.966 326.53 cv
788.163 322.07 li
cp
.0138857 .0937514 .080415 0 cmyk
f
764.248 336.715 mo
759.13 337.963 li
760.302 340.843 li
760.302 340.843 764.248 339.004 764.248 336.715 cv
cp
.281621 .310979 .365972 .0015259 cmyk
f
872.741 339.508 mo
872.741 339.508 891.292 339.605 889.343 344.652 cv
887.703 348.897 873.387 343.556 873.387 343.556 cv
872.741 339.508 li
cp
0 0 0 0 cmyk
f
811.708 382.335 mo
810.113 382.193 808.338 381.077 808.459 379.48 cv
807.436 379.83 806.364 380.074 805.281 380.211 cv
803.383 417.587 li
807.84 417.587 li
807.84 406.577 816.5 394.504 816.5 382.407 cv
814.938 382.053 813.303 382.478 811.708 382.335 cv
cp
f
774.194 327.766 mo
773.406 329.819 li
777.677 329.819 li
776.666 327.766 774.194 327.766 774.194 327.766 cv
cp
.281621 .310979 .365972 .0015259 cmyk
f
924.443 432.489 mo
555.253 432.489 li
551.037 432.489 547.62 429.071 547.62 424.856 cv
547.62 420.64 551.037 417.223 555.253 417.223 cv
924.443 417.223 li
928.658 417.223 932.075 420.64 932.075 424.856 cv
932.075 429.071 928.658 432.489 924.443 432.489 cv
cp
.47361 .350195 1 .111513 cmyk
f
851.806 427.812 mo
851.806 425.575 li
851.806 422.048 848.947 419.187 845.419 419.187 cv
821.811 419.187 795.103 410.654 795.103 410.654 cv
795.103 410.654 763.89 400.823 744.529 400.823 cv
725.166 400.823 693.953 410.654 693.953 410.654 cv
693.953 410.654 672.269 419.187 648.661 419.187 cv
646.096 419.187 li
642.568 419.187 639.708 422.048 639.708 425.575 cv
639.708 427.812 li
851.806 427.812 li
cp
f
428.046 417.74 mo
385.66 387.491 321.716 366.276 260.35 366.276 cv
198.985 366.276 129.616 385.761 92.6545 417.74 cv
428.046 417.74 li
cp
.227268 .144991 .742428 0 cmyk
f
320.846 258.509 mo
320.572 258.231 320.302 257.949 320.04 257.659 cv
319.886 257.948 319.721 258.231 319.551 258.509 cv
292.89 258.509 li
291.418 256.122 290.554 253.32 290.554 250.309 cv
290.554 241.66 297.566 234.648 306.215 234.648 cv
309.016 234.648 311.64 235.393 313.915 236.682 cv
315.891 224.766 326.239 215.677 338.716 215.677 cv
350.655 215.677 360.643 224 363.213 235.158 cv
364.876 235.586 366.432 236.27 367.833 237.181 cv
371.146 232.407 376.659 229.275 382.91 229.275 cv
393.043 229.275 401.258 237.489 401.258 247.622 cv
401.246 247.844 li
402.695 246.99 404.378 246.491 406.181 246.491 cv
411.56 246.491 415.92 250.851 415.92 256.23 cv
415.92 257.016 415.817 257.777 415.641 258.509 cv
320.846 258.509 li
cp
.0444648 .11899 .0719615 0 cmyk
f
159.216 166.555 mo
155.058 166.555 151.282 168.149 148.432 170.743 cv
144.445 164.285 137.325 159.968 129.179 159.968 cv
116.678 159.968 106.544 170.102 106.544 182.603 cv
143.168 182.603 li
151.815 182.603 li
175.264 182.603 li
175.264 173.74 168.079 166.555 159.216 166.555 cv
cp
f
364.045 142.894 mo
359.887 142.894 356.112 144.488 353.261 147.081 cv
349.275 140.624 342.155 136.306 334.009 136.306 cv
321.508 136.306 311.373 146.441 311.373 158.942 cv
347.997 158.942 li
356.644 158.942 li
380.094 158.942 li
380.094 150.079 372.908 142.894 364.045 142.894 cv
cp
f
401.36 416.578 mo
401.36 328.175 li
401.36 320.941 395.474 315.056 388.24 315.056 cv
381.564 315.056 376.048 320.072 375.235 326.531 cv
370.104 326.531 li
370.939 317.253 378.749 309.956 388.24 309.956 cv
398.286 309.956 406.46 318.129 406.46 328.175 cv
406.46 416.578 li
401.36 416.578 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
342.899 416.578 mo
342.899 328.175 li
342.899 320.941 337.013 315.056 329.779 315.056 cv
323.103 315.056 317.587 320.072 316.774 326.531 cv
311.643 326.531 li
312.478 317.253 320.288 309.956 329.779 309.956 cv
339.825 309.956 347.999 318.129 347.999 328.175 cv
347.999 416.578 li
342.899 416.578 li
cp
f
372.57 339.693 mo
378.88 339.693 li
378.88 323.131 li
372.57 323.131 li
372.57 339.693 li
cp
.525811 .485359 .512016 .148959 cmyk
f
366.948 339.693 mo
373.259 339.693 li
373.259 323.131 li
366.948 323.131 li
366.948 339.693 li
cp
.554742 .515984 .546258 .21088 cmyk
f
313.98 339.693 mo
320.291 339.693 li
320.291 323.131 li
313.98 323.131 li
313.98 339.693 li
cp
.525811 .485359 .512016 .148959 cmyk
f
308.359 339.693 mo
314.669 339.693 li
314.669 323.131 li
308.359 323.131 li
308.359 339.693 li
cp
.554742 .515984 .546258 .21088 cmyk
f
357.837 416.578 mo
357.837 350.615 li
357.837 342.478 364.433 335.881 372.571 335.881 cv
380.708 335.881 387.304 342.478 387.304 350.615 cv
387.304 416.578 li
357.837 416.578 li
cp
0 .727108 .482521 0 cmyk
f
299.376 416.578 mo
299.376 350.615 li
299.376 342.478 305.972 335.881 314.11 335.881 cv
322.246 335.881 328.843 342.478 328.843 350.615 cv
328.843 416.578 li
299.376 416.578 li
cp
f
364.239 354.927 mo
364.239 363.099 364.239 394.19 364.239 416.577 cv
357.837 416.577 li
357.837 350.615 li
357.837 342.478 364.433 335.881 372.571 335.881 cv
372.571 335.881 364.239 341.769 364.239 354.927 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
305.787 354.927 mo
305.787 363.099 305.787 394.19 305.787 416.577 cv
299.385 416.577 li
299.385 350.615 li
299.385 342.478 305.982 335.881 314.119 335.881 cv
314.119 335.881 305.787 341.769 305.787 354.927 cv
cp
f
280.545 112.201 mo
276.652 112.201 273.495 115.357 273.495 119.251 cv
273.495 123.144 276.652 126.301 280.545 126.301 cv
284.439 126.301 287.595 123.144 287.595 119.251 cv
287.595 115.357 284.439 112.201 280.545 112.201 cv
cp
.224582 .354101 .293431 0 cmyk
f
288.985 171.729 mo
283.316 171.729 278.72 176.325 278.72 181.994 cv
278.72 187.663 283.316 192.258 288.985 192.258 cv
294.654 192.258 299.249 187.663 299.249 181.994 cv
299.249 176.325 294.654 171.729 288.985 171.729 cv
cp
f
227.741 102.018 mo
224.832 102.018 222.473 104.376 222.473 107.286 cv
222.473 110.195 224.832 112.554 227.741 112.554 cv
230.651 112.554 233.01 110.195 233.01 107.286 cv
233.01 104.376 230.651 102.018 227.741 102.018 cv
cp
f
264.488 196.2 mo
264.583 195.205 264.64 194.198 264.64 193.177 cv
264.64 187.547 263.145 182.275 260.556 177.702 cv
267.591 176.27 272.885 170.048 272.885 162.59 cv
272.885 154.072 265.98 147.167 257.462 147.167 cv
257.374 147.171 li
257.894 145.927 258.183 144.563 258.183 143.13 cv
258.183 137.335 253.485 132.637 247.689 132.637 cv
241.893 132.637 237.196 137.335 237.196 143.13 cv
237.196 148.055 240.592 152.175 245.167 153.306 cv
243.212 155.891 242.039 159.099 242.039 162.59 cv
242.039 162.726 242.056 162.858 242.059 162.993 cv
239.235 162.161 236.253 161.696 233.159 161.696 cv
215.773 161.696 201.678 175.791 201.678 193.177 cv
201.678 204.897 208.096 215.101 217.596 220.52 cv
216.553 220.425 215.501 220.36 214.433 220.36 cv
195.352 220.36 179.884 235.829 179.884 254.91 cv
179.884 273.991 195.352 289.459 214.433 289.459 cv
218.175 289.459 221.769 288.847 225.143 287.746 cv
230.056 291.7 236.292 294.079 243.089 294.079 cv
258.036 294.079 270.304 282.633 271.622 268.029 cv
271.628 267.945 li
271.701 267.113 271.745 266.273 271.745 265.423 cv
271.745 258.578 269.338 252.3 265.334 247.372 cv
275.606 243.48 282.922 233.577 282.922 221.941 cv
282.922 209.987 275.204 199.857 264.488 196.2 cv
cp
f
275.725 284.606 mo
226.65 284.606 li
177.574 284.606 li
164.387 405.004 li
226.65 405.004 li
288.912 405.004 li
275.725 284.606 li
cp
.266575 .210025 .215061 0 cmyk
f
275.475 268.363 mo
177.57 268.363 li
177.57 284.606 li
275.475 284.606 li
275.475 268.363 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
288.907 405.004 mo
275.72 284.606 li
226.645 284.606 li
226.645 405.004 li
288.907 405.004 li
cp
.0938125 .0621347 .0799268 0 cmyk
f
226.645 284.606 mo
275.475 284.606 li
275.475 268.363 li
226.645 268.363 li
226.645 284.606 li
cp
0 .727108 .482521 0 cmyk
f
275.777 338.615 mo
275.777 350.103 266.464 359.417 254.975 359.417 cv
243.487 359.417 234.174 350.103 234.174 338.615 cv
234.174 327.127 243.487 317.814 254.975 317.814 cv
266.464 317.814 275.777 327.127 275.777 338.615 cv
cp
0 .308659 .762325 0 cmyk
f
252.283 343.474 mo
245.914 354.502 li
248.586 356.062 251.665 356.988 254.975 356.988 cv
258.22 356.988 261.246 356.111 263.88 354.606 cv
257.512 343.526 li
256.75 343.94 255.904 344.199 254.975 344.199 cv
253.988 344.199 253.073 343.94 252.283 343.474 cv
cp
245.811 323.386 mo
240.498 326.534 236.906 332.307 236.906 338.918 cv
249.694 338.918 li
249.694 337.003 250.72 335.355 252.231 334.414 cv
245.811 323.386 li
cp
264.036 323.282 mo
257.667 334.362 li
259.23 335.294 260.308 336.98 260.308 338.918 cv
260.308 339.073 li
273.045 339.073 li
273.045 338.918 li
273.045 332.255 269.417 326.415 264.036 323.282 cv
cp
.665827 .576745 .411841 .172671 cmyk
f
258.677 338.915 mo
258.677 340.957 257.02 342.61 254.978 342.61 cv
252.936 342.61 251.281 340.957 251.281 338.915 cv
251.281 336.873 252.936 335.216 254.978 335.216 cv
257.02 335.216 258.677 336.873 258.677 338.915 cv
cp
f
293.275 420.398 mo
160.015 420.398 li
160.015 405.004 li
293.275 405.004 li
293.275 420.398 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
226.65 420.398 mo
293.275 420.398 li
293.275 405.004 li
226.65 405.004 li
226.65 420.398 li
cp
0 .727108 .482521 0 cmyk
f
444.991 432.589 mo
75.801 432.589 li
71.5857 432.589 68.1682 429.171 68.1682 424.956 cv
68.1682 420.74 71.5857 417.323 75.801 417.323 cv
444.991 417.323 li
449.207 417.323 452.624 420.74 452.624 424.956 cv
452.624 429.171 449.207 432.589 444.991 432.589 cv
cp
.47361 .350195 1 .111513 cmyk
f
421.597 432.905 mo
421.597 432.905 li
421.597 424.423 414.721 417.548 406.24 417.548 cv
405.102 417.548 li
405.102 417.548 389.487 418.684 365.061 411.575 cv
351.773 407.707 334.304 402.351 319.545 402.351 cv
304.786 402.351 285.378 408.41 271.906 411.575 cv
240.041 419.063 186.392 417.85 164.383 417.548 cv
156.085 417.548 li
147.603 417.548 140.728 424.423 140.728 432.905 cv
421.597 432.905 li
cp
f
143.371 416.322 mo
131.474 416.322 li
134.79 266.942 li
140.721 260.508 li
143.371 416.322 li
cp
.301793 .485756 .45066 .026276 cmyk
f
138.663 260.508 mo
134.79 265.908 li
131.975 390.925 li
136.499 390.925 139.665 394.092 139.665 398.615 cv
139.665 416.322 li
143.701 416.322 li
143.701 390.925 li
141.052 260.508 li
138.663 260.508 li
cp
.34934 .586511 .522454 .102602 cmyk
f
131.433 259.833 mo
109.577 279.036 li
117.509 281.958 li
93.8279 290.71 li
86.3137 303.135 li
107.907 302.91 li
80.8777 318.786 li
80.8777 333.354 li
118.448 321.717 li
134.919 301.513 li
194.738 314.034 li
194.738 298.486 li
171.778 288.642 li
184.193 287.563 li
178.147 279.036 li
143.661 269.508 li
154.663 269.508 li
134.919 238.641 li
131.433 259.833 li
cp
.350439 .272923 .876707 .0222477 cmyk
f
134.919 301.513 mo
194.739 314.034 li
194.739 298.486 li
171.778 288.641 li
184.193 287.563 li
178.147 279.036 li
143.661 269.508 li
154.663 269.508 li
136.237 240.702 li
142.139 263.689 li
135.042 267.446 li
162.803 289.78 li
132.955 292.702 li
109.577 312.74 li
81.7878 318.252 li
80.8777 318.786 li
80.8777 333.354 li
118.448 321.717 li
134.919 301.513 li
cp
.442084 .36701 1 .115572 cmyk
f
131.433 213.535 mo
109.577 232.738 li
117.509 235.66 li
93.8279 244.413 li
86.3137 256.837 li
107.907 256.612 li
80.8777 272.489 li
80.8777 287.056 li
118.448 275.419 li
134.919 255.215 li
194.738 267.736 li
194.738 252.188 li
171.778 242.344 li
184.193 241.266 li
178.147 232.738 li
143.661 223.21 li
154.663 223.21 li
134.919 192.344 li
131.433 213.535 li
cp
.350439 .272923 .876707 .0222477 cmyk
f
134.919 255.215 mo
194.739 267.736 li
194.739 252.188 li
171.778 242.344 li
184.193 241.266 li
178.147 232.738 li
143.661 223.209 li
154.663 223.209 li
136.237 194.404 li
142.139 217.391 li
135.042 221.148 li
162.803 243.482 li
132.955 246.404 li
109.577 266.442 li
81.7878 271.954 li
80.8777 272.489 li
80.8777 287.056 li
118.448 275.419 li
134.919 255.215 li
cp
.442084 .36701 1 .115572 cmyk
f
859.328 912.236 mo
848.463 912.236 li
848.463 656.297 li
788.702 656.297 li
783.27 656.297 li
783.27 912.236 li
773.18 912.236 li
773.18 656.297 li
859.328 656.297 li
859.328 912.236 li
.0122377 .0529793 .040528 0 cmyk
f
842.254 912.236 mo
834.492 912.236 li
834.492 656.297 li
808.881 656.297 li
808.881 912.236 li
795.3 912.236 li
795.3 656.297 li
788.702 656.297 li
848.463 656.297 li
842.254 656.297 li
842.254 912.236 li
.0318303 .0917983 .0650339 0 cmyk
f
848.463 912.236 mo
842.254 912.236 li
842.254 656.297 li
848.463 656.297 li
848.463 912.236 li
.0449226 .124056 .0884108 0 cmyk
f
834.492 912.236 mo
808.881 912.236 li
808.881 656.297 li
834.492 656.297 li
834.492 912.236 li
f
788.702 912.236 mo
783.27 912.236 li
783.27 656.297 li
788.702 656.297 li
788.702 912.236 li
.0318303 .0917983 .0650339 0 cmyk
f
795.3 912.236 mo
788.702 912.236 li
788.702 656.297 li
795.3 656.297 li
795.3 912.236 li
.0449226 .124056 .0884108 0 cmyk
f
870.493 661.717 mo
870.494 661.686 li
870.494 650.498 861.424 641.428 850.236 641.428 cv
843.731 641.428 837.947 644.498 834.24 649.263 cv
830.639 641.007 822.409 635.233 812.825 635.233 cv
804.565 635.233 797.312 639.525 793.159 645.997 cv
789.668 643.142 785.207 641.428 780.345 641.428 cv
769.157 641.428 760.088 650.498 760.088 661.686 cv
760.088 661.717 li
870.493 661.717 li
cp
.224582 .354101 .293431 0 cmyk
f
792.337 584.325 mo
799.999 584.325 806.211 590.537 806.211 598.2 cv
778.462 598.2 li
778.462 590.537 784.674 584.325 792.337 584.325 cv
cp
.0444648 .11899 .0719615 0 cmyk
f
889.078 709.727 mo
896.741 709.727 902.953 715.939 902.953 723.601 cv
875.204 723.601 li
875.204 715.939 881.416 709.727 889.078 709.727 cv
cp
f
659.708 917.8 mo
659.851 916.859 659.926 915.895 659.926 914.914 cv
659.926 904.383 651.389 895.847 640.858 895.847 cv
639.93 895.847 639.018 895.917 638.125 896.045 cv
633.868 887.035 624.701 880.8 614.074 880.8 cv
602.52 880.8 592.691 888.172 589.023 898.467 cv
586.193 896.805 582.899 895.847 579.38 895.847 cv
568.849 895.847 560.312 904.383 560.312 914.914 cv
560.312 915.895 560.387 916.859 560.53 917.8 cv
659.708 917.8 li
cp
.315007 .211215 .859678 .0047303 cmyk
f
924.443 928.963 mo
555.253 928.963 li
551.037 928.963 547.62 925.546 547.62 921.331 cv
547.62 917.115 551.037 913.698 555.253 913.698 cv
924.443 913.698 li
928.658 913.698 932.075 917.115 932.075 921.331 cv
932.075 925.546 928.658 928.963 924.443 928.963 cv
cp
.47361 .350195 1 .111513 cmyk
f
706.495 706.198 mo
706.495 697.956 699.814 691.275 691.572 691.275 cv
685.188 691.275 679.757 695.29 677.624 700.926 cv
675.448 700.275 673.145 699.914 670.757 699.914 cv
657.526 699.914 646.801 710.64 646.801 723.871 cv
646.801 737.102 657.526 747.827 670.757 747.827 cv
683.988 747.827 694.713 737.102 694.713 723.871 cv
694.713 722.839 694.626 721.829 694.499 720.831 cv
701.339 719.469 706.495 713.438 706.495 706.198 cv
cp
.224582 .354101 .293431 0 cmyk
f
718.516 692.365 mo
717.822 686.04 713.266 681.089 707.458 679.567 cv
706.761 673.557 701.343 669.227 695.32 669.888 cv
689.272 670.551 684.908 675.99 685.572 682.037 cv
685.897 685.008 687.38 687.568 689.517 689.33 cv
688.868 691.297 688.608 693.426 688.848 695.618 cv
689.746 703.811 697.116 709.724 705.309 708.825 cv
713.502 707.927 719.414 700.557 718.516 692.365 cv
cp
f
716.864 724.332 mo
716.174 718.04 711.641 713.115 705.863 711.601 cv
705.169 705.621 699.78 701.314 693.787 701.971 cv
687.771 702.631 683.429 708.043 684.089 714.058 cv
684.413 717.014 685.888 719.56 688.014 721.313 cv
687.369 723.27 687.11 725.387 687.349 727.569 cv
688.242 735.719 695.574 741.602 703.724 740.708 cv
711.875 739.814 717.758 732.482 716.864 724.332 cv
cp
f
690.118 638.672 mo
691.644 635.011 689.913 630.806 686.252 629.281 cv
682.591 627.755 678.385 629.486 676.86 633.147 cv
676.744 633.426 676.653 633.709 676.574 633.992 cv
672.329 633.537 668.114 635.881 666.388 640.022 cv
664.286 645.067 666.672 650.86 671.716 652.962 cv
676.76 655.064 682.553 652.678 684.656 647.634 cv
685.31 646.062 685.529 644.418 685.368 642.835 cv
687.435 642.272 689.231 640.802 690.118 638.672 cv
cp
f
721.359 608.826 mo
714.505 611.49 711.107 619.204 713.77 626.059 cv
713.822 626.174 li
710.616 628.066 709.142 632.033 710.534 635.616 cv
712.081 639.599 716.565 641.573 720.548 640.026 cv
723.041 639.057 724.746 636.937 725.294 634.51 cv
727.18 634.637 729.123 634.378 731.002 633.648 cv
737.857 630.985 741.254 623.27 738.591 616.416 cv
735.928 609.561 728.213 606.164 721.359 608.826 cv
cp
f
661.241 674.052 mo
657.391 674.052 654.269 677.174 654.269 681.024 cv
654.269 684.874 657.391 687.995 661.241 687.995 cv
665.091 687.995 668.213 684.874 668.213 681.024 cv
668.213 677.174 665.091 674.052 661.241 674.052 cv
cp
f
693.477 661.901 mo
684.635 661.901 677.468 669.068 677.468 677.909 cv
677.468 686.752 684.635 693.919 693.477 693.919 cv
702.319 693.919 709.486 686.752 709.486 677.909 cv
709.486 669.068 702.319 661.901 693.477 661.901 cv
cp
f
706.341 680.163 mo
695.335 680.163 686.413 689.085 686.413 700.091 cv
686.413 711.096 695.335 720.017 706.341 720.017 cv
717.346 720.017 726.268 711.096 726.268 700.091 cv
726.268 689.085 717.346 680.163 706.341 680.163 cv
cp
f
671.474 615.029 mo
669.549 615.029 667.988 616.589 667.988 618.514 cv
667.988 620.44 669.549 622 671.474 622 cv
673.399 622 674.96 620.44 674.96 618.514 cv
674.96 616.589 673.399 615.029 671.474 615.029 cv
cp
f
717.295 596.018 mo
710.314 596.018 704.655 601.677 704.655 608.657 cv
704.655 615.639 710.314 621.298 717.295 621.298 cv
724.275 621.298 729.934 615.639 729.934 608.657 cv
729.934 601.677 724.275 596.018 717.295 596.018 cv
cp
f
682.309 736.532 mo
682.309 724.71 li
644.177 724.71 li
644.177 736.532 li
682.309 736.532 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
682.309 743.976 mo
682.309 743.976 li
644.177 743.976 li
643.967 743.976 li
629.518 903.523 li
682.309 903.523 li
682.309 743.976 li
cp
.406378 .329778 .334691 .00534066 cmyk
f
629.518 901.131 mo
618.109 901.131 li
618.109 913.626 li
628.603 913.626 li
682.309 913.626 li
682.309 901.131 li
629.518 901.131 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
720.463 736.532 mo
720.463 724.71 li
682.309 724.71 li
682.309 736.532 li
720.463 736.532 li
cp
0 .727108 .482521 0 cmyk
f
682.309 903.523 mo
735.099 903.523 li
720.651 743.976 li
720.463 743.976 li
682.309 743.976 li
682.309 903.523 li
cp
.310552 .246433 .252293 0 cmyk
f
735.099 901.131 mo
682.309 901.131 li
682.309 913.626 li
736.014 913.626 li
746.509 913.626 li
746.509 901.131 li
735.099 901.131 li
cp
0 .727108 .482521 0 cmyk
f
682.309 743.976 mo
644.177 743.976 li
644.177 736.532 li
682.309 736.532 li
682.309 743.976 li
cp
.578729 .527306 .552605 .239109 cmyk
f
720.451 743.976 mo
682.32 743.976 li
682.32 736.532 li
720.451 736.532 li
720.451 743.976 li
cp
.525811 .485359 .512016 .148959 cmyk
f
834.641 769.983 mo
831.812 761.579 807.638 755.013 778.23 755.013 cv
748.823 755.013 724.649 761.579 721.82 769.983 cv
834.641 769.983 li
cp
0 .727108 .482521 0 cmyk
f
778.23 755.013 mo
778.23 755.013 734.379 760.376 734.379 769.983 cv
721.82 769.983 li
724.649 761.579 748.823 755.013 778.23 755.013 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
838.604 860.707 mo
838.604 864.272 li
851.98 864.272 862.024 872.664 862.024 884.444 cv
862.024 909.816 li
865.356 909.816 li
865.356 882.861 li
865.356 870.65 856.926 860.707 843.189 860.707 cv
838.604 860.707 li
cp
0 .727108 .482521 0 cmyk
f
838.604 864.272 mo
838.604 868.345 li
843.189 868.345 li
851.194 868.345 857.705 874.855 857.705 882.861 cv
857.705 909.816 li
862.024 909.816 li
862.024 884.444 li
862.024 872.664 854.728 864.272 838.604 864.272 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
856.926 892.038 mo
858.239 893.34 860.042 894.128 862.024 894.128 cv
866.06 894.128 869.321 890.856 869.321 886.832 cv
869.321 883.715 867.374 881.064 864.628 880.025 cv
865.977 881.339 866.825 883.19 866.825 885.232 cv
866.825 889.268 863.553 892.528 859.529 892.528 cv
858.609 892.528 857.726 892.361 856.926 892.038 cv
cp
0 .727108 .482521 0 cmyk
f
854.728 886.832 mo
854.728 888.874 855.564 890.725 856.926 892.038 cv
857.726 892.361 858.609 892.528 859.529 892.528 cv
863.553 892.528 866.825 889.268 866.825 885.232 cv
866.825 883.19 865.977 881.339 864.628 880.025 cv
863.827 879.703 862.944 879.536 862.024 879.536 cv
858 879.536 854.728 882.796 854.728 886.832 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
759.603 913.633 mo
838.604 913.633 li
838.604 776.639 li
759.603 776.639 li
759.603 913.633 li
cp
.0699779 .0503853 .052491 0 cmyk
f
715.528 913.633 mo
766.896 913.633 li
766.896 776.639 li
715.528 776.639 li
715.528 913.633 li
cp
.194675 .150179 .156374 0 cmyk
f
756.08 768.808 mo
842.128 768.808 li
842.128 776.638 li
756.08 776.638 li
756.08 768.808 li
cp
.525811 .485359 .512016 .148959 cmyk
f
779.312 825.174 mo
823.047 825.174 li
823.047 792.322 li
779.312 792.322 li
779.312 825.174 li
cp
.693477 .214939 .327123 .00292973 cmyk
f
824.833 790.548 mo
822.845 792.574 li
779.303 792.574 li
779.301 790.59 li
779.301 790.549 li
824.833 790.548 li
cp
.231296 .191134 .191012 0 cmyk
f
822.848 792.542 mo
822.848 825.167 li
824.843 825.146 li
824.843 790.557 li
822.848 792.542 li
cp
.149172 .112734 .118654 0 cmyk
f
793.981 825.101 mo
792.856 825.101 li
792.856 792.614 li
793.981 792.614 li
793.981 825.101 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
808.995 825.101 mo
807.869 825.101 li
807.869 792.614 li
808.995 792.614 li
808.995 825.101 li
cp
f
822.848 825.101 mo
820.641 825.101 li
820.641 792.614 li
822.848 792.614 li
822.848 825.101 li
cp
f
822.749 808.653 mo
822.749 809.779 li
779.531 809.779 li
779.531 808.653 li
822.749 808.653 li
cp
f
822.749 792.503 mo
822.749 794.711 li
779.312 794.711 li
779.312 792.503 li
822.749 792.503 li
cp
f
779.312 871.887 mo
823.047 871.887 li
823.047 839.034 li
779.312 839.034 li
779.312 871.887 li
cp
.693477 .214939 .327123 .00292973 cmyk
f
824.833 837.26 mo
822.845 839.287 li
779.303 839.287 li
779.301 837.302 li
779.301 837.261 li
824.833 837.26 li
cp
.231296 .191134 .191012 0 cmyk
f
822.848 839.254 mo
822.848 871.88 li
824.843 871.859 li
824.843 837.27 li
822.848 839.254 li
cp
.149172 .112734 .118654 0 cmyk
f
793.981 871.813 mo
792.856 871.813 li
792.856 839.326 li
793.981 839.326 li
793.981 871.813 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
808.995 871.813 mo
807.869 871.813 li
807.869 839.326 li
808.995 839.326 li
808.995 871.813 li
cp
f
822.848 871.813 mo
820.641 871.813 li
820.641 839.326 li
822.848 839.326 li
822.848 871.813 li
cp
f
822.749 855.365 mo
822.749 856.491 li
779.531 856.491 li
779.531 855.365 li
822.749 855.365 li
cp
f
822.749 839.215 mo
822.749 841.423 li
779.312 841.423 li
779.312 839.215 li
822.749 839.215 li
cp
f
709.821 768.808 mo
773.989 768.808 li
773.989 776.638 li
709.821 776.638 li
709.821 768.808 li
cp
.578729 .527306 .552605 .239109 cmyk
f
882.159 913.93 mo
838.604 913.93 li
838.604 903.683 li
882.159 903.683 li
882.159 913.93 li
cp
.525811 .485359 .512016 .148959 cmyk
f
766.896 913.633 mo
722.238 913.633 li
722.238 906.267 li
766.896 906.267 li
766.896 913.633 li
cp
.288701 .227085 .232883 0 cmyk
f
783.206 913.633 mo
766.896 913.633 li
766.896 906.267 li
783.206 906.267 li
783.206 913.633 li
cp
.241978 .191989 .197726 0 cmyk
f
838.604 913.633 mo
820.668 913.633 li
820.668 906.267 li
838.604 906.267 li
838.604 913.633 li
cp
f
819.527 884.414 mo
783.225 884.414 li
783.206 913.633 li
819.387 913.633 li
819.527 884.414 li
cp
.494606 .444251 .456886 .0846571 cmyk
f
820.597 883.738 mo
783.08 883.738 li
783.092 886.471 li
817.303 886.471 li
817.303 913.633 li
820.668 913.633 li
820.597 883.738 li
cp
.241978 .191989 .197726 0 cmyk
f
801.874 913.633 mo
800.091 913.633 li
800.091 886.559 li
801.874 886.559 li
801.874 913.633 li
cp
.53225 .487617 .496559 .144076 cmyk
f
817.251 913.633 mo
815.468 913.633 li
815.468 886.559 li
817.251 886.559 li
817.251 913.633 li
cp
f
820.597 883.738 mo
817.251 886.559 li
783.092 886.559 li
783.092 883.738 li
820.597 883.738 li
cp
.347051 .278019 .284092 0 cmyk
f
842.806 924.287 mo
842.806 922.05 li
842.806 918.522 839.947 915.662 836.419 915.662 cv
812.811 915.662 786.103 907.129 786.103 907.129 cv
786.103 907.129 754.89 897.298 735.529 897.298 cv
716.166 897.298 684.953 907.129 684.953 907.129 cv
684.953 907.129 663.269 915.662 639.661 915.662 cv
637.096 915.662 li
633.568 915.662 630.708 918.522 630.708 922.05 cv
630.708 924.287 li
842.806 924.287 li
cp
.47361 .350195 1 .111513 cmyk
f
628.068 635.466 mo
624.629 635.466 621.506 636.784 619.148 638.929 cv
615.85 633.588 609.961 630.017 603.223 630.017 cv
592.883 630.017 584.5 638.399 584.5 648.74 cv
614.793 648.74 li
621.946 648.74 li
641.342 648.74 li
641.342 641.408 635.399 635.466 628.068 635.466 cv
cp
.0444648 .11899 .0719615 0 cmyk
f
83.8523 871.127 mo
83.4539 870.038 83.1311 868.905 82.8938 867.733 cv
80.343 855.153 88.4734 842.888 101.053 840.338 cv
102.162 840.113 103.268 839.976 104.365 839.912 cv
107.269 828.118 116.71 818.449 129.404 815.876 cv
143.207 813.077 156.734 819.503 163.609 830.914 cv
166.587 828.242 170.29 826.3 174.494 825.448 cv
187.074 822.897 199.339 831.027 201.89 843.607 cv
202.127 844.779 202.272 845.948 202.329 847.107 cv
83.8523 871.127 li
cp
.239139 .197513 .808743 0 cmyk
f
420.902 871.127 mo
421.301 870.038 421.623 868.905 421.861 867.733 cv
424.411 855.153 416.282 842.888 403.702 840.338 cv
402.593 840.113 401.487 839.976 400.389 839.912 cv
397.485 828.118 388.045 818.449 375.35 815.876 cv
361.548 813.077 348.02 819.503 341.145 830.914 cv
338.168 828.242 334.465 826.3 330.26 825.448 cv
317.68 822.897 305.415 831.027 302.865 843.607 cv
302.627 844.779 302.483 845.948 302.425 847.107 cv
420.902 871.127 li
f
451.485 883.533 mo
412.268 855.545 305.565 835.916 248.786 835.916 cv
192.009 835.916 86.1838 853.944 51.9851 883.533 cv
451.485 883.533 li
cp
.324834 .236179 .940612 .00939956 cmyk
f
294.179 652.093 mo
288.704 627.386 265.301 608.817 237.257 608.817 cv
205.251 608.817 179.293 633.004 179.129 662.896 cv
170.226 673.315 164.891 686.515 164.891 700.888 cv
164.891 734.535 194.06 761.811 230.043 761.811 cv
252.354 761.811 272.037 756.768 283.781 740.779 cv
285.19 740.904 286.615 740.974 288.06 740.974 cv
312.816 740.974 332.885 716.759 332.885 693.609 cv
332.885 672.402 316.039 654.885 294.179 652.093 cv
cp
.364904 .0180056 .870451 0 cmyk
f
217.812 751.372 mo
184.586 751.372 157.556 726.097 157.556 695.028 cv
157.556 682.126 162.109 669.982 170.72 659.904 cv
174.743 655.198 li
174.776 649.173 li
174.921 622.62 198.14 601.018 226.535 601.018 cv
250.96 601.018 272.278 617.218 277.223 639.536 cv
279.882 651.534 li
292.865 653.192 li
310.413 655.433 323.646 669.634 323.646 686.226 cv
323.646 704.618 307.643 719.582 287.972 719.582 cv
286.885 719.582 285.729 719.53 284.538 719.425 cv
273.688 718.467 li
267.518 726.868 li
256.249 742.212 237.667 751.372 217.812 751.372 cv
cp
.364721 .277836 1 .0257877 cmyk
f
294.179 652.093 mo
290.389 634.99 271.421 608.817 236.427 601.92 cv
261.257 611.162 274.962 629.334 277.223 639.536 cv
279.882 651.534 li
292.865 653.192 li
310.413 655.433 321.602 669.634 321.602 686.226 cv
321.602 704.618 307.643 715.76 287.973 715.76 cv
286.885 715.76 285.729 715.708 284.538 715.603 cv
273.688 714.645 li
267.518 723.046 li
256.249 738.39 237.667 748.187 217.812 748.187 cv
202.291 748.187 188.125 745.854 177.431 736.809 cv
189.283 751.962 208.429 761.811 230.043 761.811 cv
252.354 761.811 272.037 756.768 283.781 740.779 cv
285.19 740.904 286.615 740.974 288.06 740.974 cv
312.816 740.974 332.885 716.759 332.885 693.609 cv
332.885 672.402 316.039 654.885 294.179 652.093 cv
cp
.441901 .367163 1 .115602 cmyk
f
262.914 680.261 mo
258.586 675.945 254.295 672.552 249.704 669.907 cv
245.14 667.263 240.354 665.398 235.456 664.4 cv
230.556 663.414 225.427 663.255 220.193 663.9 cv
214.935 664.538 209.661 665.975 203.98 668.241 cv
207.016 662.867 212.3 658.839 218.234 656.511 cv
224.191 654.188 230.94 653.546 237.399 654.878 cv
243.859 656.195 249.814 659.426 254.384 663.896 cv
258.929 668.363 262.214 674.133 262.914 680.261 cv
cp
.283299 .214206 .868955 .0028687 cmyk
f
159.822 694.92 mo
158.676 688.453 159.544 681.711 161.827 675.408 cv
164.135 669.115 167.993 663.219 173.152 658.597 cv
178.328 653.944 184.741 650.746 191.47 649.458 cv
198.164 648.184 205.328 648.843 211.069 652.115 cv
204.57 652.865 198.91 654.435 193.681 656.775 cv
188.47 659.102 183.755 662.166 179.638 665.834 cv
175.495 669.541 171.866 673.904 168.656 678.784 cv
165.412 683.668 162.669 689.033 159.822 694.92 cv
cp
f
226.535 601.018 mo
198.139 601.018 174.921 624.12 174.776 652.516 cv
174.743 658.96 li
171.363 663.188 li
192.138 653.822 li
192.138 653.822 189.029 611.227 226.535 601.018 cv
cp
f
270.128 740.761 mo
262.259 757.304 264.53 754.256 260.647 762.235 cv
258.953 765.734 253.283 779.653 252.602 781.031 cv
251.953 769.406 252.023 751.016 252.323 736.805 cv
245.988 741.317 li
244.918 757.861 244.729 764.629 243.24 782.31 cv
243.2 782.785 242.574 782.91 242.352 782.488 cv
239.455 776.971 236.255 772.303 233.106 766.963 cv
222.766 748.681 li
219.242 748.973 li
222.034 755.634 225.806 764.369 228.734 770.941 cv
231.718 777.483 234.648 783.377 237.341 789.978 cv
237.413 790.163 237.491 790.365 237.574 790.581 cv
240.301 797.757 241.489 805.425 241.18 813.095 cv
240.72 855.891 li
256.025 855.682 li
254.713 842.249 255.185 831.388 254.236 814.852 cv
253.428 800.781 256.077 791.656 259.635 778.152 cv
259.993 776.796 260.348 775.536 260.693 774.428 cv
260.719 774.343 li
261.897 770.516 261.874 766.68 263.322 762.9 cv
269.084 750.892 li
272.935 739.438 li
270.128 740.761 li
cp
.301793 .485756 .45066 .026276 cmyk
f
259.503 778.656 mo
259.905 777.108 260.305 775.673 260.693 774.428 cv
260.719 774.343 li
261.897 770.516 263.17 766.68 264.618 762.9 cv
274.231 737.493 li
270.537 738.573 li
261.295 757.698 li
261.295 757.698 256.434 767.81 254.12 772.336 cv
253.75 773.061 252.659 772.818 252.629 772.004 cv
251.999 755.039 252.081 748.272 252.323 736.805 cv
245.988 741.317 li
245.988 741.317 246.129 743.851 245.407 752.658 cv
245.407 755.486 li
245.407 755.486 249.7 768.61 249.638 777.521 cv
249.578 786.432 243.912 855.848 248.636 855.794 cv
249.141 855.789 249.651 855.783 250.161 855.777 cv
250.723 855.771 li
251.089 855.767 251.453 855.763 251.813 855.758 cv
252.78 855.748 li
252.904 855.746 253.029 855.745 253.152 855.743 cv
256.025 855.682 li
254.673 841.838 255.548 840.483 255.494 810.62 cv
255.474 799.844 256.797 789.087 259.503 778.656 cv
cp
.340154 .532189 .527245 .0806592 cmyk
f
314.98 635.258 mo
315.079 637.287 314.539 638.966 313.786 640.475 cv
313.012 641.97 311.972 643.265 310.747 644.342 cv
309.522 645.419 308.103 646.272 306.527 646.842 cv
304.94 647.391 303.217 647.708 301.21 647.368 cv
301.829 645.432 302.665 644.042 303.558 642.778 cv
304.463 641.535 305.448 640.469 306.536 639.523 cv
307.624 638.578 308.809 637.748 310.153 637.018 cv
311.519 636.301 312.992 635.655 314.98 635.258 cv
cp
.441901 .367163 1 .115602 cmyk
f
297.705 619.529 mo
299.347 620.725 300.314 622.2 301.015 623.734 cv
301.692 625.275 302.047 626.898 302.115 628.528 cv
302.183 630.157 301.956 631.797 301.41 633.382 cv
300.84 634.961 300.005 636.501 298.479 637.849 cv
297.362 636.152 296.805 634.628 296.383 633.139 cv
295.984 631.654 295.773 630.218 295.72 628.778 cv
295.669 627.337 295.767 625.894 296.043 624.389 cv
296.344 622.876 296.765 621.323 297.705 619.529 cv
cp
.364721 .277836 1 .0257877 cmyk
f
252.586 855.7 mo
255.342 850.966 260.46 847.776 266.333 847.776 cv
273.983 847.776 280.369 853.175 281.894 860.37 cv
254.149 860.37 li
250.774 860.37 li
209.964 860.37 li
214.457 839.169 243.541 835.924 252.586 855.7 cv
cp
.438849 .334081 1 .0848707 cmyk
f
330.295 777.666 mo
328.563 768.462 334.132 759.255 342.734 757.1 cv
343.961 756.792 345.182 756.645 346.381 756.645 cv
353.589 756.645 359.959 761.972 361.444 769.863 cv
330.295 777.666 li
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"BhDu"BhAt"BhAt"Bh>s"Bh;r"B_2p"B_2p"B_/o"]q,m"]q)l"]q&k"]gri"]^ff"]^ce"]UZc"]UWb
"]UQ`"]LH^"]LE]"]C9Z"]C6Y"]:*V"]:$T"]0mQ"]0gO"]'[L"]'UJ"\sIG"\sFF"\j:C"\j7B"\a+?
"\Wt<"\Wn:#"ik8#"ie6#"`Y3#"WM0#"ND.#"N;+#"E/(#"E&%#";r##"2bt#")Vq#!uGm#!l;j#!l2g
#!c)e#!Yrb#!Pc^#!GW[#!GNX"[#9T#!><S#!50P#!,$M#!"jI#!"dG#<4^D#<+RA#<+L?#<"@<#;n18
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"BhDu"BqK!"BqK!"BqK!"C%Q""C%Q""C.W#"C.W#"C7]$"C@c%"C@c%"CRo'"CRo'"C[u("(Ir("(S#)
"(\&)"(n2+")"8,")+>-!bn;-!c+G/!c4M0!c=S1!cO_3!cXe4!cak5!HXn6!-On6!-b%8!-k+9!-t1:
!.1=<!.CI>!.LO?!.^[A!.pgC!/-sE!/@*G!/R6I!/dBK!0!NM!03ZO!0<`P!0NlR!0j,V!1'8X!19G[
!1KS]!1fe`!1oka!2-"c!2?.e!2Q:g!2lIi!3)Uk!3;am!3Mjn!3i'q!4&3s!4/9t!4AI"!4SU$!4ea&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&
!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&
!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&
!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&!4ea&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.424272 .994595 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"pP89"pP89"pG/6"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8T+!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%zzzzzzzzzzzzzzzzzzzz!!!!!
~>
<~1c70L2E!KR3&ilX3BB5`4$,Pe4?Yhk5!M:t5X7V$6:4+.6q'O57Rfj:7n?0B8P)NH8kM`L9MA,S9he>W
:/4S\:Jaka:f1(e;GpCj;c?Un;cH^q<E3(#<`W7&='&I)=BJ[-=BJ[-=BSd0=]nm1>$>*5>$G38>?kE<
?!U`A?=.&H?XR8M@:<VS@q0%\AS,OeB4tsmBkhF!Ci!s*DJsH4E,fl<F*)PJGB\7UG^4U^I!g?jIXcm!
JV&N-KnbA=Ll%"IN/`jXNfT9aP*D2rQC!u,R[]h<SXuIHTqS3UUo(&gW2ZetXKAY/Yd(L>Za@-J[^WcV
~>
<~0/57>2)[BR3]oPi5XIh+77Kd=8k_rT:f:4j<*!(&>$P?>?t!MSAS,UiC27X&DJsN8F*)PJGBnI[H[L3i
It3*%K8#&8Ll%"IN/`jXO,oEdP*;)oQ'Rc'R$a;1S"-"=SXl@DT:_aKTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.pLT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_^HSt;OFSt;OFSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OGT:_aJTV.sNTV.sNTV.sNTV.sNTV.pLT:_aJT:VXGSt;OFT:_aJT:_aJ
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
126.253 787.548 mo
124.177 782.757 126.069 777.064 130.48 774.832 cv
131.684 774.223 132.951 773.935 134.199 773.935 cv
137.525 773.935 140.717 775.982 142.226 779.464 cv
126.253 787.548 li
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
89.8221 822.997 mo
75.7083 820.897 li
76.4895 817.181 79.7661 814.498 83.2949 814.498 cv
83.6332 814.498 83.9737 814.522 84.3146 814.573 cv
88.2122 815.152 90.6779 818.924 89.8221 822.997 cv
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
390.667 823.613 mo
390.128 823.124 389.572 822.653 389 822.199 cv
389.175 819.12 391.243 816.364 394.179 815.629 cv
394.679 815.503 395.176 815.443 395.665 815.443 cv
398.599 815.443 401.192 817.611 401.797 820.823 cv
390.667 823.613 li
level3{
gsave
clp
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.45352e-11 -918.996 918.996 9.45352e-11 250 1084.64 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
389.116 824.001 mo
389.003 823.397 388.966 822.792 389 822.199 cv
389.572 822.653 390.128 823.124 390.667 823.613 cv
389.116 824.001 li
.181369 .36289 .815549 .00607309 cmyk
f
376.749 864.73 mo
376.749 864.73 383.414 861.563 385.134 856.403 cv
385.134 856.403 378.469 858.335 372.235 857.906 cv
363.227 857.288 355.036 842.917 338.053 842.917 cv
321.069 842.917 317.052 854.443 310.226 847.617 cv
303.399 840.79 312.728 824.951 313.48 813.88 cv
314.155 803.959 308.506 798.428 308.506 798.428 cv
308.506 798.429 li
302.911 791.323 289.994 793.596 288.177 803.398 cv
294.896 800.902 301.405 807.537 298.78 814.19 cv
298.78 814.19 302.688 814.769 302.688 819.212 cv
302.688 825.331 291.221 843.501 291.221 857.906 cv
291.221 872.312 304.516 881.556 328.808 881.556 cv
372.235 881.556 377.502 878.869 394.593 861.778 cv
394.593 861.778 384.704 865.533 376.749 864.73 cv
cp
0 0 0 0 cmyk
f
298.78 814.19 mo
294.074 814.595 293.602 812.046 285.597 817.354 cv
284.402 816.297 283.516 814.904 283.086 813.321 cv
288.444 808.127 li
287.953 806.622 287.867 804.989 288.177 803.398 cv
293.236 801.518 296.69 802.593 298.045 804.041 cv
299.63 805.737 299.743 811.747 298.78 814.19 cv
cp
.65539 .582483 .570153 .373724 cmyk
f
283.086 813.321 mo
283.516 814.904 284.402 816.297 285.597 817.354 cv
280.936 820.433 li
280.076 819.667 li
279.148 818.558 279.277 816.916 280.36 815.961 cv
283.086 813.321 li
cp
.0878309 0 .014374 0 cmyk
f
288.657 807.539 mo
288.101 808.131 li
280.357 815.964 li
279.277 816.918 279.151 818.559 280.074 819.667 cv
280.939 820.43 li
288.424 815.484 288.087 815.674 288.816 815.278 cv
288.819 815.27 li
292.894 812.764 li
296.979 810.251 291.983 804.004 288.657 807.539 cv
cp
0 .662013 .70837 0 cmyk
f
290.245 808.761 mo
290.241 809.423 290.035 810.246 289.615 811 cv
289.426 811.344 289.296 811.784 288.92 811.972 cv
288.557 812.163 288.134 812.281 287.589 812.127 cv
287.501 811.997 li
287.665 810.199 288.164 811.118 290.097 808.71 cv
290.245 808.761 li
cp
.657496 .630488 .663416 .628595 cmyk
f
296.6 802.844 mo
297.396 804.813 li
300.41 801.999 li
298.344 801.216 296.6 802.844 296.6 802.844 cv
cp
.65539 .582483 .570153 .373724 cmyk
f
348.972 864.894 mo
342.423 867.466 332.35 865.747 327.115 861.107 cv
331.155 861.314 344.697 863.59 348.972 864.894 cv
cp
.295689 .191623 0 0 cmyk
f
373.21 866.508 mo
361.703 874.668 343.07 875.039 331.328 867.525 cv
347.535 870.931 358.199 870.448 373.21 866.508 cv
cp
f
86.781 848.278 mo
87.0188 854.208 85.9641 861.331 84.7966 869.44 cv
82.1052 888.201 83.1858 886.49 82.2375 894.885 cv
80.4661 891.604 79.594 883.313 79.2092 879.651 cv
78.4846 872.418 79.7644 864.91 82.1287 858.131 cv
83.3401 854.725 84.7976 851.421 86.781 848.278 cv
cp
.47361 .350195 1 .111513 cmyk
f
92.6423 863.231 mo
92.6799 868.84 88.6501 881.937 87.1575 886.267 cv
83.7493 879.418 87.2693 868.646 92.6423 863.231 cv
cp
f
70.3591 863.231 mo
75.7727 868.688 79.2292 879.463 75.8435 886.267 cv
74.8342 883.339 70.3181 869.329 70.3591 863.231 cv
cp
f
426.094 848.278 mo
426.243 851.994 425.902 855.56 425.515 859.072 cv
425.107 862.58 424.602 866.022 424.11 869.44 cv
423.619 872.859 423.131 876.249 422.718 879.678 cv
422.286 883.114 421.968 891.194 421.551 894.885 cv
419.78 891.604 418.907 883.313 418.522 879.651 cv
418.155 875.979 418.304 872.28 418.832 868.674 cv
419.358 865.064 420.253 861.54 421.442 858.131 cv
422.654 854.725 424.111 851.421 426.094 848.278 cv
cp
f
431.955 863.231 mo
431.97 865.388 431.631 867.386 431.244 869.332 cv
430.842 871.273 430.356 873.15 429.847 875 cv
428.259 880.515 li
427.702 882.366 427.173 884.229 426.471 886.267 cv
425.507 884.328 425.17 882.195 425.139 880.1 cv
425.123 877.999 425.439 875.919 425.992 873.933 cv
426.545 871.943 427.328 870.043 428.302 868.249 cv
429.292 866.458 430.438 864.761 431.955 863.231 cv
cp
f
409.672 863.231 mo
411.19 864.761 412.336 866.458 413.325 868.249 cv
414.3 870.043 415.083 871.943 415.636 873.933 cv
416.189 875.919 416.505 877.999 416.488 880.1 cv
416.458 882.195 416.121 884.328 415.157 886.267 cv
414.455 884.229 413.926 882.366 413.369 880.515 cv
411.781 875 li
411.272 873.15 410.786 871.273 410.384 869.332 cv
409.997 867.386 409.658 865.388 409.672 863.231 cv
cp
f
449.344 896.904 mo
50.9626 896.904 li
46.321 896.904 42.5583 893.141 42.5583 888.5 cv
42.5583 883.858 46.321 880.096 50.9626 880.096 cv
449.344 880.096 li
453.986 880.096 457.748 883.858 457.748 888.5 cv
457.748 893.141 453.986 896.904 449.344 896.904 cv
cp
f
402.278 896.904 mo
96.1125 896.904 li
91.4709 896.904 87.7083 893.141 87.7083 888.5 cv
87.7083 883.86 91.469 880.096 96.1125 880.096 cv
402.278 880.096 li
406.919 880.096 410.682 883.858 410.682 888.5 cv
410.682 893.141 406.919 896.904 402.278 896.904 cv
cp
.398413 .282383 0 0 cmyk
f
144.01 865.708 mo
144.01 865.708 134.708 860.317 128.926 847.475 cv
128.926 847.475 134.761 849.166 140.22 848.791 cv
148.107 848.249 159.399 841.786 174.793 846.162 cv
189.096 850.227 196.094 854.422 199.485 851.405 cv
205.8 845.786 190.694 829.784 189.609 818.872 cv
188.687 809.608 193.359 804.98 193.359 804.98 cv
198.258 798.758 209.568 800.749 211.159 809.33 cv
205.276 807.145 199.577 812.955 201.875 818.78 cv
201.875 818.78 199.195 818.613 199.195 822.503 cv
199.195 827.861 214.445 843.876 214.445 859.13 cv
214.445 871.743 204.157 879.993 182.886 879.993 cv
144.864 879.993 140.252 877.64 125.287 862.675 cv
125.287 862.675 134.127 866.451 144.01 865.708 cv
cp
0 0 0 0 cmyk
f
201.875 818.78 mo
205.995 819.135 206.409 816.903 213.418 821.551 cv
214.464 820.624 215.24 819.405 215.616 818.019 cv
210.926 813.471 li
211.355 812.154 211.43 810.723 211.159 809.33 cv
206.729 807.685 203.705 808.625 202.519 809.894 cv
201.131 811.379 201.031 816.641 201.875 818.78 cv
cp
.65539 .582483 .570153 .373724 cmyk
f
215.616 818.019 mo
215.24 819.405 214.464 820.624 213.418 821.551 cv
217.499 824.246 li
218.252 823.576 li
219.065 822.604 218.952 821.166 218.003 820.331 cv
215.616 818.019 li
cp
.0878309 0 .014374 0 cmyk
f
210.738 812.956 mo
211.225 813.474 li
218.006 820.333 li
218.952 821.169 219.062 822.605 218.253 823.575 cv
217.496 824.243 li
210.943 819.913 211.238 820.079 210.6 819.733 cv
210.597 819.726 li
207.029 817.531 li
203.452 815.331 207.827 809.861 210.738 812.956 cv
cp
0 .662013 .70837 0 cmyk
f
209.348 814.027 mo
209.351 814.606 209.531 815.327 209.9 815.987 cv
210.066 816.288 210.179 816.674 210.509 816.838 cv
210.826 817.005 211.197 817.109 211.674 816.974 cv
211.751 816.86 li
211.607 815.286 211.17 816.09 209.477 813.982 cv
209.348 814.027 li
cp
.657496 .630488 .663416 .628595 cmyk
f
203.784 808.846 mo
203.087 810.57 li
200.448 808.105 li
202.257 807.42 203.784 808.846 203.784 808.846 cv
cp
.65539 .582483 .570153 .373724 cmyk
f
162.306 862.248 mo
166.837 866.422 175.603 868.212 181.346 866.085 cv
177.984 864.973 166.209 862.539 162.306 862.248 cv
cp
.295689 .191623 0 0 cmyk
f
136.138 859.13 mo
143.474 869.068 158.869 874.479 170.691 871.444 cv
156.28 869.839 147.543 866.518 136.138 859.13 cv
cp
f
366.653 892.018 mo
366.653 897.018 li
340.987 897.018 li
337.259 897.018 334.237 900.04 334.237 903.768 cv
334.237 907.495 337.259 910.518 340.987 910.518 cv
355.903 910.518 li
359.907 910.518 363.153 913.763 363.153 917.768 cv
363.153 921.771 359.907 925.018 355.903 925.018 cv
249.153 925.018 li
251.153 925.018 li
144.403 925.018 li
140.399 925.018 137.153 921.771 137.153 917.768 cv
137.153 913.763 140.399 910.518 144.403 910.518 cv
159.653 910.518 li
163.381 910.518 166.403 907.495 166.403 903.768 cv
166.403 900.04 163.381 897.018 159.653 897.018 cv
133.653 897.018 li
133.653 892.018 li
366.653 892.018 li
cp
.398413 .282383 0 0 cmyk
f
321.485 891.184 mo
174.485 891.184 li
171.586 891.184 169.235 888.833 169.235 885.934 cv
169.235 883.035 171.586 880.684 174.485 880.684 cv
321.485 880.684 li
324.385 880.684 326.735 883.035 326.735 885.934 cv
326.735 888.833 324.385 891.184 321.485 891.184 cv
cp
.483986 .329564 0 0 cmyk
f
277.153 909.184 mo
223.153 909.184 li
220.254 909.184 217.903 906.833 217.903 903.934 cv
217.903 901.035 220.254 898.684 223.153 898.684 cv
277.153 898.684 li
280.053 898.684 282.403 901.035 282.403 903.934 cv
282.403 906.833 280.053 909.184 277.153 909.184 cv
cp
.358495 .223301 0 0 cmyk
f
180.003 107.325 mo
187.666 107.325 193.878 113.537 193.878 121.2 cv
166.129 121.2 li
166.129 113.537 172.341 107.325 180.003 107.325 cv
cp
.032166 .161318 .093904 0 cmyk
f
600.5 914.066 mo
597.194 851.707 597.476 841.974 597.476 839.926 cv
597.434 840.643 li
597.391 839.926 li
597.391 841.974 597.673 851.707 594.367 914.066 cv
600.5 914.066 li
cp
.378668 .524163 .441932 .0630503 cmyk
f
611.697 825.786 mo
600.126 826.717 li
610.07 821.025 li
608.694 817.123 601.511 797.018 597.382 797.018 cv
592.641 797.219 582.388 825.502 577.833 844.167 cv
589.589 848.572 li
576.922 848.135 li
576.073 852.104 575.578 855.397 575.578 857.539 cv
575.578 869.594 585.338 879.368 597.382 879.394 cv
597.434 879.394 li
609.504 879.394 619.289 869.609 619.289 857.539 cv
619.289 851.949 615.923 838.556 611.697 825.786 cv
cp
.442084 .36701 1 .115572 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: ( ) ()
%%Title: (d_082-11.eps)
%%CreationDate: 12/29/2017 1:51 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KGC(7Kp@.sgT?#gi\Kjp)hHoPUb-HQX`%@:=gt\B(?S!@Y(kD`:M>c\rF3aDp%$DSqJIu'fG%[_D?KUtKcLbpn31@ME9`M]]
%\f7JSbBFpBre7HS5$YjGqt;tD(W1Og\tJGer8Mma7eeEG`t#`+Ti62SGC"4O17Tnec_^rbq)k:0VmH3t<rQtjBg!?HJR8V`T82Is
%oZpQN4?.QnpLK?%=8gNkfUpGa#)cO3G3Gb%MJiE%%X12BpmKFJY9'7MWVtdb!R68.nabH1PFoV=T*_FMEKJ23$Ql*&Fjkk)3,f?k
%UlHCIEU1o"?4>_Mk)7o#0q(jdr<-oY*_#G;qnpk`qZ3:2^Z@em"$a6*_kY'$Geoiu;HL]T`@!7=ij74B;`lk6]:tTY2a^5_@Gfj.
%Se1"dMgt#tngFA%[JX(@T(Dl*(SBZk$R2J`K^c=gDfA>[^b^25OYjk[l06;tp3+0e%-)ahLF9"[_.(L:"q5?1VE7/Te&=C!cA>b6
%U=jBL!^FWq^_@jR_ej?kikb6ae90J:/8nFECA>h_puhV,2oEJjE5pL)2I#O/hSU7'dhL^;oS^'GE;%1[["."%F=q.rqIFn3*5e_S
%g\^"3/L52[kWciAj^@do\,_n`NmDZJn$`p"r:]dLjRM0a&D+G4+7ec?3-dO_OW&O)#ojr!Uuf$*Qkho:H$B1Zj[JeI+(igk`$8uU
%n;=IdX@(JYa#N,*@HB_CNS]U@pK\$TMeGZZlJZQ$W*ghC=pb'rFgi%OSVf@E0D'^u(f&#*\DF:aM$@6\qoM$O`lmDKPLl#7#Y336
%kac+^3WMR3mU.cZ&!Q7h50V>[Xj4PtE"9Y"g2VK^s$m\#:K.1`kMiT3j3dVk=5V&*I@pJln'g[j[OB#9U'SM&&RH5AGZbaRqkDLq
%`G<m9Y=[D>^^kZmRc7oR$30$sH&e6Q3Sp4fpe.4=2>o`<g@%NDh;7V\"oUWsM)C_ZRC.i6PPpBJMVih(DT;icLAf!hGT$3JoToH1
%S\kDO%<`*Y;r>Q5Ya_n)p`I7ZVsloO`<M6#NLdrde9Ch@Vm0V(<&UVT"aCo.%KGHGrB?edZUBdc,L+5k%2JkT\$Fks%^>*%f!4C:
%j2FuS9@sV*_`m(0XGT^tlT+j%:E4i!bHR%:VV0>#S$A%L+2;4hffHqK]^^4Rs5R\C8,U[[P:[S/\?#l/9X,A3nR<f$WFJY5@ult]
%_%U=rHI"W;NFtsq:M+a-Bk*Kc(LD_7'PeCE8@PpsZ_+L`p`D/!CE<;n`eE6-s7%#o+P\SM\UYq`I-__eV2OFd(6)F?e9JE4fV/pB
%,3G2N5&25ZHhLu.Ggpsm0qs0!q08<P5-(8T^j]oLhKT7'Ch9r`B*6)PkgPGAAHi&!*k5K@YC\Pb=:,Pj8f'1S<[-A&<g/&]2;;TA
%eSJW_`,O/lC.La67?b]S=iK`.f6-;27uf')rpi2FP<-!N&?tWgaBih4(p[**aBil1^8iK*,mjI?,kC1+Iq9Mp8KHKbdp_.aOhK]H
%DO6nl8+u6@fQVIK01W`9T#Wk0s(m/;GO^Y5Z&`4Q#@YB*K:-4@mGGFb<k-rap5Cl4q8ekWeYQ89]"RVHes<]>a;Wr\8^e8i\%8qm
%Aj4kg07D$;bP=u:IZtLi^+.e&0Jlq&pJsLVhp6Ks*q=E!C3?cVO;#)(+HuK;ipE"l!b<d0Z8p'i\%.4=9L`O@;a]0s_mT&4NVn(%
%fEdRi!fJtuMg'lM!1@o`.R;!5AUr#1*dNZh?TZ@$eOZbRA;lr@WKHY?pO+L"Y8Ljb:0TBmi6e'b%mKPW0"V,)A4`(l(hEEH)`Tf4
%DN*->]1scG%Nj@Q[mPhaZM+E2)W"V=rnEd@41ni\Ku4%!W43Orcn1k;Y&`4\L7>FM$1E[n7'0G5:\*_Rcf0<,JM[4JI(HgED5`%.
%Mp'd_j@aE+O)]L^`>rrU^QAiD,brjCETb@42"EUP3*G@n^:XgKFD,.#L2W?P5SrQY8_h.6T)]c2lG"0k9Ri/B2W>DN9b/0J*HDId
%@atqemQ,bk[Oe@N@XcWChOYc0l06^IOB,<Mp0MUDEoNCfq*p0-F;/r(Y@YdRa6G/8e(K!"J57E.AJ#DDg^+u@OXt7MOAQn_'MP%?
%Vl.ENN>'A\0f%<#>Ue=Bjm7P#5fQqq-4gVSr9_S)N1)7tX0.SRn88s&5uJTcSJudXJN/32!,V0>Xo9Vb0nC=r)*^RBJ!r8c9d7<p
%'sYJSeBd&FoTC;i1*W0'.\Uft_\s$*Y+&$%VkC0[kiqT>IS/*(ZKB1N47\5mf.)"u5G8,3`:Qpe9mhQ>VnEa3:]umq:fed%X3e="
%O\2:m:@SsK^dq1kHDg]KLo[Ch#_cF*&1:h[oZ"VW@d5oiVNM3;SN:iB)*asG^A:1($3_\1)PA4Ur[Bb"&CasXBFFsqdZfR[!hrL;
%m'2[sN7/(f+.dpl]bcmP53&gdin,0YJTR7se3iu(MS.h8Kkeh_crGTe;oq#CIT(B#Gk^k!0NB93C`K=#%Y5dq[aOQ!0WUgF!tuT0
%b\1BLRa<\':)"htJ34=GP5$t6eM8-Z&;O1`p^,:2&1FD.mJp(&."p?o*,7FQN/sri5`S0@[M%eI+UeoPPF-:^S'K[u$107)&^Y-M
%FjE$nqKY=Ma<nf.Uo-ku)@:pfqaM<X2(_d%:N$<&37hjRcDhA4piIN-,ul[F)hFMp8Rs\L(19ujl_I2uP;5^/!6S>r"irq4>qrOG
%9Hg$*!L&I1\r)!a)0'M1':T+F/3TU_^>(QK@N6S5ElG&B&1nL`Z?M<!J[#1eX,7Em%PqGr>$"I(R=A67;mf#mJB;=o'-Zoa5[/LT
%;&AnrAi>5F$'ltNoQ*%_`4j^-5S%R6"Z)m-ZOFd_^1]B+0#$"dpM1>=V_?a:0P]p8<Zd9GY5a)M0,AE\c/MhY#/^3`YR"P"CG,Gl
%(spNBkcB"foY#h$$@jGb`%b\f80u#E+"Ei$+u7'XY$d*'hCtH*P;/b'1!aY^!TKtXR_d\Ze=C2R3]WK_bPg3t[($&!97WDW?@'2m
%'Lk#bXV:!a'gtoLXhKHKQ-3&Ihf(XuYZKfn]kaFMqQZ^YX;"+b//L;&6nMR_\eRes@&9tPKSh"H=Tk$m6e`NR6r5'q%6)+>_D/CW
%Vog5kJXEi*(80A8EAd3"lC7MoT''p5TV:L#knE!Wn8/ng[5KX:dU-MDb%u'7QZ,:Ek?9%9!E9XaF6^p[FV-Je>tUjc>>rCReLc8s
%j-7utWLMEan#TPg9)(:im#0pT(75rCY;W5fP$p/+C?+<u26L,&=-X1S&6o6nlH#phP4KYjF)^6I$I;HsD_2tE6S;t.j3fCjqYPgA
%V!8,0NPC.:M-pZLY%nQ@2h8Y(h,H",r1"B22fi#c1TlXNCq=ahk=RPe=.GP+/gYDnADn*nKfUD4J2g$a$W)4@"5(g,4e-T[0<sM6
%*9#R-X+p;[?ao/tY9g1-ngjlTWG6()).&Iue?He<aJV\LS."EkoK<sGc9RchBs?kh&)Vcqfd1VS:=@;1aTW'$mLkrU:j#nuo#@SC
%4Z-%M5>M\s_Dl;-FAdpY""[r;203JQYNn`TIRJk1U#273*!phLI?-`bit=8b7%@uROYn:kNQ&)UFuf!p:m<2tRo%%K`],a[ORl4$
%LO/d')8;LA$WG3&NcZ)aGcWpt@4!uo+K-J3`?mA7)./(rC//:aM.FkA&d=Ds54;Cf-Bpo+Y1/6<#VkDA$h]eM^f,$8@FNe?R_f-9
%Z6bu/;Kj:o7Q,,Q%Tm*2Brdu=qP*ZTBk&DbfLCO0Kb+DJ)kE,l/phD8A/r.cM;o]_KlNI6-?P-6CYT&&'j7FA':@_]ik/p38:j-r
%KBruJ4;<Mf;"q0rN4WJL?Gm9YSRiI9UNA8U9gDik>''P9.EX-Oand%bL01'-`Z0&J7d1MDXKm[U1jOhj3P3jNfVLRr9Rga@D'DQr
%dR'5=;4g1+._AGZ@"\M&=9kKlGUoCEP%A%TfRmk^f2!;`m;aJ?nS)K(e%u';0"?;_kA\(Ug=.NM18Sg@?p9YhQDRB+e'l:CiHV9!
%);m8E^L(h&V2=dXOjZP6'?_)X1G2C@\.^=n2-0p#EJLY>)C5-cHKaBG;,A.oU!R(e9la@+8j(9D&k`K.V7CERKG_"m$=k<?S1Q!;
%0"?kW,rcE<`)-YdNsSh6dTsji=$WO6b*]=,*(iW*>Ym&8E!GN1*)UHG;gNZ?'Vc(0&o@!0@%5+m`39;b312HXV)WTX2%2tW!*6@?
%)7,=^MPR53M6Grq[uXc'ToOSne,_,L-.8SY*+8;K[S3*PJc06>M4MMTU6LG-X?:+]*g5E#eRoJ6bA$XN1[l)d.ZRd$PP9e$_K\D?
%q?rjOC"=MX9\;L[/R1n@`KK5N5#iQb>ZV4VS'gF(o!?l9WVbbY]Wn_-8WD-\fC3SGl%*isp;sZWK[qR0RPNQJauLi$+Wc2g2dS_V
%aq:7PH\jF-kRc'pf';tja+hU3rOdsJ9!CjeN\G.LNr?,96V-,*&lfZ6M5jl#H.:<6mqm&+!cXRMqP*N)pq6E)VD9YBoqsInhNX)Q
%bJ"4^*(qif3B>9CA_(Ok@o5m(0fc[0pOO]pK$FZ3GloL33nEf-og]\i2%8:GSiE5XcI_0@X'4nm7fG/\?T6'U1F%B&aG@rPR[M>>
%q.4L,I?XEEOVngl;l^n+/@4WD)'9qr%@q^7,Fc2ah9)A($?@U;09OELM[$lVDl*"cf=U&9c(HiX65P?NjhuRd)TRr[7Sjsg,6(CF
%>>="E`8HCEaqh8%gG(U[hu@)?HF;M6AZO\9(0PjoDWBPS5BoigYg)X%DJ/S3pX/`T@rc:!rdk]jBcs`;M7dq(HT>m@U(DP5+JXW'
%gYX@A9Hm/)<@0<X.,NLhbDCjMaS<'^e=*C07u]Mhf;cT'pt')"5ur+uolTLs(X6lg3$ZM]*b:XV"]md[s(^,'Lh16"=Albc>QreP
%/%`8/]U,RWeXC+lS2`0g!c_6`UJF]]g1)+Z/6'>sXRG>'3'L,W4&&FV3$*EQ^WHeW).[uu19Tj%muT(3A4!K!U)@@*Y($mkEm95;
%Mk%'URAQn3%U[K%Z_.QoQk.`0"[S5mD#(_F9b\*bASY.2D6W8.A^8sA@]E1lVR3NK6\ef.Wo:%in$R[Ep,8\c$`b488sO9?,F?U!
%X<J!SN.Qd:MD/%tZB"F!i,=KNA/6n^&u?(PG!n:=Oc@A'*[eqnE6S,B&Ur^Jmo-uhbC=!gfn`-#3>A-KbRg?2gkT.id[*f=EC7*@
%<XCOH53t,"<M5"/&N&rF%rlL2bEgR9^?V$[1&"eVe^Ul.9fB!AC_K)-q!=HCSV8QTdm[phO$P?XIVWk1JR8T;H0^jB9!#p,(mT2n
%m8Sf02$<2CO\7q0<>ek.->(fUW"oAKMlsu4ij,N`;#NqWCLX5WfE7M0J9=4SU+?.9oS%^!p_MlN[;O"nN&4'>o>DuY#`Q`HB/NIs
%9@cqMl^0t;g*OtX"fF&@^+M;4?92+S+PHajSsD[jZKX18D@,<ki*DF6"a)r/=DPQqZT53nEI(#,)u1\/X?RIFC6gZPp4=-N+S'R3
%JJM6B2V2WE+\ad[\M\e2l3LsH!ccJ?Fs2ic&q(Y>QjEE$'hl(SmB8+hY3V@0jE2];ei4;j>QTi-KM@b[abh\YU">+]'$Z8%?mFuI
%9oP=pFDDp@<h37SDL)((VDY-N/VCQ%'K2FTS2BAu,K2q>h3TXS\WEs<`rT[NJj?(!N/JDlnjT3fHE3rJ&4uH'%9S,ho>\>$ITGZ,
%G!7*Q&jgHUS0]!q.T;j3nit5b-q)ccV*rhPT,<5mETk@R^<si`^%M",Em[JZD'kQk3F4OLWfT3kLlP=g,W<HM%C+uRLH]k.CE24K
%>n-,6CI9T=Ue&+V'?2cc;PQn*.!(cb@l`F8AKm*(O\[9IOi0SRQ?u<2a9bgmYt0_eL1jc[ZkS'/ns.9W:iUhlFAO"*Cbhqt'X$[\
%n!fGc\mqOCN'LZ80P-92j[i&O7uUTl0H;V&W07+t-]iH>b9mrNP4bC?;Oc-kS2":ZU9=%S.[%=NA6:adV##9N`1>?jS7UAaQ2tg1
%*-f]LUnJHP)L>L&9%&dn+iS$IKJ)ms]`g=\WHm+0U.7"/]J$CaqKDC0^rZRTHMAgZF!/SXlrfr:5XH'foVcGnp(N-se+Alh]nN4*
%'BQfl&l"*1NO`TFk[B>pmY,?f1_IhZ+k1P^c&n?t3p9QQW.A<m,=Y_'3&Z%5ZVfijSq[hI]q]PY'=$DJ)>#lZ__C,BlAA[N$*nYP
%@\E]6/J8PrKN7f#L+N6o-L-L7Q"b\>*O-l"U.Wg!]dlgPf+1gD<!l,O4dAI1d;$2OT/h7[WSC32(53Jn.F0Y8Tn_nm%'j:TC#%"?
%=Of&8&P/og]GWPh">.DeJRk'7%SgN$7ZPEg6/TbO.5Qg#5j=,-*7RI"/nLhtpZ_F>-BTdNoY+T+&;`DZ\&rZ]3\hj%`3;sDkU9"[
%EW%.,%'jao/=P3<,<tRA-nc#Zl[)G"4:?G\eM5W%8tSM?@$7>(@%"J^:1M:1'U[l+A<@0"*36?E+]G]80eF@8SBq)?aYreueW*=9
%72Z\_iZjsp'M_2RVI#1:K#4X+>uW3+X<Nrsc3YpSOI0"]BU`umRol81aJdeq=<-"'IbLB^&[)%@CS3>4I:>)@>`IueALjBmMO*5]
%Cp"/^*i-cQ$5l_PlP@m1-HSYLRj^r\^f6IjHL[+5fiAG"[9/MqH-D9m-5jabN2KFl\:huae5/TOQAmet'd-[(Q-`DD4+MQV/QdE6
%&\G>mgs[u/3n^hLeXA7i`BnnZ"Z'AHd.fdLd#"^K<:!F70kF5)O"hgmnRN5sWTX8X.E`>=NR'[%)]b,A&c8^E7[HQ:0uPC0Y-?h&
%Kd)@uV1"r"M*Vt:(`Sp?6:s[pJP`GkA&P_+_0$&.C:l[p1Z/s>"iLH(e#J3@a#7a:0OdkM5.1q)DIl]!BIcrrI::p1+cuQME?cN?
%*=Idu<JQ6'g0dge*900ObAYfSV@7""9e$o%(Xi/qk>e!JQ351$5R]8%2ipQDa0KiKd%[aMhH)G*EgM>.dR%][EA)n9*r"2>mNWbb
%Dd52gGtNRU\$BM2(pQCi4)<`LS`Z&ionB1[d&*+]9Gn_1^;*N1NokUV"=:)/C#paAIKpHBP@J[mh6/oWmE7+2*.'0j-Op9E.0(p,
%,1g3T;Gnj,R*Z"@2DdBkF!=JEgZc#Sa,;5Uc+'<tNpQ#M.<1%(bK1-ub&3#\B:!.#>ud_2=\jsOLPOE7PQ1pqns8W:kn>$g*%_gi
%?3Eb4N_e=5`6b/pN3.k]Y#h=>XRV+g92b&_nKqec5$%U:UDtBc<GPBsq&h]>_FR[c)H6`m\/UGGr[1BCnl4h9Eec:\0d;:3>Sbnh
%;][jc'a+h\0#;l0Lek5L.J'R>/A*dV(5\$;F6^nm6-IWlEpTDK<R9Cpgjj[LHrr/m3$Z5A+^rf[2"0S+Wh[PGF*K(\GR;3799.)p
%0ug;5H5s#*]Zq^!cZ?/(2Y*(=PR+dPW,%I\l&D#d*Ns8S.S[LGft?"V=^??6gUW)Tm:oV001T-f=5B$LM>gi]4$6])7l`W^=fftq
%h\Wkp5_c-_isU(M,CfQ8DWQj::Glg)l=esf[l!>`j\bb+W'@:NCOM+iA@L/s_Ehd.!*a\Td[Ip!`3I^PRDel2XaF(nniTnXO?%6,
%i:T_Q/\Il:Ij'W#e$j[f6eo>>J'=f<\CW?Nh9%X!I6O-\Vf2@6l3mR!5?s_L?=u@NdYV%$Vf9OeK"K'0^\3ojQFqN-5(aq!cDG6P
%O![BGldtQ8LXXkmf&P.gfO@(RkgrU6GNdgi[eOo)HOF1&*=`<hHg(02FSa+B9)%3Q(C/""CAHP@<88Q+Atlh4!IY\QS,7[T*\=1p
%dJMm2le1U]i!Zsp2m[D8S.,s9`8J8?`hpW@n-Br9>/\_[-@ZHEdo3BFloLUST8s5@_+Y?-R&*%*QN>=1WY-s)0)fE^kAW=DKl0a>
%k+jQA5l59;UZRK@`GiTlr.g%efr'H)R'4n^$t&SiGW\#,cLqc\UXrQ,qL#M,DKWt:al-J_P'p=4J:k_ag!lB"TFGgOK@Al.6)ue'
%Rif+G:8_T)Hc>IE8c!At'AdF,#k(Mp:WK7+M0t82juIt/k[6O.IlC^Cm1oqE'KqpJS$;E3pOZaKlp*I5Y^9DcrSRK/GurO[i5]\\
%b5MF$9[trCTB((gl-4M]61dt!)+=K]3eUAb?OT\)`OD,jR8urKE!47i"pm.nZiB1gW5mrGlQso<F*0=.!4HV/T8aUR"lRjne*5QH
%YdJsC3#rY,M(A=#Q/O6dYrW?-Hh[@o05>VV3g"hM)]Xlg7c/.?q-c#rS,b]t_b[[F#AU8$NSD^e3eu=jrTF$bs1<a)%kjnMX?_cm
%OqKDsM-6Lk_APRT.%+*s]]<8\qS3*jJ"uX\l*D!^]XW[T;=Sp?Y:p6c?\A@jQ'dnk8dZl>d\2h&ksFW3l!k#?-nZ30(B=4g(t='C
%^*4s[PXLh%$jBedJW`Cbo$RpC@6\e*\55:939\_nldm>\L,NG#UBF0rKpb[t<,sBm.(uQ$oj]@mWH_6el;U=BI;tcR!ND]jDC>N)
%HMd>2c'C>G9>uPCdkG0^nUX8p69uW"#7>d"Fd$.[a-&J[h!<Qi2t`j%<79]e<>$5h;b:Z?FOW<oa:Q^pdY#t\\Sa2^o;LRKJ763A
%%K;.,E/9LeIdKe:mY`URK&o<Vb*@6D2<HF@=FcLQhi!Rqoii0lQ%,ts%lG,PlPQICL-^-'Ht+I6hk<O0]ndbf326h9YVSc9:h+7I
%K!dj^XZ:Db]c^VnG_UVS*5EY<<oTMkmdW="_'33AJO6J,Z2ggiN<0b*(t#p=kRU^D*a_g%=FhBc,pfWE5t(hP='?T8;-]kUWc\*C
%oOR30@'/F<.(LngQ1:%.P46=o#oI^LKY0!<%[.;YqAkWSbDV!!lU0o6ku,X&i$6l)'rG!>`;k+1#s#G'M[XSB"up!C;S[.&j*HCG
%&FX$`RH5_`PR<ciE?sO9S8;H9LdbUdW"*7g*gA;9>jN@m4AG;['4s]B*>!5`#^8@MT+#@GXNYso+<o_hL6Y2,+Jd!<")U:Ai;gj\
%60Z6cj'ZHF*3;+(=qf>YoRRXcOb;-iBN,cp^-hNC%=u@uAW))]iA1+XqRN:%FKl'M18ht6TMl.Z/qOH4Jd%KKW(6@-+Xg'8F,5>W
%$%1Y)!('uKnbQS<lb[,q#ct53LeB1`:h/*.Eg<62jCWr]F,ON)Jjg)*ArS*R/4mB;N@)RY92o'2b!J`*C(.K/<tqi7ger.a!];aS
%ek==;?)-IM0o(Qk!::+8LluEtek2a':b.)J!!Z8pYMg"QeihrATQU-3B>td\Qp=*)803[XYk91>VZ3B>N@I@&F[$TAIM)qm"Fq=>
%.0.+-J\Ojb+<pq''DP'ckQ6bITR2i(,5G2+emNfG_?][a3#"%i?oI(gO_;[(iMD&T\h4[%$YbNG:qBWYMnt:<;t:+8KnH]]#)Pb0
%.dK5PW%P?P!AUCo8Krild%LfYY_6C]_.%J"6/j'tBM%5n7kd1>5nM0u(ue0gYX/=&\aX6I$NPiDV]>fAO<cEUm3-BhJj]m@m/jlm
%@e]q%kG:JfD0`8)CPRr9K&#Qt"oBEk^,k`]SN/mgF$OhenQm>8^<>u)'*l82LEL]eK^Oi;2K!3V$Cu>Qq7cS#o@Lh5i'q.,/bMC4
%8lL1g&dG=fpI?9JJF<0f2@<)/^%^^#)kYmL.bS-amagBF>V47A7<+p;YqClB64af>Qk7,D'#Sf7N/:t+/r"oW-<@3HpMq;#nH%];
%PV\l_8MH8d!fbZM*S5@\OChAh9Rm60/?NccQ[i^:-]H4[4GMiL'Rug<9:<!A>_Qi4Tn\65ZQ_^C^-DpV#eD#R=_?`^o<\PgV(Upm
%H_#$X`hi2kq%h"!LJd=sI2F7H`X,-bTWqt32NCiCPUD7Lp>!@e_[I@?b6N,*Ji'*EJ9-7Mb5aihLp2EKl$Ih#V?9pA&""H'$UV"0
%8[p`)`$nZ-oXSoa<#L7a^5+Y37>EBC\qZr2X!ak0WX2r[!=0'8]"C<\TbJ/F3>"\b/\qcm9r*s3!W%H52O+t^@Q=7Z`/ZB@D;iHb
%<_.k[*t]/2b?dc>Up=OU79b`O'V]j+BD()EkOn;8/3&FO58C-Ef1KFuo,5Ltr)12):^T(GMq@`>7I@BMca_TU^3`=hA^@Ek_e1ui
%jqZEZe608X3*M=7f;sRG?l91l\U/b6n+?Ii?EX`163k$8'MrHO9/6WhnTt8%4h'TrqqYSf$OfEnU6iqd02SY/1NEr<`#<qF"N/Ro
%Z1f9a@OK)21R?YU/?FIfg;KA%3SQ"$c'YhtN)aEJV%>5H=NQ6=U.>US!-f;,;?D/26mfmpXs$OIJMNMmV%>)d:l0l4Q2l7u\BHso
%T1KV.$[XTo1ZZDb^mS4-faQ"`bX^#qNX:$EFCe<Q#ZH2nMFEU.E`qVrdcH0EG=_+QO9&6c&mf$R"C_GN8#n!'#I4X6O!fk/M^(hi
%2P;F(?!0FklfGc-G#+Gn;HXX7`3Md7$*caTFR00#d5>!s;;=KXoR[/L,dhQT?E$o;nsTVQ+)5VXIC&%3Os:HH(RQIY@WA_'_:*[L
%&g2N-*2SQu,k?&Ndn5gI'I8g\&t\E4`et%@l7j'c%Cca)B_hus!RO*N<q9IiZlOL-X?HAa\$IGD?L0WX^GWeBiC=;W99=EH#1d^j
%6/W[Jmn1&pPje:8C;q(9l^TUqc*a@jXXN<^d#'0Y<nO3AIB]\,Qhk!e^%F67/T<_Sllr9i,rUZ14?8<gQ68]'=MjnJ9A>MFnNggl
%+9T&EYuAfZK1qN6llZr-9@h25CcRI-@GtkCH39g+6A&'#K+Jk4.4tl\JQZ]SI4")7)77GW*JOm2+W#/4+@lh'3J<dC6sLnl`_rc&
%O;Q_>lj>#aK7OK)UCkiYZ--O0gJ6k7U&aeYhma%^P]<\DAO\p^&tieRTRr\q#pPd$+=%a7Q7pU3P-%PY6W$j/%FnRWee6TtQ"S8t
%atp>_*N<$MpZgWkmCAYTXn4HK;('lU;pDY-OB6j>s)HH%&Sbk1j&?ZiQldRP?QCBY(NhPBX"e%jdn>$+]7QXim7MZ)eb@!%9;k]A
%-u:HGI/K?aS?Xbr:*$kc1?f0acXh-j>>q&4annQlBgpH)=M),;:/WR<[%L+@D(N9#7(7r%X9^\pRcQnNQ%`OGBk<!Y<G>6_G#W-?
%*J9(4)O:cI8B/e]U"Lo_V4q&5:4f]=$mi5VBZqa29aJpqYY,6KP-L+k-D;t')(@Yg+sH=cVDY*k=[&Z..-h2(VSKQ+pk48Mo`[c7
%KZ#A!8gRS?TZ3Ygpg=f>ZFHajL]TFp)AB9??D2J#U?aTE[640`&1,ka!c7f]-%+"h/(U;upJ@X1j=<^W@.n.\1AbW`59i<'"XEU_
%:m,Ka`)d-n_MB\+'-7mT(XdLNc/keBf+9G@8/YeA"b"OYg^1(r>qKS7_%qqVs-n&:#;qCFk&5Ppb2_#-2(qTJkLEnhZM9,\Q_d_F
%DiKKl;pD5gd0*4C'qm6S\4Vk]:S!F\AnhBX%Q3As7mZAqR>MLm.Lkp%9WU`XVGHL.OK2WSg,1%(+VY<VacHr'/<cq_@5q?LN(\/<
%3Ii@^%hd('Q,SNq?@`$X?fNaFRcBPIBdEfL'o4:r8ld@q":$dkF'R<FN7deQ9>@GkNW!IcQX7&P'In!tjOP'U4XQkd!nSe'DFCMZ
%9TEtV<4=KZD+S^TXbc'UFJR@9--8NRC(jLq10L?tAI.7/`m@UM1ai`>Ue!dEEW_XGPY*hlQ*FR+gF#QYa9l%?+Y<\c<$#I7C&m$=
%jT\4)<#O!DC/h?$AQW<8ZH-1u2tmV'aT@C_)2=AJ:bk?.KI9)7\OP^=-=9$SdY^r?]B`Y4gq%TE$Iia3?"N8#'r\D.r:u7NN@V]P
%B'^.;X48WkF%Qt@1iU&"9krO\ekOc*)7h^GK^76cQ;),H%,IAO;_rQ1L)*MIc_/:NUc0ggasqOD<LPUIpSDZ3;QV3J1&8;W:cPoc
%2%%VTW$p2fJmMB,)SK<oWDJQ,m*I:11il[nokFrJ>LKa>NZD:89?TNNZ>2olTk,$P][507(GtNTCVP=XCYNu[].X:6km4!k9>Zr=
%k4reGhOP$I+CLV?>t)dd>n8#mmTmuObNH6slf=n;='l<A?*9k['aU3SjpP$i]emGDODRro.`E8hS%;K4eW39?po"u<J`Hs4.3tsB
%&3F<X#'=IUpKD"XG(V&SV.gli9.=`<"mR3V-`U^.W.b9/+*`7uo(s(ZNDPPd%Qub0;KPo0g3s=*!k7P!Yqt*QhE&0@eHpa0?lE2Z
%n!5%lELJ.LA]4mp+)p4!0X\)#Y3WqS=gqQZl_6_sdp*L9bEm-KN=@KQ\s/"@?^'T9N$5!U^lUAsE^#<D1Pu',;CQrl80(Zs.SGsc
%Lt?d;_ZE@@*`o%j,^frd6T?bFjMZSF6ZRr7DfEordY3o:J2_Y^9]:&A=ih@4QQq^t+m"F#0b`!%)O#u'Xn2#:"[b=Z-m"s"0M"s%
%D2%7;C*0lUZpZl\oHb=BPKSZ!\EK%#GFtBVJ9NC8MNGGOA=RT,;p:"m\u(!W%kRYmEp>f.P@.WVEp/*.8*:,!Fau4,0c;M\"5OY>
%rdnC(KY*:aoHErMRW-U&CeDE6Z%I2=cAmmhPFFRT;eI?0V&;47VCP_A(U-b>"4O(c/9OudA$QO:$=:LfF;7_#fdWJGd[;H(*gKF:
%Cm6uNF\2C27(i9.?st;oUYGtT)afPmoWZEZR-k#MhFJt4_gRZM?dkAZi@H*V"Tn*A^t9FBZ7pGJiJ`ZY*.Wu>%]fi_j<e,e)fYbX
%,B^I9WOIks-b5"uU]O0h`!R9.b+&W$O@@k@qlUkDM@-R%'<QIFTNj`WJuB+YS/*(U02rBn%&g\k@O[ZL7jn0k='V,CqUG_u2[H@W
%j#5DN$,!-SRXrcjQatnF/E5A*;\oK0'lYa>BOZul&Vp%hIFKXf-c9>[F;8jGhLsjj<&fT^:b,VB=5FQQ=A748;'P95e;4(fE&Y>1
%n0X6Fo18'+)btG\Bt/iV*;$`Ba7U]Q.mp?AWuN2f8?I!u!I2"kl7'M^!CCk*!h87.fHcR<O:[5J>0,G(XXf;uH7O]UF0V!"40)J/
%R)UBtOFt*$"Uc<FV_<IS]eE"C!;;rWY8^Af-`R;L4:dM$rGHmGA]FZ^Hd^\e''Tl:PO'6A>57/n#'Q6n!6)5DaI!q!Esd&#?K;gU
%8EP'R5MjY2giFI[lDVO/B(ZWiW=rFm-?U1/R:tHN?#j6//;q?GFFtVh.iqbG`]C0;h%.m*+JNjH8Ti+k7m0`c@db%aK"VY>0PH6J
%-8#iD%.d/G'7k*G!'(pD8Gt>-q)+@E.S3FDafm/kb[_8`3J7]@.QrSZ(_0J^-o/]-bWmL`5\.,.17Eb\GgV>GkrPWDhD,/6Ol%MF
%bK$<.pe#V,kVqh816X14WGWo6&Jr.11c0W@U.d_0XX@XN:BO:XNfZqVe:9Fb9T@'Cn5)4aeUf+LK,m=b#RX!k7SY5i7KNa^/C!oA
%f44WF(/3HU#fS#MLAE3iB+o)+*Q;]cK1jcC\VI`*#\Zm;)EZFN(b"_]a[JDd0]_V[\[r6TG1]D0B[fp"SN]'I32FrBCBPcHLb4L3
%N3!AIF-iASE3YUW6Yq>9=3ec'=At_=@)e%j1Bb7b++KQtdZ\Kt0S(s@/E:8*kD$.RA7:#$Ms#*%<lbut3DiJ5MAoP-?QpsLPsndm
%o[$]Km1!205EA]_UhR:giEHL:8f3W1eA@rG31S08p14)!LJ0S"-1lQsaX#K]H14'$$Vl#[$9V-s`rj?i>Z.I#q]t0G6:mB31iWTU
%4G_-5-\NQukJQoHc?*MM17EGfPQ529mR=j\Zs.tfoS<ARghOp1#^$a;S/&9+-_[#kIOt"s8[:l2+@#'Ekp4(.L?-%)_Lqh2d&JR0
%.PJ'P$aVEn=O":iq*MS&%keGDZoBLSe>C3PfnoT(K>VNBSmgemnjP*P2''!XG(lbn$WI^APM/8:["2,2T>u"iK\Uo0;6l#MS9,44
%a[e09bl6:\=qs;lUdtulAu27WCeUlB9$bR6b>r0+\jV3si)D1S%&HZd=F[n.M`!`i0F?5R.:6)X$<%G7^o[@#Iql&r;Fr:0;u*;r
%X9C*RM4*%J"\897BXO/l`0DCE,/8uYD'F$/0Z58XS#A"aOkh91Rrm8L'A)_`NOYQQAM4W=69UhZ_`j%g-0?`jp?=mJ"2cC^1daS[
%,W%iZ`d[QVGtgk!1)(FY\h5!0L;[UoMSU0^0bLLD@SW<<W#22D^$?rT0-^<<atFlc&.3OJ\U*Y$2%)r@':]AnEH#Jf?chK9i87WH
%OmNiLA<fAh[5XkPe"OmI;8f*)-#^fEn7F6H1MS6te"`$ElGu?GoP4km=Vr'9Fh4Q4)sUh6A0qLJg-<pL+pS$U\[Yjr]dj7#_tBaF
%Y#5P9LDmSH"eRh]_qu-41gGOk8iJ)o6%U9a@?jK[6TC<aaG2mMKMOQFYr'AZ"];Wr4:3S28f]3Y8S4T<(#Zgn67c!84qgTeRUC$+
%<GiLKd"`9g+rEA&[Rm>u5uSn[8(Y_%?`4l\k=ckNY&QahoFkP"l67`JHr1l:>XaiAKtn'#;&bl.4d+t*Fmq9h*Q*^![MM=_1kk1^
%(d!QJ"^sKi53YjKiNA)[B5%g!Q<&$=U#aCMQ;dN6j8>;:dSljV6I2.$?t&%e";g2m/hH(RKX+nJTu(C/9CZ=b@u:'iAN2C(^'rkV
%F']HXM)#G!/T>#1P\\Nhead!,a/+%`C7LU8B:3a).YS$_M.`GZr0>B0Z&DI>Dq,Y,j:&apj/QM2ML8DK=1+Qr!YK\]SuRpJ'%SM.
%;`982Kb>cbpa9#;/QFeFUJkg'nnWh\.l\jjbR.=\7RX[`QH=YWaXrY,r]([)"^Xd`P03]"<Vd7AkFl?I6<)/EGTr=r;Ak,ZaGr#/
%UiA^V8!V@-2/kn*q&i@A@a>9bJ.&ruS)ZLL1l2TDM9B&AiBWAQE&`jT9r@`$-lZ;rj)l?$fAW6[`oltSYLAcil8$ZT#bEE*4HJQJ
%9)MGt%D4t]XRSG?dA^*9WMZ'-R:;KR5`u5\3rDe#:(kT9Y/1:`Gs;5*:kpY&';fV"6J&c5p`FY1L&%A+LgIi\b,-0"FKok#25[*5
%NTl<HCG&)8L2G$_$R\G@A'so!N8*g%;AgD6((9V6lK&sK>@o-OW5X<%,=(n"&"r5n8(c@;2D')VEG8#I(.kZ/O3H`K).5MEPP);-
%Clps2e7p:7UR:Q[]iokkSspOpQ]^tgOr?g+jlY><g7pJ`,0>g_6s1ejMi6$9>ea=\[*-sE9`#ZJ/m.VZa9hSiCoE`J8W1k@@pi*n
%dcL#P,(m%i4]g^im;[3QaI;G\WQ@c$bY'FP<hi=lb1FtYb/N,f=RSj>k*jl2BcNIF=8cpF^\Tq`Wd^pl6FlODR3".1RV0!Cbj12%
%R.jS1=OsRCcX8eW-3*Wd,H.JbB/g)?`)M\_eAF@uEN3P;1J:,4aD!7^Q=jBe#[R>!9Ds4P-<!=JA%cF@hL^t-?>d<\)PpH"6=3bD
%IWOI3P'*UgLo)@:N=fpSkG`0a;UH0kc]gb78msXmFA`OW.>HHAHM&V1YtJ^/@`lg"7[%/E)')(Vj:W\5(g5,f@-.JD-,m$!X2q)i
%aAY\#I)X'8;Rr%0Kd<g3E@$S\D&6`ri)/s?4Ph?GQQ0,;qhiT"#aF)f"K:>V78uL0knas19G>Wj$=auQ+#*e)%5!e5lK"YLChSe4
%j4KG$A(AH`85Neb(6,n7,CmsZCA"D]_j&["(b^KYlD2O)WMHAR'FHDR6N6YT4R#=1oU9%K+p1@Z'=slH.-I)&b5A@&Drrr9Pt%X<
%M-8/YY4=*4\We*d+$/Nu.Ha)8H'.b^aEm8a4l<Nk7JSg/NHM!l8I=B,UCRO2Lk,:tF*g_P#`Q#@p^,<6=bo5,I9:)$cK0c]$)%ip
%".?hb_+lD%7$Jm2BOP.Djs<135fH?=1hEh(*05W;W`[eJo1\N"Z=.I6=Q1XcO-UV0.V5E=8fDTI'':Zp/@8/X=si7YCBku"?76bt
%W.V-EdX^EgG!Vdr(]k%+,Xi6C>\$%U`,5Ce(UcZ?5LFn/c<UTl60M3F]f8^G:oRf4m^B,P`%0Vb@?jPbUU*NCZER?l>V"r?e$H-T
%$u;8qjh$6uY;.>iEkIuB:!]b=aJVLQIc=6`23f7LAQ"FDa)5p5QI<@,7IBq/T)Cod;3UG(5ue+H(6'X%F!H/Q.=s\)j=YVX&_YVo
%[Fs"aSdLum]sZX0.XN*1@IWVt13]2.Sp!-)e'_-MEA=efR?K2b3Xbmk0go1EB');C(jfD!F_EXUN#KY_1LiiC>Xe':SsN-s7`Kgm
%`3G^(/Ca6_<G"DS\^OMQZWIE@RlSemm8oSEbfn:3bX!UG-,677B@Ru(OddgJaHuf8XLs.U96sCuSj*r&99$RsOX#9VbZqS%&AKFf
%XiaahrE;d-&Ji<X10^/K2e!45ITIr0n.`@/oFfbf.dQRD<Q0@JDFp!?DjbQiH-5FDOk"%dK,U6MO#_N#a?$2TcS0Ci)98auNE'O.
%/*%S#)YHd6CB'4R3Q>ehN6-2&.ZJCiI^,h,^K<pJ0rU5t(Y`L;gLV2Mn(?n6@k,N$^EUR_a>(+S_cY9I@E^@E=?49$<K==F-0(-s
%A%DkiCU/o\4Nj+5mOVkZ"\e;MBmLa&/2XSqAZTBR)3]?c*,XGbOCoG@p97NY),j\XEh6i9j;I9Mnr1,[k8BK]Sn4Lu?)B?g)HV0c
%44>%YA#lqqGstYf[P7'SNE$o\b\Ue6q8US1`iAThea6%FUYt";N+3#=aON),EMpla<_UhEG2HMqENJN@V]>Jr$XZ`O39IN*@l!4L
%mkSpD!TK*&fKdRg3QJ9jf!1kg3,[.O]QO9smsJ9Y$?]T-lPSb[_.^g2a>t[6]!)MsXj3AekEi+ibN_Srq,jbFe-"iZCjTJUl):X&
%`Q$cG_GR9OF]G3l$&aI"O694CjbDQY[TS55o-^b]7)nqB\U)YeGndc/Ojm](\L9@KLpYA<II?0K%R0%#K0?23,_b4j<F8p+bLNTf
%bVMp]V)(t@KiM(_$Itc[:0.^5&qdD,eYW=]o)PId'.Png3s*7lL"qA3i2e(R!1@rbP:@+5h..[_Z:(Wc`.(ooK1`8I:9+o$X"jNN
%<eIX!lsES_.0Wo&ggA-18`mR$+YYXuZ<((pq)a>C^$]i8oYCf0XNOILiH0"3]!>CAC!%p.]!>=<<NE//<>>caAS%-dU8fsd5#6uA
%<)T,6Wk&o>-0<W&Weee)*fj8gor=^sdeKnq6HANU3_oWZ+'P@ZWQH,2/L/ct/#Hn=MAg'Z/uiW-,u#SSN&r4X<Zroe<6c?&hhu6;
%U,kcC@Xr?\e1`3AMkP5AW`ogf'i^Ef:Mh;^L_SAd3T!h8;k!3!ZQM9"VEi=Q_N75A/\A/<Oie:KU_PrO/F8(:3d0=V\8)p""2iWU
%8f(ouI%C$4_?*=Q_NZ31'uJG%$O$f;ICL3/MPR7>;G32lDjgaf1=Qc6.53ra]&?Oe$!R=%&H'`I1RBO&U5J<*14LW^OAj;SU?\DM
%2CSDm<qo2-F@fI>JngQ9ZO3A`LUMe201>Z2:gYBoG@R$QU,qnCStN)m+(-D;/%1B)8[#I+]i$J=V3X_fVZb!I7.<%`j6^qS?#A/l
%DqCCmbdeA)V$3>9rT7orQ$A:N$C(32F9B\&8RcBVEc0<3LZ&m9qRgrU!V&3fHYIFjijGlRU>g;,<+kmDo>Rr8Z=0Zc(eg`g"I0W_
%1ThlRUj(s06#qHj4].5Ya;8m0*X9R#Z[lo=j`_Gsm:sI%Oc`7,"oe.=Lp`u7,/@B9=3KOe$?r13DP5G._L#C0]?d>LQlLhn^:UbF
%h`[2^'!XHSc_^M0b-GL&p7)+c3c>Rs;ZJo\IR$FHjOu[2n0<O61+i-R'aas#)'rQT1b9&krf[_QE4HDPItj2>9SSdt[dq8AZ@^QS
%K1C6AR<3\HKpYSql""2q7"QY3?HnRYZ.Z!7[iROkW#=a($lI1sXm[)M?HTY:Ou%fk[u"PEQ#V_9GG2"m0fZ\ad,5UNhrT,KKtCG\
%1XFjq\4-_S"&!^nEkP3jB0Y@$%ls)^GaHb>3on+_$-b;i#]saRi%D#'nS$c'+tl:[UN2.P64]l'&bWY'-mY>a3o('S1OZl1mWN31
%*Un[OeH`(98W:BG3'QIrMKOaa;\OAco]>XC`$fC)gf$2-!)G1D)G*eD+X'?B``\TkT#hllXaZOc3T_JQ*Eq^7g814'-0$E509HUD
%?V&5RP&ZQd_Jr\TXl[8*<YSb)Q+)dme7cD$&X;GU#]!IT-cH9dRG.RQCY-K#CG^*FHJJJ=0Bj&m?IVTl\/a9UD/pasB(Ii7Y\#tE
%PmVdrd#s$&pAnHgCgDq*i!eeS[,<K*0WmP^o`fdgK+=5gOYTg0?l:rQA:$/PLo!]=OUP&!%V5f#K;lH1rh_("ci^3r[&>a2I[)Em
%3RrkpJZ;Z1L'X$Nm"hUAF)F-nY?BnEX]#84lgBS+NjV%eZ5HJM3$j`G>ejY)>cqA6b(Zq*;<8ar.L/Bu'/HWoOX&E3:6ce69BkSr
%JT95^k,L<"=umB>>Z70I-67B6RjlgN;[Se!&f!3V8lk7k=uj@YCtbk-2Qb^R=*HX+b]QXLFt]7l4kmB,lae;Ck_/OV9>,""TW5,7
%Pm_?WB"?%n<Hgh?.Ie!o7R_N#/`@V%g6L+(#j%#l4lce.8QJZZR#2QN1kCdO&Med6.T'%uHMU/qFemV>-]ZD^p1flh8@SJcM?;W-
%?_'/SUd,"LO/i[g)PhBtUnY^kD9&_^B_Y1Em]UH##n&2EapB>oEes>R_%d`S`_>Al0$Lm/1Z4%mhLW3a[@bfs1V-Vp0gq['G8]pU
%497r%SJ=5?m>5S8OZZ,Zc=*taR?ff[k4)aY:S8qQA%3_e>`8O>EF'n6FUFrr:Lu%FKU"KR0\:S)7B4[6IS5*CN5UE":V!(2-f[0H
%f4)\0d^gm7`_J6lN"gSL&"f"D:gFc<!"r3q_,%e+S"-m=eF@sa8P5AEaV2KmSl"p$W($7LYctVH1R[I#AX?UUdi?3(NP'p2e9iVX
%.=Mnl&R%it'00nDlu5%s-oNi!T>(lj1dRBMB.Mb[@?"5!<,8;fI"T=ll0=u*9@f@7,mOt*]n98h']c5;b4:,pCf*cc8[1lUOdW?m
%bjSQOOE!"tj!L<f\p*3L5Ggr3.2@@S46CO:O,+fLc.F`l3@<b*Z6aL#/8C,\&Y^Ji<8a[1)H1Wc(QTIba,(NO5cS>(\-n+o;0Ofp
%]'[.LB=VV+Ef-E_)MLINO02ANh8)LtJ&O2B999(0\0em9qPt2)[64"Q`M'+t.uWgO\b?%IEF3jI[pltMZVcB&F$o7bZ.iQD`DPB6
%1i94,\tcJlc&03cQtoE<;M(*ii::Yc*YI-Sgk(L[/]00:m$L\qp;F<ENadFZN/rkP\p3;eEd*lHa=QO"eC`jC;WZn9'oSnW@ZajK
%cG?>@#0Ut(J^J:WE9XG8I77<q^;5ed^>eZa6C5!9]inQA[>V`P`Eqq@YBI0P]@a/im+(4I\;S&S`Eqq@YBI0P+#NZuQ$7](o&I.l
%Gj5$o_[:Nk`Rq5qg,CR)GKHJ#ae/4HXBkCp?1On!nu#daVd8kkm7mSeMsRLDE>R<;MsT1ep?a($G*.3baM'/Cfsau(RpBQsV=Gt5
%dG@:1a?FM,=57u!n^X>ln`^r5ijoZ*js/.\m9W)Al#Jtr?C!=ZLkRqn&e/]KlH?j;k,-DI%l4i&2@JS3QrQO',$2^mUl>?"\6ipn
%3@`$YTa*#&_0Z#Do/:_25g7)U90=."`Y9<?@=*[F)n?aFr?@+CMBl!=eQ9]HaSgi=GO9GMFpUsEH\)m=mqYc\AsA])@G!HGdM3^W
%$11^71b<)<0t",9O"ZD_"X1;algeo1>TQh`2[mkB/Y7pa'S=:SU<''lb?83?2a@jcC*s(s(BN9O^u\`$TC5DaE#h9u#M&H2Q2;6Q
%Q6;X2WUMH=]!$o\=$dh0PfQ7JoO++7N-&J<A#+sGOua3_"bIp[#6f*%@WKEc8>u(K1(L=5P><U-Ckp;=[&*-Eb3W44o2TY"dj.[4
%X`;/i,A]).:Xn?hR&$qu0EXq@q8j'b9Ou)oGZ)jdc;R\.=G[:K$86WHW$7f[C=MY38^S><OLbnh(+*NmY]%T>@':d>&*le^lp4;s
%pFrJ->+6-,&4#P$C0?>GK.ZVl"^TP_VY",@V@-2c!q[ZXNX5M+ejYOU\/+TcC(pZ[!bOm&.Q0:r\.gZ3Q^e?2(.X0D)<PIS1Z^S0
%0rE,We'S7\-0L9o7%F>=.@8/:&u4S/GG^$L);^<c<u%?#Xq(<kF$/,%m)X,jPCjOGADoK[0K%fTQb+qWK(I?#l2mbtlBbbW0'#""
%$1:M^Fn*._7-$22X^lgoT3Q8t.6#D6p(iE4._$D5QaR]=IGpZ];e0Xe[u*tk/h<,d)7?:fO1&[Z)N%U=Zjeno(NX<FkM!=?DR^R(
%/Y(20V-F3@Z)o%Lcg(p.(ti[B:WkZr1cDdDgY/^l=^Q&^0=LXT>MCqO?Z#.4]t(gOO#]'U2n7Hf1!j@EB(_CuJds_:@F=DXPN9%W
%:TAbBl"QrkO,0@.VYd6kH*sEX:K3c]BY_.#7]#HM*mru/W,P)qQd]7P%f<1]6Br3::D1KRA8_fZCJu(,RjPke_AXC/ec8r8Yi7:i
%;^ZZ`@#;QReq5\X\rR.8(e<SYQiso6(f%?lZq,_aG4Et'Rgt'o'INpcmHk$g8UL;&CLZ[&J85WXP*,m-@QXXIHTk"PXpZLE`O2AX
%4)eJgUnFX4F0?=SE$L*jJB6i*7]=I@f6h"XaRcD8+ug*#kF&;E\ic77)'GKk6mXi(PBM0fIm?(/1LImj-EH>bjW^cb1OQqK]Peo3
%jl7`4e6N1<&CM_/F+!6;`S=!H@Yt=DpZ!b3"YMUoE"^J2bNs_qrsM^Ho>%rY3(CgfK`$>8)$78")CA#%<S?@[_Y&;*Xo=74Z;(?G
%[r[0?4aG&rNkTKichR2-R"?()(U4NI>utQOMGf(l(#bZ$)_8cb8O'!f=?V=9"E;NQ9eEoQ*k82)D>&cceAF2f6(:MFC79,M8rpMN
%)q_)"/8,-BWfjNe]G#$VdK,Y-c6ZsV2`H@KVsi):gl&GMo4!!;7;[6;9nQ[E>#jauWcm0$.ka?*<Q%<@/mU#>#Hi76!nfhLlboA6
%LqWF/!`JB_V[/,X<WJ`#!YH=7H7<S8SMZTG[>hY(:$k=Q2%$)9[Nc<%Tb/,ec71G?<l4,bo'j:e<hu4LX!N-bH)d2P2aN-c*E)>*
%h<2N0!B3!C7++14&W8FJ3Y:hg/L&'YQ-k9lO"OD2UQ*4>7U.*X8cmS)oZu;AM5LmtM5(g7a-0"0S<AaYV"I^6b2l+'YB2Va*'GoM
%\@SIkriYIDU])c&)a1a<OkNre1QF6L1J@Pfc3dVYi>*"spP;YHXX_Ha3U)0j%Q]$rBg_/66p6Nk<'m>l1eQg/@\s:-G>g4:<JkLX
%:"Ks*!MnrK@6/\$XrYkL&<FtJP&97".V$L!*r='M32?q;EoQ"p*8@(X0SnGF';mEHC4fXRT?B,jXQ.1mYm*A2,qDC'/`0jOo'LBC
%<J6\%q:N)_P(p&:W+/n8"l,l'kDs#b";tc=b2#_5AYrVeV1Vi!SV)T":`r^$GTmJl])Rks7,uPY3RT+sl'G<r@/j]R_kJ[QC3W4f
%.%)lKLHbBUG"3\i0sM";U?gE%0ZlCOfAiQ-Y0>K7b"sKl5Z/eh,P1]pJbYA)KBc"PPOe6D\gF+`MR]f9$&_)IkXR"C8k!$Ke0B[q
%F%c=H#i/?J/#57Yl"+:&''0BUUtK=,/[KfFZU!fZ6nd>j=;B*T9j:Vof[4^jC%8-l_NaYT/6p;"=+\:d0;Z7Geu50IF)PXGAg4Un
%kZ<0PlG)lZ.(H":e[j;6C^R:D3OdZaKgnRek/\>Z%7im;FtSUYMX6,?JESP?@R<\tL4B<h8l8Tm,-bQjEAN#5#VuHF.6&s\EaX19
%$CS"qmP8?t;$$L,ZG+Bg=$=YrFEh,d9Of+XgRoC<,-0(pLB>;u-7p]l0*mI>JPQVf7BoL0#"g]gfLS"+d:s5Q6,GM#f3IHs82fEP
%6q+eJLplX$N4:e)2Pdqp$0NHp`_CY%de8O<[7HEtVGg>Hl:o72),<Yt(c\[-0X:_J&TMC$6WjRi;2@bDQC?Sp5e0-@,->D@-SZDS
%IGfMdQM?75<O`MTTO*t-=1sm"IcK)N-tNoMK)h`X,-p.BP#1T)*lMp2C^I+VJbd]YWopR<qm^mUj,!SbJ0jf$Vl],FPu#p']V(>d
%BU.=)c8!mpY/DX4Ps>D2QFj\f)p#C*Bd#mVgsq\EO%>d9Ub.ALq7]PV_e=<@l#p79k'3%>A^MJA6A+8N$?d2NUKQ8PF:1`8Ot_dI
%>oEP"0d.J?2j/>!AQ</&&nk-.'c>Y'ck%C;.3d2qfhbe0O3;qh,k()F1'rKWrIAAqgn+&kga7Luo%0m,G>8$ar>K["0'DXjG322i
%<pF]X:1R^l1r!4&B@CqO`\9VlAsehmB1;0N`NmhtAVZ)Xb'4,%VW^j==#l:%7;0")aJdm%p8jk@'oS&.g95fVb04bBCfVQA8Bb,R
%7[K*O\%Bo\O>j40SmFgj9esdjK\:*k[Zt:0Ar(<GUCpZAdg;gO?qU'EWer*"=b96P2^o,0bS^uJBhhI8BdQgp@6_`H+.cM5#6,AN
%DjjFB>llD9n=dD;EMkf<$H1`^A1Bf".;kr,^%rp0bK/S:[M+RqmRgt.@=Ijm9kKR2^sHMXG)i:49A2GJ.8:>`19DQkp5U&L#N`e+
%8l9;lVl>8"<",Jg'4+@5)K6;('?hJ0kr9Ue/6@8r7UN#AFgu\Cj"+,a$OJ:OW>$(li4]P]0;g8L2$en(V8Z8VS.nR'?ZacFF*Qf3
%!^tk1Ed?@fKeo^4RG:>M/WtU0giB@C'e)rMWNtJ2[0<X/@nR0:)+C@_E)H>bY-DhpfWN";cPF5d!K]90oU<6;?q%as#d[(bc5ge1
%!0krlmWp+JDj1?amY93>h/UX_e!S;Q1Dt]`b&H]4/*9L$1DPV!G=.@m-D9[U5!g_q3I^TWVg0`eWD%NY5H/THTjSWjH]_1BM@;rM
%3R#b^Ou$=Qpm#FTb9A75-Jhf2piRcE5VT#7;%O^=NLsPY],`KB71j\h%`bC-V*'.u8Zu,tEtr/bP+,Bl")Sn.j3gp[K5O+EN(bS;
%(<)4>O39u?Ug?cpPQi'7]qEC:]fL9>C97ANC!!@^Vo4p(.`L3XJ2W;+''b=("@$nJ:tt\om\0q`gC'4`6Q)184!U#-dSAUdpHQ6j
%)OY!u4,Hbq$,YmYQ`6aAHSNK9>o5Ac3c+[ZdL).\m'sV5ptSkgd27)P^tXF="AH%3-5+o!g>'3=gicQB\6:SH.e7S8kY"[^Hp^M!
%=H3i.G]m'_>J@:.`m)h'VC"m'FqJ0[465*J801P`-M@njV=12*2;LSk<[MK4Qc\"dap>-1iiM5$)"NV&jDEP3I]>h"+Ye[#/kp$c
%'iQaXJ5U;=R.>nU9_RHSU1D7IEu5XZ6c"-X`gb#Jn-G<':PhM:nL4tB[Uqo[,XUS^(u66o9G(U]n1#9DrN=lG_Vn6Fh%DH@aEJn$
%J.]^h\qI#`s/f_hI3W^5dL9su<Q,sL9:_@/XQnJ&6rBqePkn9-=&VU)Sf^i#&AHpEbNE#nJs<kf$hKB8\;4*UCA4fgn".Kj/p>Wo
%)T=mDHnR(cT9dBCAR2kDOsbJ%@KdO1_<>p/:6uBQ4cpVF$jnW5$0fR%OErUjT&Q>Y6BnK4OPGc!b7'm:->f"e[!@f:$GBp:8'Z>#
%@.:aXn>sFU'uN-Aq&Q<cal24Bd[\A\\,..f"`d6iQ6M+gD%"'=0G%<?)iRU@Nl)<Z!I$XB-:-Tffe74('lrE.5\=;Vc7g%dho\[S
%8;ms'?qO'O2hJJ<fX>+6Z.ZVse='QJWUoH8I[<M%ZF'U[5qQFao=HR5=8M^6Gi-*"?Tm\`.b.d(14OXhb=[8QJk$7n1bOnkD4XU;
%c78"@edYe6Gc7]0.S&U3KsYZ*\;[5"eZ%#l,RFP3T;']+`*MFE,$`_D(.,'ILI?".q<\6+8.QBP^`Id"+?^?"%,4MWI7@3.DA^<+
%.u`5m]p%\hEm?^6)]T\nLWh5S&C]J?j@iA+1!5j/_j"p[qTCk<doX<]U<H_EZZg"dhE01M5>$X7\K\Uu__nnFYX[lUXsNOV--;L1
%O?99qaF3<b,'';("]2;f7OlKH[KEMF6gHgpW\#Mb*YCp=Y_]D,;U*q3aHA(&q*oDN1sT*BY7scE&.uO3&g8GSjN@EhA*MiAH\`FW
%4>WQ69R#t_/0?(nS/>,P';`PV`Ul\5:419VYH*f#0!j!dcB^4KYh8!c;'?0"*a*`/#o??"6WtZiT!?N^=AH2oaC%J#F6W(-qdPF2
%-5F;>/8ZEA"01G8T`6LIM-8[:R=?mO(-!ng$&JuAL6shNi/q#!e/=CBS=pXf][p90$b#U5d]=,D9Ib`undVGNQ2BO*j8s`G]M+Lu
%ihEHFD:_U^jt2Zo(!=lRO]8kW",q$'UehlYYZ+N9/-Re8c$YrTU=GtQ]Y37r<CYM*<`PGa[=We,]Rq\pC/XP#$)KGZ-ABn%0DMS=
%(fHqTTeoe@6W(s)`/R4@F<PjBPIp=pdVZ4U@A2+WV"SO*r03N^mRj+`$C**Q=398K3K)3O$LqRbfTCMMpU&^/*N]TYI`Ct:M!S2@
%@E:2\8N1qR,bK/VKX;]I:6ZWUBMYttX5KpYpto*59Nj<G;,-a,an(Am"!Yhe:Gfkf<K8lH6]ENU8VEi'28.*@+[2s6`"fgg_d6Na
%W<1_j0tFg(Y0?DKUlLq-Y)ht+V/_nlV;VUC&33o<oJ(%^hKOD%QRhbLoX\JDVPkfhP.Z%Tl2o<La]ZnpM.f>H:e6KpfLlaB:UcGA
%70]C&/qA.oVO3:mF\t=\E@TXD3*i:[XA/2]3H#7IJslHoP0=S8_a`B$B2TaQgm(O/qpk(E6:'9\*.PJg:RdCp8RGP"W[,=k='5l#
%&uDu-3Feo8Q9Err]9q5P,c7\A?*:';XP:.\,-IXO?dUG@8tjomg`i$K;\9rnmA1ROTi@`0CRqFl@ne,HX$i@R<-]ji/ROcX<7oH\
%E`?o\8d\J!+sdD,=K*F&$S'T[8jupUCM[.\@4A=\[*M_?H<&Ze\8pIWjZC;CY4d3LRG#KXm,iVO'BS2iRB%5`m-9J\qN<e%DR&\!
%6cIJ4Ml+_K'tU8G\#A"\b$Ck#<=7S4-#]M4Od`#2;Cj5-D_;,tX-L@eFg$:DFg%@Q2jOeX:$!mHIhn<`A[S_UnP<$X/#6XZ%8^/'
%!t,dTM5AWeWS#>"Zjfj&P.4c^2[J\K&0s@1EmE4Y\q6>=VO.^&h/AFVQsh<Fq,'ar:Qst*!r6985ttp3+QH-.g7B[W8nXi@mV/Bm
%9(hODolF)g+%^&3:_m0")\REtF7[s&d0o7(EZSkm[&tNPZ<4'3m1e8o_>@L(ZVm$Z=4q)[_LJ(;=ff?X8o^14WVSOH=fL:s`I8%-
%^OhP]^KIM]bJ@Vu!kg'-,\u'4`2P"Xk3aT3:77nbC"iN]IfGU.,'.$rB5o1piN>c>qL0j(!o?noS#''9MkF%X?!SO@m3DukUoc:L
%Z)Y+dMp_:85Gtenh0j8dVcm5ak6osM<X=^Z)hK;%:+4BF8EE\so#Bn0OX[OF.XMTM+2]P5bTN[[QA_H!+s!#<KI\ScVp%iB7DY*L
%Sn+lA(+I=i#g+bIeEY,.>!6:MXUL$X$K7(HUeFiS)Zc%e'+/Gc]5J$]/-\3@QPp4a*<'(5"Fc]=;=?m*_Gp3QXo.<R$WWBkcc0!c
%@Jr2ni1na4paB'7)M*s\o1PLqW?$dh&,(TIRfX\4_]Jc.qhp]Ql@U.sL0Y89"gOA'6Gs](!KTj$/>[Z1W[S07R\>c'0ZVlu#dd)^
%Pm`7*Q3/-\2p>.hG0OHU<C)YenfUFSb]2_Ua)Z\T.l,?=,/K7.0V\trXRu&lim\?'&KV3gP_TKu&S4kh_?3FsN@Wn$+&Ef`@7d=H
%#8G>8/kZ#iC=8`GTCU$fBb<tjie[/,-Ut&/r^fNuJY!h^2ulR(X[`l"'V-6h25a'i=\QjRRXpU^fU3YIU7(7)qZ^,po*%Q[QD5\Q
%)(N$e<o=W@dVnD"'F^RaE=K.p3U^AH%sh+W_+=o=U*@-7A"j-Zdo``BLDqt_la5F)$Yjql`J9[<&tO)G2:[="Ddkh_f3%*8]YZUu
%gT'!_86QHqaW'LrN)c1bMY"hO7a(TE$Z="PlO3TtXND\dm;\8/KnZeL"f86%:(G[I$tq?o""LJ)<%n!GlPXk8+o#QeZ+/5_Y%adA
%F.\B3jJ#1JAQVa8HrPDE.XcrSEXo,/<aoYF.]Eq1k+FJG.N5p-C5i3dk(V6_.9U`&:i_G>Xt>fA>FBDFi7sc";ui!02*uYidT#Em
%>TFV.q)G=XbftiR:n5ALq'Ab?ak+?90.*p%i:2]i`l<*9!/8\1T4O/n,MbctLU_)u8WU-=S>;L[rIC%mY/Eo3gFg]A<i6L(b8Gt]
%NF,Yt@^VducRm?b:]&,T_Ukt_Qbu^E@8f+\AJ^[.KoHMY4J=cPLKiQPXB3V%Ci!UY;IYFrk71;'5RrX(,?5olZ&)VEVoK>T1.99+
%PpRa7\K3gpq)Pbmp;LXqbXG1p=G#]BC.hZ+,5FGY$e-$@Xoo?oSU_`kV;3P^nL`/fX!:k:Jjer>XnIJQ^ZOBD[O'@OK,Trjo2KN#
%p5p+Z)^@P,oLTO0iuVCeaGESp\hn$4>W!n7j:r#)OjBX5RIl_tXN3kcJ<f^.!%-eF!\EQ@8X6>jZDL-#e/2pOCJh)h.$Z6U$8`QR
%)!5/&[EEcZo,CDD9)$^I@8`X\g5IH-$tUpdD/&.pF67GEg^(qQQZGm[\Y/?a?`Yb5V_ci4C)6$1>gO@+LnHqsnj3FDTSjdf=#Y(P
%__QP:74b%<NS\AUg+m_2(Qr@#ZNe\h`#c8bi8&k!fo":qW+&NX6c\6m/FU)&/)XL8!e*_?`*VU*VF<q;Y%f^pLD'3/4.C5^L8M'Z
%puV]?i@M^#6??;JY:$B&E(1aC<9-bthr.<c\raNLBu2XS5`mSu@T\18$$Nf!n\R8t&SG=!_-f:IgTf$p<b=O&m65DPj^I.(-$b^X
%JS?@2\\_t3^3Vi24J.T[Mp^V1okR?!kr74&5OSRHYWj$ZL=#=7noO+\I/DNZa%rUg6i,RY*@s\/a^Fg[a\NFNGQ'W@:Z0:*K>h:X
%H@<4=c9H#k%Mr``fq<T7_=;2d3#bWV$EnU@&V,i<&cXH>SIXo)43m4h>5.`ab/kUoP!9021OdSU24#F^dM;Ojes]>#_E3Z.]N\_Z
%VQYIg*\9A$ZcO@IYqrL$ENM`$[%r/<N#$Jm^):"UX-Z(j/>h^YdGa*;U.bEqc0igGE:i:;@F6$6iOZUa4aNBQ:QGaaguY(F*EmOj
%0DaJ,`LDSq^#_U83BMM0YSd9mZiNAhicWN7ib\=7H+.D'q:XD4\V^dHL@a.p\@ao,#P2AR2Z3Mi3'"4:!/9aj3EKj'BZ"e7(YN(e
%HR:7M98=kCrP`Gi:l!T/m`aq,Q_Uf#?l<$M,+H.b\4o+g:5t#^QVEq"nE,!ub7s>>cXmDLi,_\T7gBeT?t)J)-C^%a7[#l<Dt_(Q
%?Unj$>3j3#F>t3jVDF.EW(Y_N0DY8$F?1Kqm(h]b[=YpJjUJ`O*?MU0lpSCDke^)ZgPKr4;9hXq$[/87`=VB(\TNgN(+P(kQ/ms;
%"'@/8Vpj%@-d1mf\Xb:\PN?tngeO/>^/FBF=$W4\lbnP$F)Gr^,TWr2Cm1[D)?)?1miN&MVgn,.=+^(.piclIs6K2X*CepU8]O.7
%SM(Jb_`pTmCl]=[XC&\R0&Y^HCd&pM-Ct!9gMFUWDRjUHe4bp`k/0X*/6l')3OE4M%bJc4g%<+8)`iAUG$'5`CMYMpgqmu;IPs8+
%*";QP#%JU+N-Y52'?cBU?LuY)_6^JZV6u;]CQ(qB[.*M"F?H,Ms7<a,:c::aGBSn*?+2_K_P/D3UM&W'/>#]"Mo!>Db0%2pXac@Z
%#CCrk:+*rE3iHrL;M!kGkVs>F[-="dMD!e4?,^*qXrHg]]((7:4N@!WBX2l!Vi(9I__kqrKBcs,`j_,qZ)4N_rnq_`d>BuSSX!\Z
%ph2N8a/39qX(E%cNu$%HUKV8F)\IW)0E'H+qVSFfpas":[rqX+qVZ5lM:hr@Cbm/UH7<>fK$B#Xhkgq`qYDn5N>BP^_hAQfrC7OA
%D%qS'dC?AH=P#R,:PQ276QF4MjEBn#K<%!S+1)bE0:tm9T&&7PeX;[qabD=krZOQHm`q)sXu@<Xb*5]"j3DI#HuEF6]'=`<DVH?@
%+-X"#fg)1>E*\ZS[CidrqQMh,(Rt5&!S#]KLVqMa?t3'j7^;O+FEVsm*DbQp0G#0OL0Q;eFqp+j<Jm<Q$&[CZY9!31JBM`g_;.G%
%]J]2-pQ?Of2g.YC>IsW,!.M>h@(.aBhJ-bA4N=\c(q0ZY3B$g(0"-7.@f(#nhSsW$]*&9V:OK;LU98PtfLA8G"o4YVm:%k!)iqcc
%qCoC<9Nl@*dL-HKApuk09SVU+iHTTT-f:8/=]bVY$cD/mr@?d2Anod8btlB4KAjpkZ?S,ah+j,CK,HS=jB*f1[YEk5%%oWh6i2%G
%cBk&:D`uNP99`KAUMG6^hHB\g_cD['f8Sa1N6QauZm7RM^Y(0RNQ5rQ>,eX?D`40>Ga)SLhYT7-/D2jnF6YHKY1CI<J8E_<m(.>a
%Yf/(t9Ps"^FFAS)%>d;ThNPe7iFjtB_hOd[Q`dAjPNg#_9*Y]7-YElX<23CG`Tug?GVg9J/0*b;F?Ok([IJIl/mTD1=WiAbS$Y`Q
%Wc`Go0`H._cCugS>8Mp[,o(#nY,b2cQ6);]U[d!^Oa"IPc</Fs*ArY.5G\i@`t%8))pE@Cc))jHP=:h?<O*H87OM6Hq=>-IJub!#
%m0^om#?T%]-+O)K-oNleo0h8f$qjgfMIO!%2BHF8/Q\/e]OTk7oL6#fHlK7Qg\IR[4ScN+R//<.U0'_\k51n*bfRjL0FL'okDQY;
%7G7L2>WQKLG`oE)7G1Ycq+CLX\3"&^XhepW_&)4k.f#gkFCsQ1_M7i[CkJ!b)guJ&f'!HCA"@\Oh9#8i4P+a4Z$dKK[V$dJBIhZe
%Jh*,$0RNGl9DLYU?*^VK)sN]K$?fW/rEQa@n[g>.41o_h]GBo(R`,j)nCeAUmI8h1i3hDMcKs2k*P8c%BPiQ`FGJCi=D]ps[U[m3
%bh<Q-mBG;E_.pPMkg^suosYOD=U`,2aoJpRUXd1/hLUg.&F@2G#=c_%$(Y+1iG$7lrPH_19"T7P*8*PdgF#7;cUWHoa3VeYGH]R/
%o=/LMGr.N$*fVN>HW:t*?Dk]WU2-%)6+_;G;gjAjdd2"cCf*roq'fou=l-Ecb3@p>5gq?bbBf8fag;iC[k4T&18a:CA9;Or%m6cO
%L@F)7_>=7\L>rC2Tlno`pK,K3Z>$Dfe_6tk[FL#e>N<Y?f:@nFj56gX2B)m'0!e7Wre'IWl#[D%hQo"r?/W0r$*7qWg\<c(g6K&,
%2R-L<^obNVX+ASt@=tVFLs;YIDf%2DgGL/T$bc,c\pbQGE7^)8XVp;]8'3`2;J2"Ijs8SqfVnBC2#?.6Y7H9=BQ8DT>hIF"Il*;C
%7RP+O6tmJ%[u9n5fme5>hc5#;fRGP7X5Z%3h4=LgBE)7=YHFi&pIal<Z*XHgBK^P4hjs^i2=;&.^n1/5P*=\SHoG#I[Gd#"S]u?b
%a1enU?8h:[!Lp:#8S$^6fs>\kg;o;nW]Q[jJWsTt/bAOUp$:FQ4J)P_]Q<,\S)XZWE;'>GMHY,*Gf,8G]hPCnLSLW>1Reh6[Y>c)
%i!J9)Ho_9G@:I]bdN'8k?TS_M:.)J=OR4l8s*,"+DVNp:L?rgZ*XbG\qpf59YCH%R2B5I5!"V2>!/,UhB):GHd<%KU4I?Qg+&$="
%8Zc9FVa"Aj&kjk+R=k7/PI!^65&eMF'N_GQ'h/tp)33[FV5?_oG0OcjmYD")a,!I@lC645K#V;\f!]YQ?WHJ#@+h)cA^aX0o@)Y!
%E:gK;(#36('sd'!$4<*i/aF&eloWkslP)b'Prbj]fdU6NMO0mnAZ'e+.:.1TQ_!,IVg)?:G#?N$'JE]!6i*.?ian<"cmtu<))pb*
%[`R38Va-Cfo:[).cNToBef_(?_s]DpgYa'_nSugcA.tGg$*II/s7'dmHn_R#?#:f1YXo,)l%pa'&culqU'Z/g[EV4]=!>\=9cnOM
%-?d>tmiWr]6PjqaQo9jV?A/e].nZ!eij^/9Yp591KK*kE]mU'9[*-1jbJ(?dAbqJ0;m_$:31TuYgSAEtQ+t^/^I8d;>r_^6L&$GM
%rmB,@\A277%1b$f_:HD``Fb]sF`bpu?i"QEqd?ZR/mYhrR"%S@m@Pd/S-R3>VD,5g1\1XlK%i(13sfaC,db1$G^K5n[@q5K,\M:k
%YT[]Kf#T]H,@k@EE%ImOcdAGOlQa/^D4U363cdEjF1[VPY$[6p9=DL^@r/FZ(@C`2)pJBOoGF&.6cg(iA(^E^VoRG/9"WP^Cap@\
%kqR@-N%NFer%k-]PgC0J/!lj./t^gm*1<=f4?HXRric`FeLt7\r#T+K5L4X:@A,j:)D9]W>@`2.4dZcWZf1@c_o[H=]32Xm?%"f'
%%:I#5T2%m7E>e,WV1"QXDsZ34pc.?VFFQ#K*7QE&%4)6cpMr+!_JmNF>Di-XEh]89`GQ?IW=982f@PpdNhKa=U%RObg8,XdkG<>N
%L+Z9BD8Gj]Itf*srqC(a4gCD.]$-?-pb5=$<RM)".)jNUZe=ZN0s$i2<!lg6fUFLgma?_Ep16mL]QT01$\WtUleT6j]!-8Lg&Q9'
%lWb`K0<<B7PI$Tb6seCI1]N(9$5U>Y>A$`6^^OR!A\<),[IK/d@_oM;i\sGg]p%P1J0/s_geO<m8TQt-DC<]rUq*$Q=4s(fP3+<_
%jJsoX=[]dgUq(V@Eu'tHV8D"&FKO8RF!V<=du`E]SD/mA4)o.r`OWVK'bKTq3jB@_2F4,HYEDFheX:7el$f'r&)YS82Y?%0bB$a%
%Vj/cuOMN^1J(#Vq/-OC,?AVroM$l*U=#mJ&/jEqsYJ_=qg#(+9Hmn&u3=.Ilj"bJ\$1ZSspsBoq;ms+)rR^)G_:o2HG%u=a3#F7(
%h7$;Lc55rh2JQ$:h7>X_3I0?\7X^f*WshEYlG$*DE5#jH)m@,L;dRE?nkm4u+h]dfoVUS+lcnPb%gH'fe$s^0CX'^4@=C*r)B90&
%]4G<_Y($=pCmBW\bVqStgI/aIhA's2=9#FZW,968m+,!8$T,[]SPLX)`LqAV:.%i0hQcVBFk%5`Y&AkO#Ob/1B3)GYH0)UaQLNU.
%aNbH%,T[nbiL?Zu=M&b$lr/*r_#N'45kb#/C^;28a.*i],r`<nHZje_)YotiFqq_`]T;:O$Hu<AQF6D3K!pKdpAR+D:519A:u/Ee
%MDg5=g@7QmSnNC:p,NP"2,gmA?M?N"]CWbn.D'@,_KIHAYF7]5GdM]Z(tEY:gP?+dB_kpPk^U36i3s77hUYtBoYFg?+7*"%Ru`MF
%el84+LbU!fB(quOT9@S,Isl_^bXRNNPG-N%&j,*_\\r#K(H7PTCcYk/_-rg.(KV:tGI2?W?t2\GY6]"#7Lep+Zb_,,e$D4/nNgBa
%Pq1idDXhnXp(^r'0P)1@r2Z?!G*eS0Q^DHmdDX&b]SCJ#]YS5r)c>J6!33BHEO$;b_/23F<.0pBQM6\/g7SdmiS#TinT=K#Bdu%\
%9jB:,k__k)m;c`R2@t9rh8WX0oB[qsbMKo>aYN9f85$!ob?-.aDfLqs("gro#C9?H,KRX4=rECIK?L^=E4,;AgI-Fn)@UHt9!ARG
%g_u^@g2+"*A#OU)p!TMs?Ur":Il.$flDnbY$@=?49@IA>H9D,Q<[2-[]rp%c7U3Z*Dk5OVIl9<3Z'B!u*OhQiDOG@f14-O%bKScc
%ZY`lWS[CM6OGJN4_(TGRao'4l-\W"7o;cjg>J[*i;oj`(e$^LbCT%$]WBST^/*-8eNQ4*ekI`3Sk@46q>V&*9$Wc$cl#udAF^F_f
%LN50r3Z$eT=&5`Xk>2QJijm7YGD:$*'E+9`f:JS^D[H=.q=kBt5GLqoTL%8io_#H=R@VT`>>GHe_40Dbok\dWD-ZdEMuB(T`oGGc
%7O\&.0;m:h4nsMME*Vr)]h_gKhB;$8fpiT"[@6et&*d?n$$iDX*rS)/]sVnVm8)DRfkdpS)78T),ZJ<G>#P+d_0EIl%'O$UAj1\R
%a*&GuYm5;=4,Qrq%HrEHkMS_m\3Uu':>P`l$`ILJR#r`df2'Huk?m[d+::><^\7R*hAt,fq:*qUq%tS5pJ[YHcS,Erd#\(m:0p`:
%=OmH#+fK@gmKpOsh<Dc/$*`1?_.!E-?elAC&4tk_K-%f7NEB0X>`X3i@YoL4Y%fTR.<RW@p8^Y$GPfp]O!aI"Igfr\#>5@C>`:lu
%'n0_0k2t9t+0*qf$#XRfg^+InKd#7o/tULY=:COFq<&^Efa3JE2B<f6&)Ie_k$"LFLeBCB;-\Jk)VKr$YO(CtKSgNqaKV)g[8/t1
%KnH`-@X@SGdDABFE])?jrt#!5ijC;=oFJN$n';4dVrJrK:d?l2/+r@]S,MI*6[s<,XqiG3O8dp^o"GE<1*;PeXpuAb)u+m3NhRY2
%h0UjrN14G9DUp`LF5QXX#NVf$:R60?W=L:4j5#H3/FfI5*P6m;ZsQl2b>M!_%^YKiTBdb:BK'pSHd5MnZs@<'TSoq!Sa!M\B<S3@
%@&tC[Nu$&RUGpB(L=DU]9cLuS&CP*H;VM"n1RJQCGoP.kPMoti#[Gt-1a]nT@r<?.eVVhFe#kTqG4s":>Pi'2VmG?0hYIPbS%#!f
%0q=f[7e5P#s*6@^*1`Y-?4?#GnJPD?aeqH?DG)I"JE&[PD=trRL51uOXS!P_*\LWb4R@f_5T/7M[.Rrh5An.ObSS1MkWLB5[--p_
%I)ibYg"GBWCpE=R2rK<ne\K4Xad]WQRpkXYo^qLW@T6U`o%>,&f$!#ZMcT:cZl$FsNCO@B@GJq"I/+%FIm07t0pqEjhM^gEQ?U?d
%i?<gOO4l^b^V2u"=9%m8l)FYl."6P'T"Z8)?OT`V`cK]1-k-&N[P)J,ArG9i_<eBp.HXiPlcj5o(SkP_?*'@C#f^rd9*/40;OA/+
%WEa;N]!QT@3/*&?+.\p]#MT*/?Jm.&mIP/JpNA;TGWUVen7FSDe*(M20$phP3ga@.3F"C%KQbG9=k\JZC9X%bk"P&-Q<pRk>G>l<
%UP&)-TRX5.iVq7*T+'k#Ms'6#;ZXMEA/J)ILSB@)(nnjr;-P3#lqo8p>>->J=V$_]\lorRpM(e=_.#0tLVlG[YTAfM&;bda2F,>u
%4WaSW**5D#dlNX/"f?W/RLEEl`GGBOOiS0YDUQc-iV8nY!h^5K5Fan%cKXM,qC8[s4?XO?&TnsmlW:_e.2*dTE2=M\S[Rs<oJV'G
%59#XeIe[nB6PtMa.ophhF`T6>N*7nbK6bFi<TC=a1aQ`bObi$X4R[@t6hA@f+Y<XpLk'f$/JKWf;+ub4'*HG-f1"oGW2tkJP=g?"
%koT!FT91d*2@$fIs).ULa`JV`8#NT>;!%3`XL'o_qg?L;VZLp8"XOh+`!S,V4(bk\n,<?YK,"j:F?m\=I(H$K#LhAbn?AXNXa<jA
%$hJSqXSp9!'M.M6pgj4+XG'_Pl1&lhI&]'F+GR&N!Z6;E)]XkL\IBm@S2rRV6[%'k>QWT;h*i$Y9G!1r\ZO`[rRE"0DR4WBb2dd"
%\2q:>H\t&%pY5=_qt4WB1;Gn/)^&@e?[qq7jDFcOY4Uu+;4FiM!c?OqIkmD)SX6L'/"0sKIl8B8^Bq']HmcYW%_^"4S^,ra',ZqM
%;r"gJ1g`HOO;>V=17;KR]e2MrJ_Nq8Y;G;oL!0,3Ar!^<HSCjY;Ie,&`Dk(SSaPtQf$Ijkot+7K"pdZ,h\U4^GhMA?k)45Ki-[Mj
%]Ctmd"DH4c]=;T6n^>>6dGSiRJ3,#8gh!Be57LuWqf-^;SDJTJ"jV)^CJ>Uq9TFn8Z8F6o9]Dnd2:Em\=o2=i5H0F&KCQ#pnKDaR
%^#\/d7CDG(O6RY-)#uRT3aSqJG%66TUX?Sc>&]":[i;?bX-hk@WLpN7p2l#p;!1O<(CmKB/V^jA4.&cNW#*O2c'NPJE&\rQR1)d-
%<N[%J6d0?[G,)*uV`]jg@"p1%qDB)[Qdkf.;.IM-Ff]Rqro.@aor+3IDAkrf]s_,M*[f;OIEicMU*6b@PlXl:=gdlU`Z7_h`tDbu
%:n4eFW^[Z%7+`GQRQsl"m_R#W7aQc6Gm$5?E!l'!TN?CVq'\/))sY:ZJdb`0R\e2fc6`d>,/8Tm?`2'I)m5R"*hG4t+^?bb3XFGI
%9p1@elK1_\Ltjd@cUqlQXm9BK0QD%8EhL["E,aDgn@GVZ?6IWaB?R;-IT']iii87D=.0OJ0l0jVbt8_^PlqAY!cZ-mR#ORk,i&3m
%/W?I-;gTD$&%7O9C-/l+m>iPI1d<r?+1u@j8\4+n12is4aO$'>qg'r36KM>(@Pg!/>>6bZ"cN\aH3]ll4C6UQjmZ!2c-[E1&`L"O
%'#N,fESCk:H".u8."1BJ\[DOW(b]e-OJg'20lDS^f$IPEStKk2R\S]ECJTNE)GQ6h:%MgLp_r=4EOF*;=^8+sAIHUJCPg$\H:oeA
%="UDi(Q<TX=aE8M!4elHU4#"-6DE.%VmE/_Ulfr>lfMi`-2@=:o/_Yh;(AEbWLpXI_`%ZsC,GINEtC-)12X0#nG@gMXdUn(+]>d[
%8OCm3]Q>8X=H*sP_YN`[E&\dpN>>hX>SQ]("0(Pim\Q2*X';#Zb<jn0+<$3Z6<VsJ/G/7p8eD?*^^%Vg`aj=jGdMpB*>^nl<AL$S
%VrWZiHmsqoK>k,'kANkg+D":(<Y"f3e(9W\e*$lS7_GV=KD?_O9n1YE.or&Bk#mm_Md=3l\G(G_9!+,i,FJ=LWfX7n?Q)U3bshMa
%m^7FJN_6pR/+$X[9"TG@O]Y<1IfAP.&p@\L*=h>c]tM,9=o/'NcE"XN^\lOKhL"rjqOg'_4o:t[J+VgaA,jBo]tN)pcJD(-2_VnZ
%s6T&?3pJs*jaH^dkHj4J7h6]6^4603DsrniFnbSnrV4ChhOSS'5da2Y\G,@'HGO+b]WYu*5B>`#XVlS9RDlqT)8h6aho!2JahuEU
%_hY<^+!'AFiR^<nqYMZ0iT$!`C[Z`XO1rT:&*RfL:EFn;?_=T]?iKr\5(5YfY?CG0IgR:cgq_)402%o:Fp+F$q#\=FKZ?4Q\=J$X
%?TuH0DS14=qs@<(5(3DEDsue_q9+-[Q'rV7gFr!?iPSrfIdQ=9g$e_/#Q/nWpV/A2^OmU4n1P54hXTnLI:^)`Tl!YOU+YZm8&'NC
%55KJFHJElGd^dd*^[>7Up)eeWWSb71pNcK'p\F3*YOe^uj*g+BhWnD?s3j.-pm^$on':k2d\tQ<qG9?"^h;?F]jn8CaFE2lDuJk5
%o=lC'([p72FF%`rFVK6cH5"!)qt%S9hVR)6^#P;058/)>\)W#d)Q3([,<ggR^ATuPWVq-Y#,?82#*/@hYNR7g%d1T\Y($<)J)U=[
%Ogt2+I@R$EYMba;03!R6=u;f=pV0>u?_4^^LRk(;r??T.pshm*hS#BZ[HLB_c0t]2XS_,607"^7s7PWoc7dTF3cFI/IfB$/5E@kZ
%MGhtg_tAaACI<(9dG*QbPNeRCrr;X54c?''%XuVl?[QqpZegndmao4'FV'&RHea)hq7"WZhS6i"p=o'055T@TMtnbq^:g0+J,]*d
%+2'[&:]C.MQS7+LiV]adp[=l+kNi"@IsZP2];*](puF[-%u'^>H15MHc*Q8BkOZ%H]:X!__0l7U=m']!rI;D>%Ng*-eTJl=O8[?`
%]_smOn'-pkCj,<hrTnCt.g!kQn%XQh5FuKaB7%[kFaDol_p"\-rTrkJj4@FS[sb#uFS?TdgNiANbMpJ2)1>;=q>K0p:Y`R/2aJ)5
%]5dVjDgQieT)r--Z[?][X)Ag,dMmSN55Fj&)ge2>rR^LbTAE@.V8^_l(G=[nHfnK.G-c[2RQ0c2TC._(qg/7`Rfn5PMi2uOUV.Tg
%rH`t^k3(QuHagZ6?LQ^1!K',<i`V(6nF:qiiSL-/`rF`hUpiSEqt.K*mCgi[^X:a3r5\j:\9I\6hJ[c.f69I4]D#q0`L_/Ar;/X$
%*Y8#CRu:Ktrn.h0?MMqJICg;DIe1=$Z28:EQ[JbMhb3j_2gb:Kf_b-oK*.!8g&'d(TAmO;^\mfYhH)pjnRh7UM>Pt4kPhC8^&1)R
%?g[MMRbc]`5QC]J]l.e\rj):^g$-bpn*ZcYH]JE@?gU#TlEa:[SpqG;gACkl2VQo8oH`)d_>2[nHU",#G%9uJe'EAfs*jX[0g=`d
%J,KrIrV-3Z073_G)1K<oqSsELH\_V^]sW'+puUPLj69sVp\#ipS%Y$_5QAGVIF`kWp\Vd&^[Ea<pV+2CpLnMhj5t(=ac2?B2a=ln
%kP/CKh"WH#b.2M9If"URS0rpo2gkAA#s@?>ptPacD^8+C^2r>NrQ-]O^AN6FIlG*5rVZPPr:n81NW+FB$Z8*'p!NQSj'TNGG2q97
%PMjH=nb84d5:h82H/iNB.f(G1hmi2kJ+(pIf-g(OUBcjm)l"LJJs2\%^YUquSijm1/3a%V\p7e8G3e9\_,nZ958h06l/ph#kaS'E
%s)W3:r5ep)Ao]Yohu(7h4ZL%Koo%`,IC&hCgLiI[fm!9O+92!,Mjr%Bq*)=ao!^:?hYd33-Qh7D2*JWmF7=Q2]/b8FIrb->n%7K8
%0fLI5o&H52O0U^RDERg]kgmeHkAP6dp>:YG\"!]\rH9^Hqr-U:qTGqsDghH;l/&PTl[F6I)aCr]lcEd(KstB956'Wn:[S#iDuF_F
%a60o9pM^&of$T]Mr]bbefbI)=XSr*hZi:&p``#;uWK]1.AakD_h:TSkB[#o#0CNh/isDPZ<Y[I80RIGUHLK\CRQr;8$ABZj@4o9#
%+$RAcI<_>9G.%prN7'DN?/(:FcMj0uh+k4W^['CqV>ec&`NHJkZ?Nb.3IS/QdCCqqg=s/MMA)Q<^-$=Xmb_:LkWHDee=BYGLWc5!
%B?.Jem3d&,eU;kOdT,YFIHXSkbAc([ZInE1\1I="0O<.RF1uEuqtdI2]k_#_lheis;-2Sc<*e[b_+rTfFfX0f;Wus%mX!S:F;I[W
%\%C2Q?Enj%AU(\r4FaQGB:%1E\sIW]`k/]4HQKcm?S3,*ch+^Gmb?I^621!D`&P88pXj/+:[p!ima7.<l5@8BT6ho_L:;LFLe%0?
%hlV%om-`GcHVW]EC-=Le:\Qu<kJ-Y4QVWZh#:obr]r"gLlQ+l4.eZX;W'9l,(U$V\\*#5F]nc@Lo=^K#lPQMna%[ECF]O"apD(;`
%3r8JTogdp7N4SGHn\:[hX`WCNqnCmYme;ik[G,nR\[U&^I"/BLhqNLlf.Y&=KDsht01Yuk6gq++EM.X,^U:<EfO+[LeCf>Z&/P/8
%^T8=lAt\=[UHBZsAet\A$MQUaP>>,D"&$[1*<Y3mQMlBp6[s.7p?6h'nE"Qd\kqT1lS"X!6E*dbr397h^H&nZC^.M#iGa!VTl=:B
%]dUO`J+nj!jdh+"mQ.p.:0]nhR,\$UcW5%l2Y+7XTAQ"bhTXg3%"=W97g9@%X%.g$8OkI:H(!>->T.q^#JY3$m10gi#(o.+pQ)tY
%T$iGXDff62j$A+9RsSK0n2AUn>Mdbb+*_udYiqVEWR3Cd/G9R2dC%g=0jFAf`5]KQi^d&:`SJc/VX45#=d!g4]3gTS:Ys1gb5O?1
%h,g,4-`:`Lrhss]qn:Of4(#&F6ba6RDYVDP4Ql0%?RPcPg3KX2Cb9ohN#I)HoW-@Oe"u3@om]inI:&Vsl*millH0)&'_Gc,4U9B#
%q%?A&.\4Dqi)4K4>WDJ0*s6p\p[sflFXR`4oMg*T9s:b'*U'8fSf@VQqUT6SG*Os_n&Z8]\EWtfD6l5LYKb2LI@kdG_.BsWZk\VF
%bWLRMQ*Lb3Nt!asQh(kl;9.+<N9'7$E`DJ\I#(fM01M\Re$!la_i]MD^<:FF6UOdZg516;:Chk8]m(C*>T^)r0Z.8\DsiB\AU8+$
%>4$bW?E`eIL/58?\qcpDhU[M7dh.O4<3@iDQ7n828*]&Nn&UQrmt[ZlnSa]?Z+cFYdDbt$n`[gOfD3gL\\K:+R%AdI)m(1KN@iHM
%c&Nfl?N:Ck4^:0mN>Dqelg_7!a1_#>LYD<DI;5E9rqK<N-3fg6#:E-`n"*YIl"ltO\\3G?[I<QiQi-^*ASL_rgNdN!I-[kUeQop<
%GE6!9Q(sV2g[b8ppK69*:Nr$F*fp24QqDA'c``RDD61&:r&e%@4.>$-IbfH5WLB[&Vs<&8Yuoi:\gUQ#%N!\C#J7u.-d,q*n)VK+
%HYN&Vn+PL8pX[mDeF;Bb1pqRS]eOZ:o_^Q%51DYT*>HBhl.Oo^$o>TKH+Yj0UVHPC`f&t01Y(U-l^@-uag%8g^74`IJbAiDfhubW
%ea1<$EFnhnRXUdmI?BG/A#C@GF)1(XHZL!mVdo<]905r@UYkf)k=MM0Lj<;jf6Y<SDmdspM+G_A>'HsLG-ST![EpGX2]'IdbE[eS
%ND$g$<??$blo4)DM^:NsZa^`l/2#e>lrKI1$WFr9eU:4Gm<j0s=Saath7Y?ml5e'Sj1?tf#LE:n/+%[r0.Z#2rKieGW2Gi6=ZPg"
%]rO;KbMMNoIq;Y>_nklngVo/_[DC=pNOA#eeYBPNV;@"#p+O&Vlf%^8aSPI(cdM[co@_M\hsk=!7X8WqB]K!D`6-*[qXF/iYWjTq
%(G<]C2UAr]YI8c#CPml".\32KCjcgU^MH')ND4<VRD#ZgV>d(FmITXtj)=mO?d6(FhT!sP]c@u>Dm*N>I36&!NIP:W(qT`r45!im
%&SFmf47iIIrm&XbdF`@*k]-K;V=X9TmdAK?fO"G]Z&=@i)dXLFg=o_4X6n`HhjAglf,a`]mGH7`02:?D6#gCEnmJmrR"OGdMuLV#
%2>_Dr\J*SMq`E-Eork\l]Ck]Nc)pj:M<2/AbO"fBdI?Glo$QUAk46o0hpL_/\G3^._]5jCM4N](q:YV$*]Unq=ZQ0s:Mr+8H;E(]
%(S!+=IP7>M</+K#r0\YIB1lI`05&mL'E5NqrRpe=[B>/Rl_jXR$\.8UpgSO<G4X_UqXO)RmIh#sY&"O6>i%'`+IHL"jl>$p[GCi:
%X,$<"dHdask2^ip=u+]*<tFtnOi`mXk1beR^&>6b4*E\?Z?CT,0;mt#\pL1>]?+rqHZqU9NSY25iq*-(N5'LbEATTE+MFV3LZPpr
%_h\-gp,O&R7sI!/r7II?IsGl)Ml2UL`P'O:K0D*ieD#6arP,U2I@$?D_m4]rC9+X-BVQIc[GBYOhC!0,GO3-YVj)GP$VTL1nWkD2
%hK&tZ>AtH0j^1/UZN0ap?E4&breXJpfB.4F!&o8B,Tn#&fOW`]Ns@/Y%e%FR>.6hbQVOAO-p)&uID/LjhAY"43r)_sli5,<8@E[C
%HDj&81a/j'dF7>?W2t^=Qh279]_p[9S)r,>ZdX,fl[!_dDf/n6,#5`lHSTuiEM8Wu%i_u_SN9l"Y2>d\3,301`+G][l43]7^C"fk
%0:Fh9DTNUD+6sFJ5AS@S@+W>;p8[`,"Lr<D9CuG*mD:LEhKn6Wg.p%(gc@UP]KH-o6L*kQ7(G^&Ves`rVer]26Q6Un_Wd]HrcN4,
%fCi/KQ*f*1g9@'[r*?V+ba%HhpnLR75i\XMZc0A4-gmB$q..7`Fo:_*QaR.Y#]9<[D04e,(S6BKoXmqXm./GNfB*Xm5T:0&G&Tt;
%a,-LMN_eC^RJk[jDX-r-J&>QYp?:Z0fK*n7+^kLJGkS;_Xq4`KG3!m1U8&Nnp&/#OU!'@BQb2Rqqg[E:?_QD2.]DOja3071H&(Li
%E:kU82]3W=F+3BDXbXij20$>6]W8\l)J.M>m,uXFhg?)1RP*4<:M4`E?*?.lJ%WF:BD`Mp&smm!1aXdh<U(+GHiETCa^ErOdsM$K
%><d0V;d$WF]0F#S]Y?V3&q/Dofk)>F2].A\14Zk'h/dtsK*s<h'B(:A5cpWJ>d>IRc\DqAd2mRVZ`25WhPE0US*O=+3?m<6Fas.u
%MW9p\=er5-Y763&?MQ"'="uulK3p4])kONGkA#2?efEZFpE0Gt?@P.E^Nd:P\uT2p]_.ff1M>sE/\dI^_)\HCo>k#E3uitI>`@=9
%GiK1/_B'd9-V$0K?X;.8L>Au/Lj4cSr9O@Pg:8Qfk&YNKR=?mhbR;j-N-%2J+1U@%06/RhHQ7C$#T5!MO/5o?$Q=<:QKqYM>5HFP
%k<:ssZga_@*SnL+[[Rp9=s(T='up-bn>-Y?;`,O<qR`#'S]uG<Zt#877GFs#N*::ppG0m8qWWKc1hKO>iEi*]VXL`24"B^6[I]cC
%,>]$P.:9WU=s0l&`mhW'V,qj)*OfhKq!n?^r`lN(qt0FC2^'U`'&Hr._hi&1l$G=skluP@O,7)ehAqe"dE$"X6&Vj4KO1APT>]0j
%I?cRB)Xc%7m7$h`0a4ac>BtgK`Aci[d?5T9V;BI")JH'`i8M*cC1b"],ulq^j"-kCQb%A:8%(n!L[3[sF+2_=Tfhj)I=!\jIb-bB
%eNV@/?+I$QT>'TMR7Z3h1pJbu[\1WqC:i:0'9=feAnk3rKUkH/%aTL%?<,;V]WW!dqo-:+Ob&:cM5PVZ8Ae+0f@h=1<ccUKo9klt
%`/$H[X'C[F*ES0<mdm<\C+%nP5Z=6=*&?ELT;u%?AbE_j:qF?D4dBX2ShKr\FN;R(<IN[Q?eogBd4j*,DsjQ8DdQ4\Ai<_6G"_.d
%io]R%]'Y7G-:Y/9p*PNcMRWQ7J^0U]T';Fp)M[c>F\%:oHFC:onFjIWFB6,#Y$@@_,);;uY3N9jrKnE>n(t>jdA3BaqrdkNoW.9_
%hN-F7L%+ACBs#a%B.'ri5C&r2U8smbj2p=hV5J@-%YdJGSUOXiH#_aR&'#VfQ.))6Z-Bh>MrE^VqDE_-p.q:10'ps%)m#OLbHH[g
%QhthOjdXQcm_WK6mRsOff(B+Qka`Q^]7@eM*o>\A.,>nfhtE*`$kJf]h9jF$,PI3i]0*7A4`(ho9_YO>o"C6\bK=4`2H_Sip(R^+
%b;X&/eumt9X`L3l44:Ak3=l@=H`kZ^k`.Ar\_litff[q*P"-O>h!`m$-S9%+pN9kJG4_),\HAkOb1F><&/49i8^.oq*=LE6qFK4;
%HiNh1%&<?JII;fYcnO>(QW_<-dQ]WI')rm'R[gkS.g(uj[Q""Vc4U;!Hi7GaP68*OIQeZoZo'm"HucX)cb#UjR/1#:#K\[LW]ZVC
%@5"+%kS[YpX&I!ATY4Sn@!'<<5j@b6lF=3-^$;em%F5!@XOk)!QM&YFb/d9L@'$_aEVs'Frd)4R>*hEDTOdc1FjNW+h^>lDa'V^q
%=lR\'li)%X>Bj(oS4PX+gO8a2D=W?W9)[=fqo:aP\*P`@B,YCQ5kJu\eb7eJ`8fmsL)O7J)WtB5K?HbZ44lL=?bVTp)mPf<\r6Cf
%<H`H2'qU<Z7pgS>W]-[=blpK,O(n(2Fu6(WmO*b@T>-WAkFQ%LZ.Z@N%dK86hgTAH%":J,8+En7LoQflk]Ei&l_1e.Ti]!)*dJuY
%e^MRZ!Uk,UF?#hJ`CPlHg2uRe:,'qP'Fq$[AESm$fdg!^\U`MdE:(^5Htd<0]J*>GRgVA6IrmGG3P#+.S@$7!9UB\ikZ69FI]eZZ
%0@-_DN&F@]L7rm_/legQ4&9RlPnA0rn]lltm[NCof^>,U%6RENHo[(YraE4eJ<SsFVu*gCjjU&<elgX.QG"<F1YK?o:PZN!ktJ;S
%K#e`(8*@V4-)7(#&l8,`YFW)8l0!\_gX=g7>]oOVZtIO)E7R1I9Buu[k7a?NZh:<>E+PMn)<plBG>jG_9Ffi2b,I!VZqVM>&ksES
%s6*'Ei.H&K[qrWkVn5F2EjWHcHLoMH[Tf`W&1d*JB(_n%=IT8uG)'_CN2%a0%OTb$f2AI=@pS/uOM7m_=fHa4G9s=c9c`l7?gpC<
%!T0Hrd0bmPrgJoK)I2HC*p<,Y\lP`t-O84`7gY;.>BIfm^\3_JC7kME]-L[bS7$@(BX1s8T:[Q+ND'Pir)[4LH/G00^V2DL=h^<q
%MV,,'m%Bedr3B*mC`X%SjdCg&EO<JXo"3Vj:<MFsq\:hkWD2=&(f@j]ohLR&`l12=ANY\*JL:DZD9=R1CDe+t_I)lKlF!'c_-]_.
%o5oWm?tJ(mBr!FoJjOT[*diI)7$A4%BXA#?RZ:B;X2V.b3t)>;pG%e*Ik:P-R%%JEb<./D"BIl1Q0`%c;S-O7$OBo@Cm]RmL>b<7
%Z%P]X)O:=[5oR=>b9N69)TH-0+laFuD.Cf8,4b/LGU5eq)P],0B#ItL[Y&(.mdIbHUL>N`R"iki*s#_OkI_?q<?<B[]WUU.\Z9i9
%l"guO9uq28==_78F'J",q,b-[4)4Jm0r;9'O*AqT)V<D[Ab=DA\aaE@`Rh%o/"`I;,GWqld<MW*?5nnU%?mN+Zsfd[>))TrN9@*;
%ahHlO2N4*k9m-LW]#egV=@TsY(s",53&8D9'UM`V@S&F`bnT3$qgC-/SOpIc1lQR=!-"?L51YT1o&A(RqCuI?4c,:ZP)d>a>h,P3
%?/f47$duF$]idHBG(/Pn(L^:S/$5D6c]c.)s3P_7Ph%eVn"qFb\>E]34/WSp/O>G@,aOd^cB5)YkOlQG@;i\>;cNP`l?T(Ige(U?
%Q1ArFJ_[un%T;K<q/Pd:NN;P+'3h3#WV\J%r6XiemjNIUHuN7m^$De":*.H!l1/2PamNt$r4N;,.k)BKBMh_^l1WmPbmi]U9PenH
%9Mb@8hOi#6XH!cLr3^on;_RC;S\:`^gh?T:"uX[7+)e6HbjN7Thk$rgp3tF\epfNXePY0kq<5J;g,HS=g>,LE*3Uu]eWq1M'ot)O
%8b9VJp(&5S?'rqRWEJ<'8_&<H856uY8C`Pfc&8nXnLt[8CQe^8]-\%_:BskS433k*kiDI6d-^uMcr`?3p!$94HV`c[4M`Y3o_'5g
%^%Z8ffULclm(HKLUL@&3YE6kamo;JjW1)DAcBiZ4;+^3g;nj^#Vn8An5m"TFR'9farM63tEdfb='\!&*\^`Btkk]BbE;;f4,KhgP
%Dff=+kC=6QBEYO'*6qNMB5TU`21fr(nn$olVa;l1?8uchpN_%aGPPiqWZ$8OrF=<3KnRl:EW5&$"4($R[qE_FD^tp=fAb@Rr7Cfu
%cWn4)/UOo$UBb7;"o7HZ)YV1+&'HnURhbBCWm#'#nFDPUgI$7`XBs&@(ta(J:CbNROnNC"^D%.'(XbOD1d?.sb^/.qD:Q%7'[#To
%i_'7GB)P6JbIV+LfDN*2F:'YS;u.DanR\],2LTU7;Z5gSSChM9GcDtj?O(dEHX>b^l$coNp(-1":G7Z=<oS*27Z?ipl#*oQ6c3Nb
%@e@tf)V8.RH:"%29HEL9dh0gRra&sPeE#H/U$R_U_lWIV*7s>q/'ATJ?%0CkN/]IBKU'Na9dW"%K2n\0]208tmOPWoRr+m^PsT2u
%ZEZ,e5<SE'TA84n8_F(8oCVdn_u$F)q<:Q=rgYo+q4iQ+p_g8qFm?B(^#XEa;O=tp8*Y2u(#;93Z*T;"c,T/<S];RZ]BiRGo-DdO
%Ad[)!a1fH`+(Jq136';N8/48O-QYAc<Qhe&$ZBd(_U!E4/&V0XG2b8eh9_ZCoJH4+*ok,_.\eh$E>:3eeYgOg5(/aQ=bVW`o)?Si
%fB6d>Jtqr'5H9?7ra8UIC_!,[3oQqqR'Z<7S4:OPK3oHqp?!Ip1'0(i(Is(Vl@A:E&n1[s<:@<XBD2bf3Z3&-!:T1,<bZ]iIs:H[
%5<RuXQ.qSchc<7f\OhbeZU@f+O7%E;2sm5"?KiJaq4UP**=[;nn6/n9WbZR9@HEu_]@Rpm9g+]j?Csc2@_FhsZi[<)nCc%5q8CY2
%+R/dRo0*9iof</5]jUJ'cbs<:H6EUUAd_>!-]cijqcZ[CO<g)0os236<h94JEE8X&?PbC*'o#I*;Q3/jnRB2tle9iS8(TrlALV:6
%Fmc)0>WjNT^lris@DDH$WOkc=+HBl<SV8/$_imK+.kfGq9Liah\&/*bZ:MI:Q<h&6LU=J&kEYZ1o:qKKgqHI\VgG+_EOHnK1iB=f
%Oh4\!fd=Q-pVRb@U@QQ:q]Nh=9p1_7!lF)15RX1];HCW\O+[mObbgeon:&c7I#5`s13k_OrLjCGOI/W344<T^jjMT(jSZr8q8!X^
%e,)U6#'qYOpGS>:\&*Rb5"%P%/^+#),J&;9GWPKK;ZSo8aRHK?T0+ZphpA2U?_#oTY:W+7E!Rm)#=2#M9RC4;35!4+2gS_I:KJ;^
%Rj&NhA!0"D]I)?g^(?'#j$^B=>P7?!7CGI\5;?&LIpcDel$=$@2Th6-DUpJK+.l9*?]/c+$)q&#e4_01DDoP=-Uu)s&5,:TCcIs_
%IXLeDRBP*\?g'&3Skk_dDelq+Z(RuJH`qWs2@2$k[jtqJp*hk">&6[[V9/CnM,loVF?`K,Q0,Qu$OqLqa`QlWpD:u]94Pg8ef)_]
%q-FP^[(0$OH9j5OQfdkcFg>"'Ko+(MmE<_.MV"DVgW.s-><6Zbm>,L>c&LHU;@8I+cEf;CPJFbT>j)Kl4"'oQB+%2lrD%9SB6kj&
%4I5+]7YV\lRtIuK[F*$WJSub8dD^"D6ZmkGm!<8c=31Z@iS/FMkH_J-1U^LkHWbiTAN7B_9cbC;M=SpAa`Y1q@;5+@@^*3RSVNJa
%iXT6m4U8"_#^d`0)'*,)MGE-khf+`L@X.=4(`C"nVc,8jlE=P!4/8huoi9eQLJW@nfi1-1gbmiXoQqF?Q8W?P8uq]]#GkgOpkW:d
%1*)L3amahIQh!]9f?Rk=)SId%[H#?#Wg*5&V^g`Eg,YCSFJKqf$QTf1XO/(-ml\1-m,!2&(ppl\Da:'rG8i+D>Be2jFj3q48s:N,
%S/mPHj/_4O'[5pgie;'F\p*tPUZF0;4f(#Y0`=Tc?-f@TNlkVkDPlmCeB$/0dsI*+W'=2fh`LnUqt:-Y2mP(Ma'7Sn6h7H>;Ou]L
%pSW?*=+o<f.bt^\D1.E*PPr$*>\bUlDNMrEnkut:=AKYn[XLFUWjB%d?_M2h<)6$X^Q_dq"uhAl??AGU'#@lR?o;)fCTHsMWY9,^
%id>j;p&#Sik$I-gB/J1=DgnV3jbhB6(a_7T1KGps9LgN_M!gc5eUHnu'W1Va*Tj5og-6G&Kt+]Kd,KX+cr'$&JpZiGVPpC>(H01?
%Uk2oTTW4nko&Z-":Bc_"]m*K/pfa4m)NJ-B8+a2ZmJI@GQ@#gol+:s-l,q5:C<*P'TJuRf;E[bb@,kF1_%_6O(Ae!#de\:Q8p3et
%fak68<#-i_cHFfIrEl80GJh'OP2j#eI5K.?mSZ"u>JY`7K1D/TcgU2aNP-$t[s)On"&meL[;9Nqg01gfgJYP@g$(OCbajORcDgJl
%o$-QMQtO]WK,:H_LCM9J>Kq1is(H,GHZ-3_c+SPe.BU$C12_+827MPIOP0'GqJ'THqXbeP7<s.WCN[*I<U-$B(n%?;)hqMKm@]r[
%*"ic5<,oMGRePr@&W8_t.';>8G)bojL[M4L-S*Nn\XoBAIYk5![Qb1N-(cI^#Fu)06&uN)oLDHTqR3Y>DYNG^n,8ckSa)WFDbiLg
%DL\AW`nr"i<.8cs,Ft0Sfd(m]noqEhn8\cb2-N-RoTt\kQeb:tp7lQ3OcuV8/EL6\`>u:dVc_EDm@[lW-d7o,q^Bg%p*s\AjF1Y9
%iTkq9ZR-0QS/e^Caa2ibq5,:cVmjEZhc8!'T$*Nndl(@a5C/_Ygj?TiX8m&o@1F%t:$WlF=sFntD/*h&H`kD_s+?"W6IeP$l0dat
%'3fK_m`X@ab1X;npi9K^(jEPo=pt%2/5Q/ol*AUE!U1aHAj&LgF?OVDUQs_SjV2L'q/D6;`Wtt3jGb]S3$qoXhfAGs?J)<,Q\3=(
%2U%M-m*K=qAa02'W@p>&Y@0ZKTNDtt,[n*.>[!SgWC%g)##%RZ'3*b3=t<r,O2%7R%+huVYH!5==1$38rc3%/qdP3-S\hkk)JnG$
%]s4qcAT*Ctg=1"-k?2:;XnR,9Ie$V8#3CQqhFhoK]@,SQppQ^-S'M#bmurHDiH\RCq#uNV0)#UrM/,<Jko]NiEB7*t4`hX%Lo/^u
%*VGC%*t;M:Alj7F7qV@i7Rue<<obX!G2TQ'/ga?W9"_->Q0q:X4aC,0N"mmn+1QMkOAiSFN#CH8a"LdP1VG5aqTfWL4X>bFK1hZ@
%R`(Nh4dt#,l0i)JTY-83M"L&7J^WA!q_AJ/HP2*C[lW,ijuKc+4$V@>Sm@dfeO/(18$n^`]FiMe\p$+CJr<dPS9GGlWg?3-/N@Or
%6QLOBnmi*%KDruHreO<VrrAUdFU1g-a($B\%rZPQI#U$2GJ6Q0>E:VM)$OSZhtlH]/G!k?F8&1A9,nK6e1u]^1"A2ae<7<N'BK;h
%go_VMaIXsZa?'&=YM6a-f,3`8G1"/q'OH_-$)A[.GA1*]hi]qpo'ZA:l+)%ds,tBD,oN.`n#kDAdF:n9j94DCec0p+n8e,Jq/CCY
%C//Z3`Y\nu`p*<+nLbHDi^t4b2Fe(V*S545KGqQ[\^JaIg*uqLSViEO=L*XC\Su@PRFY+IH3Mn"i=q2]mpf=7[f>N1EEgg;K:pIW
%pj]J!!3gY=O8nH)WZPTC63CI^CNmF(1qQdW[Ph`u["l1&m(R]LoYj:g%h#^,5Z-ANriuDTr,]sqktS$!g:$<tL`!T!DuA?0rOSa'
%ri8b<D$t2BHX>IK5Nn0/s7d\n;ao_l6(@=gU8T:W[,(`AIgS5772\NH\E8C.LC.':3:3Iu1tT_"X,(Elo[GOLL1n2jlZ_MNDCnZ"
%CNN%t0'WtF6UN[&]9A`58%88,;cg;Ls!6SaC$6i0S:1P,oERdp$k<#lO_5-*/,,*KViRnOPKT;jTcoQf#SlTu`/7ptl4gK[gBjqU
%l(%)gG"/b\po:%Pm+isc^TP6!One>>2[tm#,Dr3s(,1qFFo4Oqb2;ubpe?\:5.#qaC]46t\23[p)-:<PPaD@#AX_X\M(gE6T)U]+
%IJ_.19D7_"@!2HegaDQgjKmsD9-%n2`ln%qqX)`^Ir8eI?I=tR6dbFu-R)oNbl57aA7V>Wr6V#A'f/5)p9/r[7*<i-KLP"U>i9S(
%=4gd/aXc:S-i_GM:+C*`qd5f>"l=%<rl++#K8e*:PZRMWHAq97o(b+3pPNo:U7dcjQ@T,CSFt8JqKEOsN!b%(XC"*UPCtaR8&'<"
%:O#o8dW1b>f7IX`8>1.;-m(anle/d86&q/;o;&g]*tbdc?;V#)Oac`+'dAeQMbum$+P#<<cgj(Ab!Her73d66<X:fV@,HlR*$r:k
%(eHr,gV2d8-;].g).,3X'nUPCU*#f3nhE('dOuO=N@rD_b<SS:+B#)9V/J\',RHDHq>0$`'TtM6,S,?Yf&cHULAm+)s'k3,K[AVm
%clN)Y6RK[?]U;]]>Ct[+I`Bij&MbWn^PuBBkaNu8_9sP?'"b%_/Yf,0BfhW>KJ%S%9K9Tq=qtI?BP^6;>D5M,TU)5I@8r1J-/[q6
%ZKXWSU6)Cc8)FR7%uc;`^,iW^U5<2)_S6C9s(,+'`Q`mhkC5TQYCVPg6#6&ZKV,RXKn'$eL!.B_(3*T.k]3<*/sDNDS@mogO'MKV
%hYGCg_Z+Nr]8E1<Jp:kS-mJn3]qP.p!7kN'o1=fE,h18h<(RdjJuushqTSD8I2ip&*leU7,iLhH,_c\)*B`<PbnlL5/pmrf51i!r
%SZaf[^m$3'Ja(U=Jfore&TMol#TO-HAQ0'bFTZIdm*cCdN!7ZiRP#V2FcgUQU_=L=kZ_!OLieM5^iY>7Zt_h$]>foKciNtl1hb:d
%c8^]=g/t"DIuV2ZUg9oQ`.SSZl:M"MYbYK,PEnNk;oQh=(JQioPXa?VKn2k-VJDIbF:2,1!D?9(T$ON1ZO)7,!s;m=<mkXh2PTD.
%9\YXW(TK0\Lo)cBZ44&A,+Z4SDPCuP:IT1%kpBIYOqt'S&CQgH4Cbt3U`\lDeKuL*oRk4<9!)+):"6Fc";C&_-%J%QMHWD'V$p_r
%-lGkc%bSi,0M*O@Oe<L/3tRNC*U$N39TQoN/R_uT'54!*X`[GXJpWk'l0S[Z`ohok/.k-ZJM*rs9X@+sb0tkRh0V1VTKrPd!Lchi
%9-C?,CFLhQqD)B2e3IEg!;1bR^''*+-@NN!RLg+kHS+K\73@5GIZ>:[R_8.W0H,^Fia`08.)bNuWVf5#F?nPDrV]Hh/8@u!djKTU
%B.o1*@E&nI@\=p'5NXP".<&!X]/)Vo#]:=Z-2a.W:6uHB#-VEH@^Lq'&.himnnAD"7j!A?U;pe1PCp8oa/7Zo$8WmuOMGI36K?ms
%jVpDJF9#gB7pXN]9JB2=LCS`[PRMPNfIq8A$,5h9!hl<ZJd.[b6)fX\*_,/5.Tnp[I3AJN1r-f@Vtju@Al?*.@)K]Cb1n"(s*O<t
%s3Y[H]kuM.ktOUE<V"*S4lbQ<1-4>DP]g@]N??+.kk`.,6&ZFnI/ATMHrCU`&LCnS60Jtrn6I;qkn8m^J\;$cRPnCo1a%noEN<Os
%$&OO]NY#QpOCNY&kbnUo'K95a4:8dLnc^&UJtQD5MXJc3fLi3T=QJD+0)CI8'/!lg\e:;N.P-T%D)JH.N<r\^r50==@T^'/(QIKe
%([,g,>4X</^le!"l6]UYfUnH1?$\6WV^"i,=kF"V]si[WK<p4T+nO(U\cHQ=G2h_!3]_@4A+D"S6Ft6*%386DJ4HAlIWB(VYiXi>
%kLpPTI)U0J6)e3(>T2`9C1=KY6ZZ)X$r+3;_qO>,.j&l$LMEk@VC8LQ_P>p4&>ln1'+)gQ`]aO!JrE$#jHHe\\HEe3i5FBK+@=a?
%on!JU_[:16g5]ANHPFo)YB[hc>0B3W)DTFXH>!b1HMDE-Q6L36PXH5`Qe$L,!@[u7lMDr*ID(_EP6bOMN'FH09B([?J$eoBQZn[!
%dX5-<#XSSCLr@/5S+ID45h78>s"LsGEEUaR!BuM_:(VW.n*#9",CnR$HUS8)I;Br.dhgA\1mA]lnmaq*S/4&u8=AFKUqhhShpGfK
%J/P3d,b7i\[;PFSimK<B>Y)Sfnj)<cD6EpJUQi+5'd&+?Td=Rq'o<-&!:@4'FJ%&?BK:>\Ua8guecVm/cmAuB=YL83iueV+Da`<W
%>u#A6,)M(5P4)O7%OtjT"XA_pE.Be^BI@7dR"!m)k^<BeHoJmS&On%VrMAs06ZSsrlYcPtgeH^Cl6jHoTC6Y!/(aX$GrNPLa4_!P
%F>.;TNOhZ,+*0AH%%rX1TLj`,LCHM[9)O3>)blr/lPV.?b#lp.!=IV!Hts:_e2mD1;PQ@9/g<Lmk`^,?d!0q$#stoH@D8RF,jcFp
%\I4'`#Dieh(V/RiNZk0PR2.',"M/$<"k&IrGJd;dFR=@IM&]LRl=r`EVqt=uh:]68I4r:1Jt`Q>'KEm3%`f=Bqq(YV-.)NngepQ9
%72<K#FoE2fV+A<5ijJN\?anO7p6II&$%(T;m?UZ05CZ9#L);`'ggCt/9;YT2no8Ml`.@\u&s;n76mYmKpd]Kt&YJc)RI`b[871%S
%.cTcFfX)dpk2DFhHGkj.ScFT-EZ"CQOC'h"<,A0PW+U_/63UX(QC3@c6f1Ji2F*g.AI'Mb4LAo<OeJ%+:IsZij##"C\KH83GTK(4
%de!\3&-`_\@siVRPI('sQZm$F`Vfdt5,H*h76l0an$1+RK9F*)$'U\>qpI*WDW#c]Ufp@9^7n.\4[FbqKr,eMn:<u24%sJ-KQKAo
%HNhUcn>MG#._rg=SJkV/VS:gK.P-b@+ROPa\.uAe'duOX8@g3XMEdr<>N41-O:%\$5N7P1-)mXn3!1(Qn]`-gdZrW<RNZ"1!"/4)
%imU%t`0sqe`lj;O$ap-`OX>lt"WT?f`'kf]B@0-&eTlDj1,>O7W?=X*:duW@EeHr`'Ir'1AFM.kK4'BCaI/"iV1faP,(RUQ<9.IG
%$>M@+f4%B'ah'm(]cT($FOJ*ta++65I7-R+Ffcp_'t.IO@-Q7?*PuSc$82*!&Wp#u(l<-P>,*(],7:>\'mraQX#5o(!j1RXg%QXe
%D#g??1J[P+No(C2H3bbF+^DTV7TV4/NfROb=7;dIDRC2%HR+H3E3Qb=1aE/q4q3Zc7g]#`Tou?$o_CKu,XRDS"<#9gjd&X!:^;TE
%\IrR-#>IGW<,DBV#&0[RVll='Nkih589j5pIVV^pSK-TR70M1N(kbC@*s[Ti,'X1dTr)tuGdUsF#D!s=N<4m.L*V?a&`]G2R%hEZ
%'\"eX`%D<c9hRSaKl08F\,l\l!Y)'jd!%cA"Lkh\NiVY9BH/F1RCsbS*f:&u,CXlS%Fl@-5(\!s"J3g\U'Y=Q7g]:]%u(@dc)4K1
%3g3Qrf]u`!C<F<qibl^2I>039N[@"F@U]Zc#D=TiZJ!\>&1/TMAg.^V\"&MV`",49:40Q#O@DYmg7WuRXAdb+5;@N(aMY`'9f8G0
%LgSo!6B=TV@30ZK<:T2=h'a9tCGA3Z`;`LU(tLZXJiCJBd?(M$e"uBJO$&WD8i$NYe4Pn<V9aXBfL42sHjJ%WL-%uB"npi7(puY+
%,S`!5%%7RjJ3L_Q)nS(=^GIT5/Wg)(@PhZ(Pu4T%O[NS;d\f`6]<Gdg#CnMHW6Lb\@`f:X0n@S!h!uI&N2AuRn`We]nKa]XR1FUg
%oOHC^?jS.l0FhFj_s[gW7R@m!gs[lV=s3;oGtYPW!5bMWJlP&EMT$r=#/2qsKK)8X)'C&QK)2AeXr5$'7MZQ&k_b$L$LH/tc./Mb
%mYu4::aI7g.<\b-;^C7^FN+I%3kFT"@Tfmp(4E&h&Bt;U%RX?jZ)c$]M3G^W:Cg\T,k=3=-H8?P5T<Uel1.B`_[%V1i_DPqD/O65
%ii#q;8/IQS#Q,LA8>!3!D_pm;5,WHAYW4fH7Nb:,/re=N15c5XR]"73fU*?iY>cn8Vr$KM:j4toEq/`,CgLSQ=XYEPo+[+>`.CPF
%J4ODLOPsbV_J@AD=]Z/@dF^Lt,r-ci>'Q/M.YRC0@8hdZZ'Q0\*5lP#E+F4ff\%Gs,.[nB,&o9M1$LTYemA^VE'LWL+@PEW)Uc0]
%)Z89]F%'?"J920GR_@GiYr@j'nj&A8k]H;R`5\$P%jX@h.UU6gW8_gTWT/%e\l21mn3ZGa8+MmXJC9E#iG8NCHeP^5'_-)#r3ci!
%;QUD:+eBV#4`@#8r/6.h:3]Pd'Q.q&'`j#^Mlr[71nAOJ#In=i!1VAc';#t"(g`#>5hsn"k=\]XJq20kOLU,MUe:,:'%gf38`F`S
%K9b25rK2_t=q5;P@d2BO-$$4fCPe<[MA>MdV:G\u(2C)eje38-<*1!QYeGNh60o?Ain/lW`VKY=9qs<7nUM8E$-?)LPFd?']X?RL
%E+3;^+M,62Bb_gbe%c>rYp-e\))5"ioO3_ha-C8:X>Np&[qqj4OclQ!s-39VhXd0JMl&"_,d6!+%;E6PP-9458T_cor7kF$M$3`\
%]4Wu8GUN2bm]6I,(e^hG!YCOq;(Dm)[jR0$5HD_'8_Olh_[<"uQ>U``&tXOVVWBp>n;F-g+4cPG.8P5<rih!'p^5(_<Ym2&=jldB
%PpUu_?"c.P&H6E1ri@I1s0T,$+shG6;l&L"C5`jj5H?52C+YR240'f.C+YM[k0L%8c-@f4_N17#Za37[,]]*ZZc[4Ap&J];23dG9
%)<T4Z8EYkjJ,ZP/2OC]#F*:T@!(1Uo#b.g!ekD>YIo\.$9)#Eapi!lZ=m.%eMUm`=)Sp>25=,nWZH$*;8BTq6,M$+P92C/+U]rC`
%THTJ[fKk0(g[tr3:-H7p1FUG'n0;OrJclf3+b>h>(PW-W/mqid\deXg=f9nh>"/$:s*RHA/O3^^J)75XZ4!i:=37R3#/r8'K#Vp]
%0Z;=D#PLAQAt1Eim5/->MfCq++[M7a+&dnL724!!KaNsR5)XF]dT'N`OA@*6*fP;/lA0V6?k%33^p#Z["A1/Y/VLSOUj,.VaRBh8
%[R-of8%ioN&Q30W=mk<D&/llPZC@0/^A2$H+?Z&tc*`(r+g%dk[aG81"OrJ8l*[n]*j.R/&^gf7N8Oq._%@KPFf,Z55prNs$(#LE
%XorKeV=C[=YuFpd5Cll5/I7,=i1P"A<aGb@$$c()aUKl_UA6M%jEe[((&BZqEo;J!0V1Ct2G9JgS\-<]H/4F;2siUI7Q+m2nq&,d
%,nuk&NnF]E&,nju;/H6.p%d=f+$H!]ElWjD4>"ZrcQ2Xg(j^8DcKQuGFj2.YntDhZaB+sHi#[tUFH1(cX:r.*0M$tGOO+t<hf%Eo
%:8\EmBHH>X(BW\mZ]c-[8>Pf)2ER(FYP>rf7m&9W]mt>.^E:@kMl;sb6rEl.9G4FeR%alMYn9b.GgqIfOY1[?^>Sr_RO;ojFPHA#
%j/?M+2IZ_+lR*3IZD@'r;[aW61`X.k]$gi,+ahe(L,#-6$*^7f\.0XU(2/S[c8V1*KMZHKBVV!D]r:=R)P51g]Y@+P3nk0&m"lL#
%G%U(a*J.ojOVbI45UbNYVdL-Kr4r.pU(oP]+.E/3$"Oa0=qGX,o&:5_N)eh%*;IKC[NWaM`.%n2(F!_Pap`/pS8'_8DZdr*Y]e<I
%(oCF4.Er#).2(tV:GZ$6@hKRZ*@0r+ekV%BMMM`5=GQFJQ(1qnpSM=^<\S"1(NrRd25"H;&L)7kSI6H.06Z:99FZAB^nc_8'sLBN
%meQqc,h`g?&OeeuKTp_qM/@l%01L!_.h]-cB_lekDL%U+hV?aTh)^?B)HFag8SruLG&t^A36>(fP4u&E4DP2oa$P;d`^Hp?Z_X_^
%N+>.E+s`h'W(?HRL(Hr02dJ_BU:FbGaq>o'/<Y!)$:#+u96^jS-4;q*eeLL*8?N"+Wogc-:qo>i"+P*"=EY"eEtM!X49ghU4Z`j/
%.6pdefJ+SgM]J[r=S>+C'(50"^-sG)bdF6;Oc0Pq+9Y+U9`boTLDEh</lYO:F=;Q*HuZcSO#fVCW/h!"!$Pt'[1GVa[,asF+hD7R
%FZN2mXjBmuHk)Mi8)R(']utiijm?1h`KR%:"t9SX*13I39;XMR05Gqb@/c/PVo$.\0ecM1Q[ah,^OcuM_i*@74b_]=0'-;7KMF_U
%h3+!j9SA:s[)[nSjtP5'G63q2MbF$$?L#)U+(i\31.&#L'ZW&;YpUTequWBn&)Jf+/M1@4_thlW+!Z;X%a,)j=H;Tt/.j%CY^hqZ
%Y,qisERP_O-mf_MJj]5,93R%i=J8#L(dY@&IH>)cm=CZ+[=fmGVnrPUm(6X2gbHE+J/7c1\k\N"^>R!#Lu6j=MDd(#5HM^8J_F'E
%.!_16&ScuTh28"b(D_cfP!fAF5Me8\%1qc932?XRKo.ONL3oli\H9qBd!BYa"eq(1s!iQ-H>@$CCiH?(Y\P_M\e"[k[L>rp%/<U;
%^ZUG-Ft*#sCi6.5(#Kcl+O6jC,kFbQ%p:+8*=W,&4rGlhR^C#MM;YTmd/!i[GK3E1JM7020BlZH3<<]M*$(hk2#osRS3Wj3IG`]0
%-&DV7bCU>mG*D@qpqosGmWA(#;I1YU@ec>>";+7^-2NFl%,tD_`+DXFKuS[=b0Uaq-Yr/VOL*OAnVsc,r:@&@#bS`V/bl2ka_G:h
%Xk7ScFq*9a`,%Si=TVPCa/]Lpa1c-`2CJRiS+,RZT@,l:,DL8;1;?#e#)j*=mJALLLHPr;mkn[90*%3J!;N#(h%HimP<[_$,ADo-
%<?,-bnPjXHj555!b#h[Xeq.$135-PVT_9[rW%3gs*a3[^n'?C>Dm26)ZP/1#m.(OrSUJNl+]?WB"8:rk.G%iRIPFKeG!Il-ghfE<
%i)RaR$=%El>U+1k:bZ@!6ndtB\,ghn%YEu_&bVgu&%0mf1CqN:)n\B?E=+TL:c$Z15XQ)J]Ec)c\2.th6BbOhBu<^r*.B)7Pt7D'
%A@"'gg(gkI2PF_-dYA/f=O)\c9Wc<S.pBrA%!^s2/L&S<8aD6FYSS!>I'tF)K$1U>Te-]Z9$Mi>gGQt?3_:]Jf>`oNn(HJ(9QHSi
%,A@j`As4Yp9VaE\`:?.pJ.^=eGHl\q10aEg\cfVun3l6E_>m0fluTLfilKH>!IV:#$rVml2Y"8.Y'$0:rD235>`r6j`5QV@MjqNq
%Ce_H[:W.K&_0_LWBXL^>Xf"ZO27E;6IBtGSGnjT&^31j6)ObYCH#jKS>/XLWI,<G9as5i8!C)GIS1_%>X9$tRL*ICaPbAKi7-^T)
%7Y#2'f,"MDd0OG5(t&YXfJ<ZA!3=mCSM5uA*p0ui8@GA7KEX%_!YO2VARISWOF`r?OT8@>'b8qM8?cO*+o&Ntf^*].&^SZ2@*-dh
%F(XUL1Js_U$urAGUXoLo,n1BFCj>?W5)]ZuX96TYl'ZFC])U!",&WB.$1O\q@G<^q^F+n=&A&7-#Fbum*01eAG48t!o-S2T0PLGH
%ZDnbF7`/I5as;,,B]:9_!>6PDJtWJ%:HW/]KYTMZQ_AI%7@4\RU-+N'i&c-$5`3SslSeEUk/)M4*hMK1CiE$;3,j&6Gc(2;;@)WT
%FtB@;mJpu/ZuW7=jP[8E"dXVd;+n@a2_,,Xb4:5mibSXWG50_u,cQG!j_$4Q1D_Q=i&c0hiu:(/7L5(qmGI_'Oat<a*7csjk8FDU
%cf#qV@3#u8,Hl)-V"YJ4!d>[3kYg/H\e(dgA0K4XI.BU36K/A[_l$L<k>?I08"/h%aK:';"$W^t;p&^h\;s3AKAp1%mSkBGhs/[F
%QiS=u9t7;%LNGiB;8d_;JtY!qNOtgO%B7HbD`U`4A;GsZTM?#iM'&\MdYc5d270ghls&?K#*Q-`g&U]<3-C'JWWA\RV.Ukm6L2$\
%Yn*N7e-G,H)i2M?efmEiad/api0dZQ#jUsI);9#F(hEQ;U&mQnBK9RUC7mSkBfqkA:a592l\RHpd.m.c/<";sXsJ`@-MX"K`+p-5
%f54!pVn\$E\2f2PZU8uaFNP"2;e<l#%+82<:Ds(/"&ChF18iU^PVnNnaet(US!;a-@3H[Jn"=)4*`Oj3\dO)HVp^QPcfm8h8Fng5
%]F\=Rr&bLZ"H?sP1N4X/CpZiO&e%ZSAlZ(k6$Ne]kF20W5sfC#c[CF2d+H8i%J>NJ!]]EU,_/SJZZEEb9k(>-/'l3N&6+!m):k>T
%%9nkAJE^dXBg[UY[7Ia#ct+<8$\t:?M$mHj[RMAA+\L\=/9G[0Xd9#mSOqq!^CB*2KOHa.)#;8d()eX;*"co+p.<M;'-TG&#8&JQ
%)Xf)oI]JX02Jj#b5k?1"&S`u>j)]YilAhZ-AYU9&R7M[/!uNft,cV/a'+eF\>/R"!KVZH/!c'eP:Zu&@(Q623ptV>u*.`#XRqr(=
%BL"Rdm.Grb8bfd`73(u7&HH!6Q56G)@2g\WaYU`E/6WWQNrj%YMqA`Pd2RPjeqqG'A_/(TZd:Z#Qre+^JRh*qCE$-a0Rhe(JAX%b
%K_Esfm7K7?n$d"Sq?Z'eS#B%K6FPVmX_F59JSE#<^s=BQ&g0>7kePU^ohE??U0rr\E+cY]/IY1Oj5`!-)@^$GM+mld=K/,.R(9R(
%"1hq^'qXccI<5g8,bh`g07(`5(Wf#fqi][G2UHamnDcSIbhMo$MCuSmqi4AJP",4X4K1li-:1E^0Y=!pNm&t*gj24*&^7>(oD2!S
%9='5jN!eQL7nf]np+hp,M"u"(UGG<_#\X(X!d,IfK(L)$?<<R/d'>Y]i\Z;XlNt`q89RO.`Rd!;*'?^MEM%<6_1=KEjmh(MSp"q!
%.[lg%/JM#Afin]*3ftj'VEi]<VDsESCYHcY#UH7&5Lh`U!\P.<&W?R6GV'T=R63P2*<JWc0aU3P<lmKU6JQL\aB=>=oNGMNa7btr
%U-Q5THAd]r`Q]h+[E0?5nAI\/(%0qoO5e>aK5tpYl.DqZq*B&DIHFRLaobiZS?e'F_upQ1qSGlFhtcJ/+eSn/,30rRmiNJA8Ml*t
%@on3H&LSY\m];Zn0,K2JZ@uoF\[&M0"A6Pu);=6f#U+.fK]s5.YF#^:2iLES\!WR@5`%nG9OL_3lkcoJA!\#['LYkD3^6p_$oo<O
%U.kKBmZX*lf&HE!o=TFSJ%C\VLq.m13/lT(^-D=2Sra$b+lm2Z6n-==&=:\j0W`!>MSDUt@@PLLWT*4f"Qt_OD;c1=bfQr;Y'Jee
%h9-$U>Rm2jg)-Ps(8RF&p'n?EcXSJH&8-p3aaFZ"#5u*C_bYdSBI/f[*&ng37"A<UD1H08%uK!Y#sc4H!@U1X:#OuhrmM'g.Efg7
%%QJ/Og[I4=)Wu1NZj!pL>&D)VRsApf*Y&"3NgVp"1T"L%BYe])2jr^4*F;'gZELkO.>Z[sPne7"5:=Y:Tb6%K6^N(^kUbX^pR:['
%`:k3(#PH4ko&i&,?o?#m&R!BZId42pNYIT+T>87[gosF1dLR8`!o\Ka(I]?(T/UuhLV7[Mm+^\s)(5Ls"gQ[d5eJ5q:2'i0>euIH
%N(@SO:r:J7`Rt7^2dC1/X:2E2.XlM2^c1UGKZk\!^+#FW)PLQcpE3($4MJA1!.q0BGA%#kab,G&Hc3_UJO6N_,2:m5,r#+BAID&%
%n-4S.ILp6!.Xb'/)J5a(&8.:\TJq.0]Llgq";reqq%g[DTij]S7o/k<0@,Wkr%q+R6o"L@_LkoG>&!b=]p<<6+]lbErSqbnk)W1N
%nrXNI73Ko,h';A\(%P5Wb2<&hpan#e5/*5qi=l#kVY9OpXgB[-4apG[O:SG>s/io!V@Eo(JOGg95J1qca\mAJ?lPqna-4aflMq$s
%`5OHY.1eEsPZ+OPMF@_X;^k$^ij[#H@[0[mL+`,<Wb45k5D;GW%6;<g@^J9EfuKIqE=!R"_"Q1V.Ccn""S,?;$KoV\)6goUO$0)>
%mET@2AJ.WujE\hdAN*.EF<LUjSrD+hrVWb!s.r`$i\_P1@qr?o-\ub.0`p%!1P<]WY3"$!!GtR^a[%tt)AG;[iH?R,QNT/OE0HO<
%FXl]L2T]&W.^DS1fP?4Rk$-@Gc<<MAo0WYS+"'laYQY`*:L^urFpX+u3[7$d#&['rcY;\F.o9(C4`Z]n'kB[9Vj>=/-0le$gh,@H
%EF9ZU&W!)m/ME5N8CM)Yd/G\FQh[d3,,UA&"9mXODdtK9UbZ&'-Sp]gB`YMgb!(t?"Ap.[#iV3mI+WRmMb%g1co.[?'kr0O_W'A3
%ajAVr(pt\7iIKV?fTS5mQ7E<X+@mVcHa.,o$q.r\#NGr]`qlOCi!B$,lks#`3:V]7o)][A_CcH\+SKOZfcMfe[tKqYUI,:Uf(X%D
%&3mPtiaE.t:(=R,fG/6D$/!DYo^0O-W]f6/+F?Wg?U3lV,,3/0n`YX0c!CuW;kbkgIcQ;"e_"SfiSB3olGL,i<t=Pq"lF:29KY6(
%kgJ+^1S1OsB.LepT*!?L.(Bl);qZWf_gTZS]9f1m!iL_0ncsmOd5XE!Jl:6Z4bXos\IrGgF%Voo=:eUK`'Bj<h1_P5#]b$kK<561
%1HF6)).o)i"3.LM('^2QE.V5,#uO.n0%jZ<3ri<^Jjc.[:4I0N!6C>+7,XZ@2$RNWFXr1V+.6A4=>Jm))5qr!5/.S$!JgBA]3l^8
%5LMGi+]h?gRl.Q9L2!g=O?3\!:?J#Qo1/J?6K#ah%)N;/l(g`,*J1a<p1m78Kn.'XfrkaCIu<PU,%iId-922aU<h83rK*"&+cQE1
%PkY8D1-?13o%DD3SdOi`P<b/gZm2$s2OoNk3=(5HC`&!P3X:9\1U=H()M^*Y7h1o7$G^[ACN(='?.ikWWE6m>#UB!bH_X-R"[=c4
%1nu_L)rgbm$I&K@`qiFc:\ED9.rrE._qP;=&`+4DHu8!U%o-%CYGt#&HX--J'<d!.N]G&ar2\Jp+(;g2`(o?]WtVusl^9D'^Eq#[
%`?c]cNs%on6oc)>L]jup#2T9sjD5NN$t]`=;TZ<%L`BOT]PrRd=24i1LkaRmb+`!.YRE$V#YaiE^lW75`u`]M!feo]qI2C.c]^7#
%8!qpGr$4A#T=OQ>I'o^h6lK2S&8oPIJLMF*K)g:nec<_eJ"UUuP>Lg36jSiSk,TOqjmh)4!jgiE?mH1U@@sg0/BBc(JpIPe*?Q"A
%[a6/2:Jl*b$B,(i`LPUN/jR+)``k\4)]OeCmi+Y<3AZOYQEP$?L>@TIhh1:F-(`tf*%\o1Zdfb[i\$9;(]9*u$cuup6Dj=#Q@X+(
%k(8d[j"rTd<k44JLK+gqb3^)&=2M["APMEl21gJ(Z9@6b)>labgG9TUFOQh8aQUT]UY2N\<L*AH[VOQdS6\L&+2r%QCWOQE:-R>g
%#NkGX#0uU>$`&7:Y-HM-N"b:aca5<C'#hd3N/&!4PedG)kKo&a7B!;f)=n+Y3CFA.B[;aW/Wm/:fOs:_>g%cqD'uKgj`L&#f]hHq
%f2%o1EV9P3N\`0g9#G]jq%Gp'C)K\,.aP+s;"JNL?uG(h'-m^?/'l$,-)R6G!rerqrqgm\'"+sSQeh>paOmLJ\b0Ungd8>B?31'D
%G93T)Ph/=pE"VWR-CW8rq'Do/]E8(B<mLDf,A^sk\g6f*^c(_-D]:SPJmo@pS[%hj$F^'i'_0[/.)0])"9CG`2Z7F:7HM!)Vcl&6
%HP+/NKir9DeAG3dTQ4=!Y]t,!Td_tI6C[-;anK,;Cdn"$"Jt$=L)b0DSra?Hl.ijI].!6=:kVN/I%=h#iD^f\4GFiCMkLiTa&)@7
%55D/U?D3Hl:<nU;ra!UX*E-AR7[XiNC:Q$CQ?tZ5@IX]b9=KI/U.-@+'[j/F-OLYjfPXlpktUWWO&ICQ<?V'62i"aKS09J:AOoI&
%H)-!pKL7=g7RWt.]o*Zu/rXP>pTP6FfrQs12)"5nZ.:Ba8kKi&rrpMhK$26WaQMVeCmp<r1lq^"027GcY<"I=P.D,T/$LIo'Q-ss
%b/8rPY5al>$VGHA"fU'EI0X,h*"2kIJ^qa\0Q%Ds8TVL3S[aK._pcG3OL;TLFM5b4M!,>O1?8"n_/_n)i,k8fO4e9:(EP*c$9gYp
%^;:c)+rqU\'u/?N#?jCT?]JhJ(c"<s/qXR%HC@.*;P'0VL:u(!VFcgi4:XB?58u\80l'4X3;-V#RelNRYdn)h*aP-h\-#Lhl#`>q
%Vg7A1:,MmAH1RcW`k!j!F@;(CUU(SP6,>_)f(^Lrd?cOn\M,9PNMGrJ0`2jnCu8B^YcY_He/^]'n`LhQc-YO@,(ZoKct*E&7sDc5
%7'eMP"Z<JH_$ZR2Y_>_A_2<?)dL*_MJn)qc<$R(\&hqQ@.%JL7K"8mTi>!]]h2m3H8##cm`90tHcu,qJS:^i.j.+UWPV@*s2Ie%Q
%!'&pjdLf#PgZ\fD[u)bG)@ic-(h(b>ajEi!GhA?&@h):<)p\dk?@JS5kpm\a`t87"kDWrGTii'T+2[0VYXmnaQ2"kN0g1]*C63Li
%@=hca@H/!oco<]bVHTd*a'd03%=F2a`Ic#&?o&<)Au)XZi@,#OT-Fong6]+Bn3QV]r++Mm#0W"oJDk7e43iRj%LY^S'5;(n+g?r7
%#,X4-qiDd.^F.;u7otYir/&=,3W5Q_2KtGpbAEXL7^S"bihi#$:ref1odl%.*rZ_mUPj_RY"f6G5c-\r+Xmm+@`!'$ZY'@h9-&gO
%_H<;8n"pQQMp$ra6C[sEk?p;R:Vg:42I^PE_Oel[,Dh$Xbl;*8@F$HV]@^4E.g"0T=RZ>n,$>g[aKT"d?q>DK(^i\@aGrtW:)W*#
%$okpXfDW["Y;mIp#/dR'G7q>DB4*oCG*Qd.aQqmXVPSnm+H&/m106No;A/j%AHsCNb%>LAV_SOA<ep<^EMaK3?;tb#pYq.`G0`:"
%H1Q,o,6_XM0Y@g[S//)PPA:M\?FCRe(pu4KVEqLK_s?jWQT"A"B5leL@/'oG0I>c=a>3Wt,V]!M-(bF4o?X't2:=?a(`R?%5AiBr
%:r_+JZHk*>cPs_V1W5>nq/bW<Z2!6=$lfFh351>m0I[U3BI0m6b9!Rf&P29+DcOf3DS%U?<U&PcB4.+T4Q]SH^.&,ZHqqOgg03;A
%:7U8nV3+>W2hBNL4_]Cbb&*I+P.0)`+/rgTEVX`H%$t(PY@uSA;ilF*cq&\[o0>FWTOookCM('(Re(eGaIu]_C'6JUT0>"0?53i2
%LQ\:iOOoHj@iq5F&>/8s-fA/LS?:-%U*\1N+J(C@m=6*#"m>RJOLE9`B7HD/)aE=a>`q!5UuU-SlsQt9o\?>-iE&0T#)loc?NE'[
%4l:0?gQ,K3R`<#=(k16M?3.\8s'dA>j+WnX5YHcVfEin='>AV[9QutuBf2gP&q5R!)6:J;A/PNQ[^]QhWWFT[KBSu/'On79L]KE=
%>MMms`.D>rZG&(r19)'%;_Z6,nSOM5Ld7Mmo3>iO-SW`EOr7j`drf1A2D$n:[-E!hU/hFdC-;00iA=L:i0<_=IdAbGN-]kbP"bV!
%UA:c^iNk!%APt'JiN:<b!?9OEYaI6@DU?+g%FPa>[(-<oP`XCc6aH[C:F-Wn!E<Q3W<5MbL+n`!F'tu2cbh0>`G0@PL3?`IM8eB]
%&;U`u9;*=eOF<a:)39u:V,MEMn1\KT!?j"fN8N#nB]\S-4B5kd+$&5q0K,)g3f_0%f/?Fb&u;mT@iRVN3W&^o.%V-V'Hp2B%A/Qp
%[0Ejrl\i*Tq;<X?mKb2O-5c[)D+Rojpo?BP>Ot6uaV%FI7E7%T'#BF6nHZeQ_?<)D'i0GQj`'0D"CA(C%S4>Ok$,MD3=FPl,smC-
%5qGc(p:g$5O$Uj=0B0W]UnQd76(*10CqpF3D<&TkJXK'^*/L'DWsJn8J6fo%rZAu$_jOC(j!c//MTq`Z2$K2**,q5;fSh(K!IYoj
%3X9RVe2Cp>D*r/'&,#)n3_&[*GR(p!_ehQ5=o(SEd,,MG`n3M!D0,Q(4Ts`#fOu/+`huX+N["UN^lii0#:"jF;C4)0A6b60Y"?\g
%CXJ62qA<hlJ@IIDjI3C7"p_GG?"U<OFSg=f7\LW1Vcf?o(F[ShNh4%Hj"63;l86c:R<I8rp,Cg6Rs%'s`Z7<?Mt\TsYIK#\jNf[<
%s5)Vf;1h46q>'ROkiMUsE=A[h5Lu=Y*FE(.S33Aieit%u/bq4%nXN=WVuCr-=:j:hs/b+jUs5M!:G*aQ^I._LQ64mn53XnrL+hD9
%N'Dd!n:Do/-tbF9q3mBEpL>^Cq`i,IO\Xbg$g`Z"qtS##55s*aqsP&upYUIdo`hWl)A.ZFUZW/jp\<V`n96KU]Y0t^X9)(=rSmB^
%o&fT<'QG5`=@pt#%1a[J]`cW/&h)VH!Lih1dsK@2A,Yi[VZ(tSgOiaa,^XmS5XDVqZPL0dc9f&*g&9rJIKcP^jlei,2[@bUi^gX=
%YN\RRVdp.Ucn#$#rm&g-%DXKbg`N(>*F53W5;1Lmp:kmsji_&>8q%I3(b'pK1@GN[YSB'\91Ep\:Lk*%2L.q(XlZ4$9fVP"'sQ0-
%DcMl<k1@39=/XKpDUR0UX[PCRh\-N&TR5(@961ACU6'=:H'H7Y#qsT'.OE%/."`:sa[#V@%>()iaASIZOo2EBI*GAn*I!s'iS+`s
%hAI`#PE`XW8mq!lR*@hrh_5lr,\4%_WM&j&G5QG-(D]fhp=]KVia+E[Z<Cn:"=_STrEDYn8lBdo\2!u?$N(VRputY,nlJfKgJNM*
%$+G8B%ItD`"(Ed$$h-k3N"U)a.h*AlI5OUM!"OiQ^krpr^&t\B.hN+M#7_TaU:=iLb:pocI+bbQp;c/r(WN=%=7@#<G:!$)F-9*/
%.?/.8U^/u9D6t7^==EFLCmYnDf5Ph8g(YtrflY>AZ=LdI5CV[PSijb3"sF:ie3<&U7.M+B%1>.b&jEdC*'-HCN9`R@qaZ>LM[rc,
%+6B.+=Xr[A0J8e7=L'1,CGWKOHN-l!\ZHn@$"SNof2l(H:uW0<ED[cQ_\:A@!1K]Q:_o3X"X.r!,a8'iGdr]JqoZE"F:)V'$RomT
%Y"?]kkS#?[^eoGu+]Abcl8a,FnJ/&9e#YkVYk'KiO9^Z^'X"7p<kX:3Y&A10-rk$r<[5_Sc]=W?aEZ:]oG"<U`M+M-`g8/-<FAMe
%e^X`F]?0RcSdX\FU"X.S4e=sQ"q]PKj1S-Z%=#eV623K#5;=GI=#Q3r?<s]+U0EJ.^Un<Vh0dJNjiXo$EbmpY'j!+JaHDH4UPpig
%\T@a049lfiN)T.kOAOm??oWM0/bW<)<(WTJ>,.=_:6:K@7b2?5if%?TDa_>i*`=6=+PbNd^rSpACrO?p-Z\-ucUd:6+k8tI[!5eD
%h^E-rgE@<SQ>mCH*?n-]>Y6OLe)A4AWc.d#*9Z87kB-pg1/rd73M;Kj\\qAohA$4/HKPhS`4:sQQD1I8Kd%Hp5;KjdFNUP>kljB.
%DtD!(r8*ToXjD-YiB]NgWTCoMHK)j!L`R-mYVL[7K:c>)+"itM+K3iu6#g\[O:E5GYX!!,7VhIR(lG,,>^)G@`L&'M!QfVn_74%6
%`MnBM9e<TRhO`j(Q8>31&\h+n>iRT=aT2B2%&3H3+'a'+Al0)8/V$o<9tI_JU`2Nd^RK7B(AaGs*2tX"OH$.X)/4`MD`m,B/n`XP
%aq7kqZi9<Q,:k^*'TkW@#\*IgR4!KQ%G.lk)kd>9Ftkto'^6X:!Y[Cub&B?OTc+Ft.Y$_cpN44?\;CY3]0sjXV\6G$*HDi/D*$];
%1h@qk-U>`sq*Ua+VNZb@Ai<ue`dHnt:D&gUjXGd"::WfThg!9W">u_?(dSUd4Majr"bo_2)0_e=&Vi$8N0<_:1Cb]qbNk^jEQGIh
%fBF/c2]a>&H$mWBTY1d)B,hNe#DhNg3(VOIBc7J&6FjMTP[""rjYl#]eq"c/Y??SnSi&t45.buX$7q6::Df')hNhcfU*$YA7pG&?
%Yt$8U*+UsqH#RTN[PAr)<JQZb;II`M'#s,@8%+e&qL*.XgVNoL'kI%+TCn\sPE-VJ?IL0,Z%%GnDl;H+s7kiKI_PpE6UN-BO9+oA
%&>su<$06_pQ+uiNnXES?I:sQaf)#=qq-A^cKj5tG]_bidO8#d%s,Ho?i"0%IO])&e[WipUOl0,T0&o86?S;Yc3PZVm9##9RrVJ9$
%jID?N;qWhDoo!hgf/#$=0)Zls/Rk*/*^lUeAC+\BWs.O8RiQ6.raK-I(t[Z6EH+=Cn.4\eYW$XfM]CnHTk<?scZ?6'Rc@7Z&$;OT
%)pZEffZe2ErYObo`OYspS4a&TNO!YU2!a_F\F?9:\kj&mX'rPd-O&X7<;M#Ykhh)6+i6/6-#rnC>CUk2L$)1kEr1Lb<rPhn\*%YN
%]Bu?BS)BB?A-Ir(968hj7=fRh6E%Y;U\.&#86GU]#9#jp6bt-<7O)oH&'#`JJn9NE*nQ?F5f^=;)_Jp\$;O!JQms27*)I%PocS&t
%1!V!\f-o[J:U]75IB.Y=.)*u0SN0-'p2,MlJ2<1^TOV22892@ef$O#jgCf'*;&J9$+noSV#N.(F4=h+\F58IEGmrW''VVfE>c6"-
%KZN'+YZ.@iOBlBpTLOZdcp:kCE3Pga@1t3-h5NL>4'H@/caDYs`LF)_1_@A6-otqsMG_9O&>L6oW\d.LD&,-I32=4jnkakZ(=*?@
%Ae@#<RL;eQNY%k@9Y]ft9bVfYd`b2p-P7dPQBJ[T@UlgJeL3.BADbY)&fKC`Uf??m0H^^A5R&:72ZJt+d6=]bSjI3QB_"0@3XUFN
%hfOqqZh`,$,,R*afP*SXJ]&dPacDN_#B,KWrN6R7BGf?hbdWkM;BIZdoAg,fL1E$W;_)ME;M;B<[6riKJ-!_Mf$oE?-&=p25TjST
%B8B3S8@Tm('H=TanH=\@H(dS(Nr\E=nXu>&iiN)BP/=^<@HUB()M:]li%@+n5WTH7:P`V41SQLd9[]kL<8_d$=9e%3n_smpap43/
%&.FK.di;ke[6p3DbmAR'9GqRZ(3!k2r7HDHHBbjq4@(u#MZORrl&ZYbk=0`gEYef=3bhp(O@Y2Zd#]KL9b)dcbf-st:3M>"*4VSW
%*aj`G(8oo'F1sPMr`bQTD^kYW3H^BFPk"D+4P<ksTbMnG&%Ct($?iEbH)M/aGTmZV:l%_$e3/]*5ssHQ+>^ep\iUN3r^EMbpF$%_
%]4I$9i/Lt6-impkMp`ag:bnGK\%Y^#o:%j!?DB;GJr1>Rr*.)ur2P)8:<hs'I)?1h+M(rsG(a5m%BjP6^GgG76t1KKAafkZA+WZl
%n"G&dkI7-a[IP/d=scdfLu_MY]Za7bht+@*Ep[9(L.<)3ORE=_9a!G)+>G;B\ilNI%68G?:e2$-7YilFP-ag1$SofS./b?V[R^BL
%%Vb4HG?ZMK[D[Zj(N:FM'L]ff.-#i7%#Tom&JrS]HBTafJkRc\TIGPt1Pgh7!IA!k#7bokB+E!#eV+pBp`OR;7MTb^[7E8a)YBVW
%o@HX\HtN!IOc4*l23>b2oGVT"#)4N;N!d6m>AEUMWK<s7E>OdY.'2cqe:G7o!eMK8-N_u8&DMb>#hh)1[@mL-lVQ4E);2%,-mAe$
%7jKf*W't)jS<T:1\.euhM!4I6X2N(h)VQUVJEr7($P`q`+KD,(nIEtmOcGs-8<=Xs6Cop$<O@9+5+ESu)<Q&Y&rC;)iPGtqBhI61
%&4+C0,'epO<HnSdY(<gQksI*S5X4:$?9S]f)_R@ALGj$=o1W*<O>?..3eGf3E8@?R(WboV<=b;q&I9e>HB"@PTnuE2P</"aTh@q3
%W_K2fOGYTk$5hNd\)g=1#5*YW(VO$<KMSUKQ2m%%L,U+d7.cPI2%iFfKsNW^HVdRiPTZnPXF8[83%8'BbGp0Dd0uF>EJ-@"Lo9T:
%7KQ9u.LUpj</)gJ@8JY3"'pc13/&$=Sjng?m4P^.d4!0GO;*X.\CDsP>D`>H-8t.?p)S`4QZSP-4U;==._rk=L#Vp@pn9@Bc@U(4
%J[&i^ToO-/^e5^^0dmup"-+ieCm:"c6tAtRA,;;=VFdsVXu\UaL'tpme?Hdr#FA(,;.ro#&2lQ0Ld(HI)C1/36AG:Ea%4Ud2t"ke
%mQ+2rl-N8uHpgNH3%#HFbf.b5g!Lu+j<7LUj0#)C+a+)>.liY!.WB?A7cnnC&.\(7q8jim97[R],hNLB#TF.L5cIt`)Q)p^ThtY=
%X?dDj!L5!LW"lf]*De.dL-\@?AjJ[EQT>_'G)/?t!S<qfjYX@<.>65c/cZV*;,DU0)\q\\>^RJe`!/e;lD_iGdlrX7U"DC5kh2,+
%5$\B2piSW-c77ps2*E3)!s7+oV*_!B!S>cB?Ab\K"j;kd;08L6HX%QW"C>\"X!t,n`8D(i-s.No93E+<.&;9&h@P@K?l4-b[S%(>
%Q7d6f`gqOAE_n]V#h9=?bqKP-)ppnF(lfu5GYier3urpJ_2:em*W-H@<)eN3bRmp>!&7m;2FAgAd#tp8>XU\W+9W.6ljV;>=WlD'
%#QT=)cTir2JYb5758)>uH/Ii`BSI'FI2.sO(YW-4THFrYB/?A#&UmTb=YibU#]q=-K0iHCEHd^JQpB>?h3&:::0'iB9(>$+OcAm^
%2_DK!C=&T\e+q'Sk=$-liJR9E;#2nLF!3)rZA]<IVejdkA/ku?6YB5@7Y(__mg5I]E4b;V1ZSsZr#Ls/0g6g94iCF;&qQQf8AZFP
%*nmuN5N+.Wm91(75N=k(NU[toPB6e@>RZc-F5;lk>#67i;dsCAO:f#Ga;-*om[$3A_OfiZ4%XWEgr,J`dU?VkLYICtGqY@n1qI=r
%JY]=TiXD4Ve#?naV$gsCBq2B\6e=B(+.FN_2>+/@)^[fU\fi$:+;3)I"YL)6*(##$A3_D+iKA@uB?7uNV"i6.0o3PS:4sn+#n2Ms
%\\(ho;[1>Jb[AQ*ZB!AT[ofJ45MgW!;H*?'-77WaP+Z?TEIi5Ximq.2%O5O[]-%VM(i]c='FIu1,PQ33Rm`YlR"(;S'*)6Pn<+>n
%0Nq/G6f7,UKt-/S^gpbc:[-r0f,3tijN([N"\#D4>dOo/C;-KQ+:-1<`5CgS*m4.9+B0#=182VhMNVbDZYq,&Te9af?W-Em$&H?M
%Q/&\#U`g>\c\93@mMq<EXohBGR!+h!U2dHC-GaEE_<bPMNg&*?<@J:X.8[64MBO1Vft_'h5u>#@1;aNVigPGWbJfD$$Adus/0-I!
%@/igX1);;n&=Mq`>ZVf]):8K)'2,r0-f;SV1mdDR'u7`):ZOrF]G*D=U_sl38jaVS5p:TTHjuHj?d!lt;lG\DoB;!7"Z/".#@4B8
%T9j6-kF&6qk)DSbFtW)"Godo+@:?_2k!2I`l[gt#2ti\u%-M-FcbD=oqu1[-,Wh3GCsaR\MI-gH"0B$u;OkBZmL=K=%W\di!NfaI
%LWs>\IRENLaN3)%H/cts/fD'o\<[iXghVL^?]Yg")i.JI#2Ml+X$0a\d\j@i+*m]SpQh\6!:Kc&K2Dgs7mG[K1AY]RGqH#Y_^J6V
%jA881*Gi"4W50p''S./(*qG)n!]dqON1/ZdTUT3?e.p!d9Z;[6"FVI*1.$iV>X>\QU[bB4[e8n_3.GpDid\)B(K.e5b5[CsHPqLs
%b?s+4Ig0gE'NTs>kca+8L$C*X;YLF2EI:(n93`24)`[FU$JW*0XpPPP\G#:0/V/B^Q5@LXXadUg?S(X^bPR>]\:-tB7F[FF`_:WQ
%E1I#CkK*+1V)]W9[*Z+4:YHVS946f"K1Y:e[DY$9;L/GtAQd/NJA09*k4BrsJt&BLOteI=BC_qkdso*oB]FDMXEo-XO!HH08MYDm
%8_1/gG4LA6e)HfNdtg0?KObr:623Ynr@8Gfi??A`3tgRZlo#C)p*g&LR=V(-_Ea>PiQQ*t8K?ND4^[>:YgHs*[cf)80>a3Ga/Y(P
%!mgK/2(2n;)#AeuJDsj)iU&n*lBuhX:;R!RK+1@;Q'R@+P7_73KK!_"K_B3/j/gXZ"t1&h\+15*\hQeX_XgVK`ALMG"%lD5S!-*Y
%gX(8iR^Y3dc0,.\(:m.RZ-#igrKe$nInDumS/b]o-I/O^O@=G<\4",j>hO:hoPifXc@Q_VZ)(<mL"jngh#WtL5k.fQ%<OkRJO<BF
%jA.Q[*^gT;i"OjBYpZYcS/Q>l`\K+%Spch^8AAu*D9%Y_!Yt3dLRGV3n?<*%"L!:OcKRY![L8!^Sg[_&f^0GCE3Od?X_2JZ_RCGq
%aZdC@6f`EJnVPlC[O)E40!G0N#;;k#A2A,p:m>"7HO$R@C-GuqfSG3VXk)&1""hmL)P>91Dm;Gih8aWT>ED9(npq0m!fW4d<8`a9
%_;Ru$i<S=gmeMl/a*+]l%e=MT%!0EP-aZ//Vn2-U@t?`_7Fjahn5+B:5:$.<3.`Apeo1He;F'b"/sjZq3Gj2<1R=:mCG&RYKnflH
%U!aES!o<=uKI7t?\On#-M@FoF#MQ)Z\2%Ce?e/QBlP2<O%9nk6OBg*\d%*Q#GtVPo`.#2$c"2U1BLJaGN1C:j>r_2:PsT7H.*p/h
%V9_29$$<mW?=Yl)Y-F*-.^EJ"W+0SK^Tee?M9GBbpWVIsg2[C`"G8\L$%/,r&D.L+IK=\J9VF<[MNAV2fOURf#;(MppRg[J+"+c9
%Lq!OQ$,MIN"nHB]R&)Y"S`,fWfah\D5/1so"]b'KRUjqL=1#tFKX=b=YS=5[gB?S==e"G*BEl=0][h,%cUEQ.RADpoUCbjU4GXQ_
%++0Z]bA6\[lNE+\LWPEN+8XQBg>0)6k(U%/5=8:Q2@&@*q,'I,%GcK5fU6B",bRPQ!dme5L`c0hj7/DuTe7t4a_:O3Z&](^.^TIH
%%J*DLnXAIsohgOW<&qa_"2pA^`0]`?X^LS;s3:6l<3[0_$2dHNa%1>L#^6&U+SufhaH4mg.;/Za"u<]Es++Sh+28[)'r[lmk.)FA
%;:6-s3)g*)GZiT`9An]]_hDD^2k0`'5C3=gE5+BfIiX<NJnENJiSZH.k4]jN9;*so906enr7c0M'N7rHC[Znj38?.sp\3TbE'uLc
%?1e.u*)?%ARXcK`MLEbj-qnnpCjqJMQ+mBY^TP!2o=pg1RE4:m_Ygh;)fe<]d.<11rAjXW+C7b[Qfi:](a,"1cbecBIs^A,@om^3
%pUu+V%bt`#7(sa9\M49s'Kf\=JnJZ%3=XY,[5;QV>0sa&r;MiAEU2I*=mVkJ2JWGS9#5l"ac)1;pZ$=qES><&mJ/k>m_\dea/,FM
%KB$o%QR@@Mq>6Y"r<Bc:cf$DCgM^?"jS%(M?FeiUQ-5;q_^r:#ONW&i<URD&mV6Xgb=1iXdu?'%UWD6q]t](qkIZKB*A=o/4?`]j
%7dcL[OB]GXgp*+W4>sT;m]M'pqX\uuGQfWD0API_eB=TGAKl?P>Y4`gjGq]I^>r5R%VYPB@je4QDR@U6h>Z:*DYd!3h6Es<9#D7P
%gOT$2+LBn8ca#VR^Bm"crnCHk?A!I*.`4oZ%*"%ZIV=hZQfn,=niYYsPjQEG:9hDEK/u:o]^59FgX'kl`P"b0?<Q&6Mu+,ig_"-[
%Za_6)G@kh"oZYO>2r'.:.kL*GI.teC?<Q&"*PF7^jr>HHmq?hZC;#SUh$3`9pUB#T)s;+B_7Ne:p<q`U*fBLd'_R0k[D1MTSK*CV
%KY6Ac%(>E'KC*ZigVE4PqjVO&#.WH(nEuRb]c`Zb`/W2DXQtf,EaNkVmaq+SMc<['&a`gIfJT\qZG:C6SLOZ$LMm5Ib6)+ESrq])
%54"5b17^DKUXIKm]t](9.gu"3]t\g0D<U3n^Ld+&WpQD*8maH&Vb);^2:9/Ip.g>ojn2uINNNcLT9$>IU%L63pOP$?"Ila[`8D'#
%(i34AO8jap?'goXUo$(,O*FeaIK16FP3-=!qJG/%c1u:Dht9=fLaPXd=2OF;8a`K/fIOH.B6(U"BWR]<[X*PBCn^A5$,%Ur/((tY
%`2W"2r6]6R.s>"KB_fXi8g>9nB5$Zm/N1nEm<JOUn69=FoKT>tn0kuU]2s1MgLbYgY9@KL1UF\4]ns2=E?"jRa.`Z^@Sg]Iod9;M
%iEHEN(j]NaegoYSQMD;Nglj=]?ZK\Vdbi5!9l<=E106L"9HP3=_C2N9gNg,!mDgraVN))!o'GhF)499<Ed7.68lr%Q"FNfTj)OtR
%O*eKE^%?`smo.Zj5@$j7M^qf_Rmbi4mC6YTmkEX<T8Z8cdkR]1@cj(VJ1%$d#`M:#7gjQEloahmB3Hs/k.O3]Jl_!:2&XC.3J2-n
%nV?.js'GI-9O]REOb=..G*.ib@>BFSH\E\WJ&?-e[iuuPbGeS5="PS`NRqP7^OHhNZ;.,]?^ZF$7[p"W?G)e7cg7nTo4,J*(9:NR
%C&oute,K8^kdSF87V%&0I(pHjb-PE"ego'm!S;*6KW[jE+!IARV,8'HXU/s9QM1*7VmY4t>jUF3?@)daSq"9Ged(`WZ\j%-DO-=U
%6hR9mTW2dTN3TD^ZK@`n<O)_E.VX)G)2[Y7qo@G`)f/GEWNc%(rW>\QD:;Z1c9Pu]14u.a<OEPPA:W'U]-M,'%fhTt"WJg3mu$hA
%(ukX-i32mDSs2S7qW8mWrN=h:VcqMIkW@W8omND:i"mI@h]tZ,lu(O&[Li17-!k_\REHN>n\mT7\/kn5(Zra1[qXM/qdT#1)*Q#\
%HF.6!<_g.aJMs$4%f694ke4`boD<D$UR@=JH4f].UdDPSE]T`F.?7_&XT%*<6tUJJ[PEi1.SY2s#":Br#D[b[hXtD)Qe-WKBf;`;
%.KcB5&!?:^qu$#f%)0%0QP4ta)hkgQ)V_:&[@l7cgY3UA)6JJclPce8s,ugAIJSWi"G,_D=H,f8D>L.fCHJ,\pHY,VTrGb=B]ZPm
%qD<:,8nK8-Q?6eQ>[/N@h)YnkJFYI7r>H,D50AaH%kN#*aSap7%>ur^IuWBFQulV.ka?iYRNI67#DAd"+H9TB0I]:+L_6oNMSi'U
%hq9>[p5/9uWQ8BK?0L.hjQ@9q's5:rb[NMGZs=U#-]P%%H[W'RU#3WlVDB3.+0YU,9+fcOHO9j#c*qduER8YsW2O!jF00?Yb]L#D
%m)YmR!-SV6K=7;m;#=Cp[iZ"l&*q]0M<7CfcMU\fJtYAsDB;<D[n?op980$W)c_jHrSsbEoI.2'ICrP!dT<`P1eKrT,>%=E?&d<0
%YdH>_A_X^4]Om&%(NtSbm-@-kL=hUd98tJSK-bFj+C#,JP\@omGjFA9[F0-2peO9*e7N27]n#f3)8?Au`L=V:f&CVp_L&s+)+nZ.
%UIX1uV%28Gkn11sc4FB+!SE5<=R//*Ag93A-2[.+`0Lf`@uPXZ2A;*Eg<O>?9+r)S;:SEXacKr@k\"?tL9qQA3"oMbl:t51W@cA,
%^XNgMNS9a30&^rI2Z*+5FO5lsZ>H@p#^0Cp,`?jQP+C0_O3lH?5,,Gi)`+e^RFYag,@?O92F7q"Q:Ia:NM!]DD'q8?bC^/1P0TlC
%Gl(sNH:2Lu9jFMNW<!sC[54cgL=!IV[2YA"+U;'U+lrLim_<RB<Ki>OJjON#Ahc37eF7"Kd79QKn4-\\8u[X'q;X(B8>*$r4qV6;
%XUaJta2Q_*&/@]>f:_H.WPWg[mg>j=X_It6rC3*kFT,jH?W<7;e]tlb8a!80a7JE5^V@IZqdVO:*V@j)N:;H>^7tpM9NrK*SLt,k
%9dBm?7/lOoZ:eR8/USn7bVt9Olq7G].B.u1-Jet(8V7D/[+4\A2@O^BY07@h9/78'auG$5q9]12o%&J:Rmt_U`NH3(R0st^iho8Y
%*@3'PB?_[<\W(&jcmqsg#I<lMV$UcT5.UUpD@A7[#_V%:P71L5h(X=[lnj[gjqCFH2^N>Wk*;QfCAP5-0o^61L;6KB]+Tb*B?Q-g
%[;kFV`hD:)5XRtY820'HpYK./]WMH+Y&!CW#1E_p<$LCNr[Aa]M2WoVRVp-S&"'>0pt=9t4MZ,B7b-u?@u@6?q^>B^B/K8Ceu=/6
%c'gP=3OttpVG2EtI8Z$CN=,j+h8&_7^Gc<ZEHKH2Rp<h9jrR<q\"sbjA>mn&d2%^GeN*LEQAtC&&VhIh!Ce(Wf?RdGB7abjL9#if
%nX.V?T3Ra`PSY(&[&k(^RuNapemN^;C"(JrYIT:,(O[Gq&4.]u)+-I:/:5!&TT3GD9IW,4:,L2lPEpIk1a.P2QIubNYX0QQ4:\L*
%,&8sQf4p(Q#H+EHdkpoi8e;fid4ome6OJ%MD%-%f2O59X^3!JAQ&HU.neo<V]+5W;TSTi!78(O/K(,!95-[L':HCq8@+qFh>63n'
%5Ln02"iJd9*U#)XhkfaNl3ngE[o[oeA0h,OZqW>'I4@;[@O)`tG:)sM1Sh;/VWX#WMbX&UX>YGf6/A3INL9)_:F0ZmbFqdq)k@_F
%CR17+J?&3/q^5I6SYD`cN13"]52HTml't81c#LQ:7sDsdEh^282HlsoW[P`_OFo(1*J948s$^.)MDp>:T8=iMUlr;&a__q.7@86U
%q^%Bk+K(CAL3E&1P=mA[eWa&573ufB?jDs]H21B98Qi9kqf/>CP7@.34&H:m_S-m)97NZKNnIBu<^V.+-"aGo`oNYh`/Lc9FR]hj
%fjL<?*.l2Olp!A>cD2'UD$nO\4dC!l;tsl,)(H*#p9.p[J\n]>re<>H[g,pXiDP!7$CY`rA)BiJ+J`,&.kXPnfkJ$&2r,fPB3ROa
%&oHC3)eqcWQG0^/!gD/GNr=OQiT?OH+j8LlbtCp-=DhYAZ,)Mcki%[Mp1_Ps=0%4@B*un*QS[g#HXh7+(!'d+@XaLsY-?LTBnj')
%Mb'Nr/dLXMnQ*%[K%Zj81/.=SUlukgqr<)KJCe###\(j]V"NA`;Nr><*"=9!`g/$\/qOpf;W8=+.Z*NZSEH,p`2LpO/G`ANDsL4r
%V<X40*P^?j(i=F20Z_n-h;@;;,uuJ*G.Z\4l^5`^V^q*l%"Dt#-s`LumR-`0Vllp8&fMdYm83U<[G:FU->[96<eaqU\>ka'iaW14
%f8&bsAVpKs9WX1\F8)hc"u_/Z$)J6G/5(bK0^o.b66!>D?;[5$PG;Mjgi'^ML2$&.H"J'gC*tHDo)3O#>s8^,7>=pQC9*pi)c[75
%Pg8Su55J&?/^]+fWQcoZL04e*?Ggmuis+g7d6FoJ!-=$\%:i]8\/\;>MNmM>au,u!`Yj9@Pjk:BkSZl?\snH:i@lK\ir2i89h3d`
%Yaeg=hDPqm3kWW-;qhf\r+$Q[a/YAe)U&JO(PtEEIP01gC$iDRcHJ^##ua#H5>WeD#-2M\U7!>fqj%Bc6ZfkLCe&<Gg3X_?P0FKB
%0BP4&NdMGVdaI-XN_S[G+LI\iS(bpEZs-CI'5e^tF`a'TeZ\VeB["1D04)Ncl*O9>=2sJi9gCYXo>'.r?T?RnOSgcUd_*!;5An%l
%UC4E[f(H%rN/GW+7W*U85MDq4:J/h^138@@S4+>$N'/eE@$3K$(.h/B$"MIcQQ9ZpF^;dn/%1qK$^fh/:EZ9%M_7&4<JuN:`^uH6
%9I#-c;\10':3N#l&BVhG<O5U?K2"Jb]p:@s!"KF'2@WCg,bhR(@?eF\aJ.=4A01qV3B-CH.\<2dA0JCe.i\bo9+Jl-j;#SWVini+
%e7hU!a^KJp*8HMVF\rPoDmj$o78^;RZO-$hKY,nZ7nY6KW0hiY]6FUEUdiFN9$p"kS!qs"n]G_h5LKOR])E:N>q.Q2CTHbD/0ll[
%VkY8'ZSLAVR#``e;J'g\;2cu4(#L=,k?)M(lFUb$Ff^9DlnVeD+^?W-p1Zji/I!l*cb-rO`p*A:W0D)k@!*4o/.;c'K,rJ'c.'*a
%G2uG3"H`mMEatuRGs!$dY"^N<>f&BgpY)&o'4TW:YO3PiTu+>#LSaq%L7A'Om'hE-KQd&V+Vu[7N_HYoh-FO?&gYCm$fnK\Be*bc
%B>K?9[45^Pljc4DP#dWZ,G81N(n[G4iRNV;\fN-l8guYLCIkKYdT$"Y'J6fjr,MtU19fcCn<C?.l/9e,g4sf^$XHC_&NpVRX20rO
%M1%0J>o``CGrs9f7B]h1)3H7a',O>Yfi;c<%b.5k!+(_\h-q95)acAbK?ga_NlA9'PDp9A<+mb8\d*/EA<3bJ[)[`NSNbdpRPCh]
%QpKHu$\Q?9/-O4sX$J@HP-K:l[-qoXmJ]\QdG7-UrBOQ?LFcb@%J&/9IRW'45B_N\)K'O32d0n4[L7OCjk3s:'>;Z:-uj[8PFWQ&
%EsIT6Ip$k@L6ISaF58fh#n(>lAm;LB.q]C%RG&igN1]<m_/=^+9NAf5=A+c2nBl(F@=b2[:p,*6-(//4Bj!PAgHkdXrH&-/C>8]O
%NpXnWQh0$SD8Nk+AnRC:HYKru,m>VCISG7&VCZfQMsh_m;-ofQ0FrR.\7J71FD0Pq<6"XT-mjniRl)g$YY?B/5&GX-H"/+ND(B<&
%c\9l"F5LCd03B(sCbtc^S$n*qk0u(mSonmaf!'g?dZHRA(5Kl7K/PJ$];mmC?'?-9]5odVIbALA5r)sCd:%2%GioM'?[0%d3aC):
%k'9Us8=)p-iC7]N*f]KTqsJDjrsDOp`op!&KfEp0Y.+R/$1&<//lWu%esh"n:r.b]n6!`:HJ#5Lf]+5:Sq[r"6V=9L[)%n58:u%_
%=loUV=?$TklR6m=?LZZ>ogUe2mOf%aOQ_ReJrW0j`.V+YrcgmQDsMD?K"F@1s1ELcMO8ip?(7J9#obE/?0U[!Bc0j;8>#duq)WT<
%4ndm\5hm;Vr:@irNb_!<0"Z\<O3CH5))=?sKe#WHX#ld*Vh=9&2a:5JN`3K7'VQ]X::G1kM@3GHS\\pcdrq'MbC2]S>lEnTN'h4\
%;ho.-(c_llG/U)I-ep]TpPuGl1Vm[lD(Ep<#(;Xf4.D@/V\F/31e2Y6,U09lm]>2;Yi<\No2/9CifQ0ogI%$k7:Djp+)))ipR?&5
%(sl'<6W[,Q2jkl1!jFXp%s;]E\N_+rBYo=)Zf6-A79V[)q9JZM1$#QVBQJ=P"^=lEC;ahC7+ZV1>c/:p8-ZrjgWk&.^9,&M&p/TF
%"YiiOAjG6C\b;C4'^/:biuW>m)VH<e]qIG4Og5jc@T`!:%-Y?3IC^A>`f6>ol8E"9,GM@`Ak*c.?qLnb):]_iU,7A2PE5bYIn3\B
%FF@BcLV\K+^gEB?T1Xu]c=o493DW$rm*j?42!@h/(RS8$O0(-b4OQ3R<.ght`ORTmZ,RH7X3^(inHl,[Xum/S$,_:VgbJF;BINO8
%m+kQfZ4?Ku;pm`]q(m*RX#m=YYc7gRZ,O.C^@50#JfVFZdjfM5'!.$4`V_C)G!#kA;0T08Zk.AQqjrV=P4ER-qsQ\[:REF>hLmif
%lefJS>rs&G-hlb1Pn;L("L)>1k3ujBWOQt67`&ko4"UQ#G#[Ep3niKH.1-7C@Z+=+MmuL!mj(?96qLI-Z!?.oZmep\[lD.F$.5UO
%SUs9*.%=4VT$0l`Z6Ddc_lFKOK^"[He^.@Q#V`)A"i`LPo^7,up$j6*57=H?s6^6!NpO6t@,g)CiACOZ%j8NAVsiGA'P$r>YrW)l
%5IhAca!S#@4L_Db!"RJBQgJUT$GN9ii@jLMB$K1Oh\!kV=!0?Yi*5WBM?NTj2+!#,#HNI.bB4B_ADZ*Fdg+19'Y#$Pds:5:4V(IT
%NSDUo8,YbioMd]b0ZleW]9DD?ii1%kgm)li!u`]'0m9D`\TZTAju=UqV@eHp(YFaKD6?FIE<]q(-=Mtr:4d5:I<00umlc^nloeS>
%DrQ@Z&*YWu0N5q.QK)j/4..gR9ZMiLPe&`hML5D^6R-$\79Tp_lBN5,h9S[?P'_bb]1;E*D=UF6O_iEP>!4KZCJ>m]=SB;g8V(5s
%*rD)$T1AkC)T>=m_=(YEf/2`(%!p%g9T#]6.M7H%m*A?JYgm<7-J[m9e5$PN8gl%(3P-#Vl.4Xm6r!CajZCG6]?j>t`Lmo!H[g''
%]40eojeOb3gVsQ^iF:dWiUWmiZ'(0#,16HGa^PN8cBT.\qHU9rAr28H)L5(%/$^",=2CQ/bItEf'ju[[c4A\#$>#qHa^*M;b?)/R
%])+n;]n.=)9tqCPmpNp(=B6hYmbH!+TE^p2ZAJJ5Pn+Ij&k#HF,];lCj]qd24GA2uOf72%r*ki)kF+GG@<:ss]&F#OkS31q+hK(I
%J;DO_A*=%Q>aQ;""_G[7L%.,U6/0e50ReZ6CDtXX#n/7V*2?A+d8e-iPC%ES$+1#K*5@GcDNsunAijFW44:<52C3Ys[o5@6e29Bb
%(q6E7^*;kpg<j[.8B)d-:Wfm=iHE!&<0NLA[V3_A5F18OM<:X,&VEi'jdfU3K1dnZ9gl=G>EsLSL2B8&["BXUFG/>fqPd&G&6;2*
%Kc`?:%qM)7Nh[o4j4_Rn`KT83<B,NL[CJEqUeVWgh31Jt!$,0EPB=nuOV@@6iK<[CRW>(cd+1/QWs*53Adu^UU0BN+.2B!WaRe4C
%AR"cb]GS%t\33rpeF;F"X1.To+hQsKe_3uYB?sQd`d7KM8iA-u+Eql^Q0liY42/_=cM,mugcDeicIXn0//o6GAK5W"eYn:Nh8DQ0
%h4[I@>WLo.63G&U(U`"E]4Yqf.LErdOn(sLf,Jtnnosme;G]6$&J-8C1+:>gFiDmnp'`;mYEIPt<.1k6JsT-5<"Ws&n3I[Tg:*<d
%Nf\c!gc)uk?h%F!%7sj76T+CJa(IOYhZ^L/YcYBTBtC)[mHJ+aa[R_VFj0PRr06oe10+CQ(fL)Y=,>QkR-K;e:F^1;f974;/13_a
%M@+5uNOZ3bP)1\La1[nq[iV7/6V?6WDaU;d>uBFZlrag^A:+;H_`4Wc<'gL,WH?P.(p;np?)uD`8b?A9Z9r1Z:V=mYbQ^)[f7p=.
%g*f;?[-b;]b7mQnU4[O[FJ=3A+`&>Pp`%<1R#@@NVp>/oo\r:S_l"J8E=of!9W<\sp#sFRi/fH;!I0Xt;q',WU(Bl_.Vf*2@B'7S
%m$/IlIE1')$2M!t3B#4%'p@ul:AW%pR*M\mCAhl<Sh1tVqP9L6jcUS#=YRH,9+s%J=='tD/VY7pfC/[Yq`Pq:FG]pP9d/k4[ad5[
%P(j`7O5/KA*!ocsZOM(2'WF>8'1-/VK]LX\'GV.[A>tC(1WiD(#Y&34$J(Qm1FdLYkmn4:>,kjT_Csdi)$4\)A88iS/7*gSjaiLl
%&r+DlAQ#(RkD8(<O]s&#);]Cg/+Y*$Wi8<ub'm"Ol.,VF$e)[Xk"ute3ef8@9F4q>'cX`GnAadTIt(HDq6s^0)ekV:WDddf5@',(
%LBC;h?$2r+N`C'ajC'4<e`MUf.:Z9&U3f^J*_17PKm+MaEoF&/9PJWaDkb0OIM\G*=]!+F>*%]VPaE[t0$VtK&$l!&8lGNA?75&;
%iI</5/DD/N-&NS&>,^3"dl$GtOPMj!nrLg+23XOkb*f-tpP=r+jV7JJ-+++J!K%65Xt[=uVO<s)'0Cm_:A:Xq*;q]c]HYSN,SO^N
%6iq7I]f6cN-*$@af[mMF?T^SOg%]:&.OQH'>.lWNlKd3981,gZ5@.EU1VKuYOLHIQp'n;!UifIh:TqH:'kp2_$B@PCYO;mF5tJGZ
%de22#G>c.dm4R#.-e!4Th%k+jIQF'K%6,buQ3u.PIhuo9'bLSo`0c*u052V8Sec$;1M08(F>G6&h\OF7S[kOg'2&&m`iT'>=AP,A
%011V53gi-:i<$h&Gp^F;eK%R"ok"P.`>51A?S!>:J:`o7kkE#/@o^-`T8e33;C[rf&d%rq8f330$#R:P^h=F-H)8_SK9(1_B9.K>
%Eb^Y,Jp9>T[(]C83^.E)IPKGDl'Yq13ah\KE$AK]E5Fcq8+=nu9BZ39#kl@;FrtXmpnE,sFdL/#;:%/OZEgc9JMji8JmE#2ME;Fk
%6EOssk-B/!9Y%_LCKDXXI#r)QQ()a2KQ7N4k?=^(+qur[Lq9<W<7-t_(F.`hE-5&(^F]9VN?':<ap_o$.QM;jXn-oX7C?'s0q'*A
%[;_:'P*XnpTUNeW='5l;Y:J.&:p6E`b2,pSeBscu.%[!]I8MO2fr+>C5MhBNPr6sl/)\9n4P/(U1fYgSTUWZ?Q4_Z%&QO$T^IB[H
%L!S0+1B/^?g5X#*:746-Ub^GX@lCA3\lF*iK:HNg`h0t&aEu)$nZmnVnB2i6=:hqBc>0>B`;;&<OO@PN@9h_dKp.C3*I&pF(k&(8
%ksU%;DgJg`*H0^PMQJ]&pf>gQhOG8\/)u5%7Z`8f9OR47kq.f/IHP,LcP,9o06Dq*c4j%Q6d4rW,*;f-F^JAk!d-g*r,K>.[3E_=
%gqrB@r4K=%))>)A!`AUNZD+<BX2blUXV+5R6*?`nGE!S8fb>h<<U.j>OtO+^AZh^;QdB?-@AoE3rsI:-!F202[)(U)/q3sf#`Q/t
%deO=tGh2-_[=.9J40A,Zpu)juDtWb!*@!L^qEAE`Zh?3O_uKPu?QT4?T9%n#_1kE+f#!XLA8X=`,5$6.^YtrV)ZBEFr;>"S&"g2+
%d<!%+cd*^Y[t!1XV!"I1IHlIT;g&kHI?;d),(7VNT&88#PBut6US-do2u<:Yk"e.G]tHPb4A&(,gRt?<BOc<68!X_.dfcgo\OO_O
%F'mF67T+"oT=jZ#./"L@o>HjjW-H]Qn9Z<C<2qb>L&;5?IIU3c*3]eWEWS0qddpPO)7[$Le(67+`Ndu%@=^LcKM,aIM!<KbBaK\2
%lms]j_%2mj6Wb=83eYI0!r'pc^YKBDrr'Gj1PY:]2Xe^,m^XJ=TmEmF`00Dac'H-O#Kgg/_m:l-WLme5R7UJRq27!X'NYub@S`q:
%;Sf9uI4M*6(,$a"AijPJcD]an3'GQ\?5AfB9CS^^*KO"E'6U=kb&4A\GDF>FB%]9_Qo/rM:#P5W9<44r9YhH8m,%1WXSt[(([RC,
%Ae7sH[0V/j\^Od9ULVhi9i^X19SAo3ht0iuo+#)P<)]ZO6D8Wda/UTT/'p+%C$Aqk(>ZhT*,7ED0-X?[]tE3"*OO/,@O'_#:VA\]
%.]Ze!h!u5[2iGlB:',Y]DpC&$@@XR:>lM+2Le!_f'2OOldi'*OjT7o'Fk_e6%krD]'Q9jD17#:"<Y&s(6gpb:jp<A&gPM3Nil+\:
%VW+jZN(CAG+c4T:8Q'e,[\WJ@8D!.D-mf6qokXF'j%C_r]n"0"`gQe4#hHN5$J!Y',A3Cte7BfI1KF<>3.?*")@VuKpDVWA^,h4V
%XpBTp]^Ue[VPtb?9Wf,=U[(]_;$19K/*NY781R8nUgn>>_rPs:!uc!_\Y9kg6Q8fuEF78Z:iYt30/Wr3&eFo@.kF@qTV63tR\lmG
%,#?!EKCT]^;/%PK.BTdqQV^,Q2t+OT*r5EEV:Q"PBq<TC=kl!CViDSlP2i7/IVUm8P2[[l[c?f^I4o)'hBRfQ)XCUl&*d3C6S4'n
%Odr;=,T+%nXob-Z*IOM;eM@g6XDfVCEf5)#H=>?%@St;m(V-C`*GKhaN;`,)HeS>=EiM]2.RI"i;1t.KYpib7@rn5<msUeC]oV:K
%)l'uD51Z:FZ7>Um&#t!RWY02jY2>@D\D=X^nJ&N1[KC)"meYm7iQY<rNGIK7(eR6EHQ/7!F'Y5>f=)eElb1-_:Z6c;-<<0,B;9<#
%;BaaT93(8Y9T_#/S:dnbjK`2o_Vb]fF!VXpYU*ihS5Fb!j;b,8OBf;\QrZ=GmML-_LGZt2Ne8`c3?:/Z\?WB%(9A"2F`A-oh9lb\
%Wj`2Fg5fgs.j#O+Xd3"@>QU.VW\0f!R6nK.3RXKo8`e@o\+0*r([r`()!*shrmH1J(lDC@7k]3%;9#tB>1g8b_'lhp7JqU+_GJ[<
%mAI+]_!;fO2stu^Ek3\,cUm^*omp2%ioefTWR3?!d%-2MV0Sl3&GE$D5U=_C:4!?!ME2BuKJG3iD*p!LS\[6&V%"#T96sk-aC/dH
%d9A/.J,R%n0>6bD`h=L140Y/gY54t^flJYe:pVLX,Olds@)u:Z8Tn#NWhs.!C+GVhhe&m.lfg[(5kc^+nV0f@p'bdAV'?^A\%_fl
%c#HkIP613>[.#MF/=k4XWj-"M8&p6<GSOpArIAXhGR^L=>F6eB$5%kS+1qX$!=ImGd-aq+AQR669.6dP6mn&!KW2oRq;tf*%alj`
%TtPURl^]L@L0:'R5Zt;aagBrndj%sU/bBtZE!br+3DfqZpl^KuKofeA)f2]C/Jm?IkiE!cF(8Ihj?[miMXb`d?7!GZdCN)Wo?M6(
%+!,tlgml*cj7'FSo-n&q3sf2_!hE1fEHlp7U!\.2gh58r>],'60#._**FCkKnlXBOHai@G)ruGPO5gplgmJrnDt2'or^3B=Of'Pp
%&?ot^]?bgKb,A@.F<+2i``3bcGC:_r9VRe3+"_"V_2brl):Ud"eQF1Tmi+h+C,K6Y_9cuGC:&0oIWu"`hW3er--G9H9?3bbfXo<Y
%Cg^l^lDegn#*fT\qU-7)>3cXe_^"ZZgXDL4XPCVW<u9ODMrDdO[nd/caRH5P3N_6J%;a[^q$fbM55Gh_rP1WJVEn_&rr00Oc\Z@`
%o_s;^8;!@fJ&6I"Co3cXTk5'p\>f,Mn#A1U3u9Ti:R5_MA[PY]456Z-cm,d=)<Ki,E<=<VOEVT/N:76k#:mIgIWu!eM]!UD14+*t
%m:0!Tm+oVrG-Kgqg7[%-*H-I.5Q9(;G$aJlpu)g0hsLE>'3;:+qG"3mh`s=$Q0j&uCk%bSQ0m&6ij3_)V=KD3U,qtd(:-JGdbcsm
%_gX4NcCi49.WTsMU*Ka;'GK?V4=6b`2(#0"n::_j*NY?0;9eJFFQ]1U!nJ_&&n>jYkh4BGq#1nR]R`8*'WdihFM4OfFm"&uqlVY6
%,^GZRG!WJuaD0Pg.)l[q!"N`m[PbKHLWQ?jo#s;J5c1]U!dTu%J\'9a-Y4*<9Q9Kh)3h4!=g171oWY1g"8(#F*#Wl6LT..\bgUJ`
%U$$X.UtH$oLSr`F*@oW`Y1A$9pTRE&P1<\a`3$:Bm8#T?P.Q)8&*!W^"FnjE8S&T"MU)D\BRW&?.W3.Rm=+"h,K^1k`2]/2\S@5Q
%UqCfJMKUerft+Xd%]<>m;7Z$<3k2+J%-q_UW['BK+Lm]nW)W]gG3'1R5c/R(q7oC'=cG2-]@X`ZA/mN^mJ4EIR"BfM*6Q>uE?uYR
%.bZL_Wo<N7I4$^D+EAIjn-I7Hd^YQ.^[G$]/NrqQO:Actg!t@[LGH[oGa/r]f!KW]J^1;V5mKjU7PfIsCWJ(>hDE*\51f,KP4RT*
%s2Am0+9#LChuE91J%u$B+$]aPG@uH`s,S9$o],uLq1nu_.a*%NqpSo%puTOT5Q(?'gsI5D_uAoFT76e0YQ+EbT7;7[fDk`7^B<Gg
%rINl+ra5Zt^OGphrsu[QcGf~>
%AI9_PrivateDataEnd
