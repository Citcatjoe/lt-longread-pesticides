%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: d_082-13.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For:  
%%CreationDate: 12/29/2017
%%BoundingBox: 0 0 1008 1007
%%HiResBoundingBox: 0 0 1007.8912 1006.9133
%%CropBox: 0 0 1007.8912 1006.9133
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 30308 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFD40FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD42FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD40FFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFD40FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFD19FFA8A8A8FD26FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFA87E7DA8537D537D7EFF7D7EA8FFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFD13FFA8FD0D7DA8FD20FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFF7E537D537D537D537D537D537D53A8FFFFAFFFFFFFA8FFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFC3CA
%C3CAC3FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD13FFAFFF
%A8FFA8FFA8FFA8FD09FFA87DA8FD18FFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA1CAA1C3A8C3A1FF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFA8AFA8A9A8AFA8AFA8FFAFFFAFFFFFFFA87D537D
%A8FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFD05FFAFFFAFFFAFFFAFFFAFFFAFFFAFC3C9CA
%C3CAC9C3AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD15FFA8FF
%A8FFA8FFA8FD05FF7EFFFFA97D7DA8FD18FFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA1CAC3C3C9C9
%C3FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFA8FFA8AFA8FFA8FFA8FFFFFF7D5953FFA87E
%53A8AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%FFCAC3CAC3CAC3CAAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD17FF
%A8FFA8FFA8FFA9FFAFFFA87D52A8FFFFA87D53A9FD17FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA8FFA9FFAFFFA9FFAFFFCACFCF
%C3A7C3C9C3A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA8A9A8FFA8A9A8FFA8FFA8A852
%5353FFFFFF7D9AA1FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA8FFAFFFAFFF
%AFFFAFAFAEFFCFFFC9C9C3C3A8FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFD17FFA8FFA9FFA8FFA9FD04FF7E537EA9FFFFC3BCC3FD17FFAFFF
%AFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFAFFFAFFFA8AFA9AFAFFFAFFFAFFF
%AECFCACFCFCFA1CAA1FFAFFFAFFFAFAFA9AFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA8A9A8FFA8A9A8FF
%A8FFAFFF525352FFFFFF9ABC9AFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFAFFFAFFFAFFFAFFD0BFFAFFFAFAFA8FFAFFFAFFFAFFFAF
%FFCFFFCFFFCFCA9AFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFD13FFAFFFA8FFA8FFA8FFA8FFFFFF7D7D537EFFFFFFC39AC3FD17FF
%A9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFFAFFFAFFFA9FFA8AFA8FFA8FFA9FF
%AFFFA8CFCFCFCACFC9C3A8FFAFFFA9AFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8AFA8A9A8AF
%A8AFA8FFAF7D52537DFFAFFF9ABC9AFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9FF
%A9FFFFFFAFFFAFFFAFFFCFFFCFFFCFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFD15FFA8FFA8FFA8FFA8FD05FF7D7DA1FFFFC3
%9AC3FD17FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA8A8A8
%FFA9FFAFFFAFFFAFFFCFCFCAFFAEFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8A884A8A8
%FFA8AFA8FFA8FFA8FFFFFFAFC39AC3AFFF9ABC9AFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFAF7DFD04A8FFFFFFAFFFAFFFAFFFAFFFAFFFAFFFA8FFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFD0FFFA9FFFF7E537D7D7DA8FFA8FFA8FF
%A9FFAFFFFFFF9ABCC3FFFFC3BCBCFD17FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FF7D847DA884A87EAFA8FFA9FFAFFFA9FFAFFFA9FFA8AFA8
%FFAFFFA9FFAFAF82FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFFAFFFFF
%FFAFFFA87D537D537D537D537DA8FFA8A9A8FFA8FFA8FFFFA19AC3FFFF93
%BC9AFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFA9A87EFD04A8A9A8AFAFFFAFFFAFFFAF
%FFAFFFAFAFAFFFAFFFAFFFAFFFA883AFFFAFFFAFFFAFFFAFFFAFFD0EFFFD
%0A7DFFA9FFA8FFA9FD05FF9ABCBCFFFFBCBCC3FD17FFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFA87D847DA884A884A9A8A9AFFFAFFFAFFFAFFF
%AFAFA8FFA8FFAFFFAFFFAF8358AEAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA8A9A8FFA8A9A8FFA8FFAFFFFF9A
%9ABCFFFF93BC9AFFAFFFFFFF7D7D537DA8FFA8FFAFFFFFFFAFFFFFFFAFFF
%FFAFFFAFFFAFFFAFFFAFFF83FFAFFFAFFFAFAF7DA87EA884FD04A8FFA8AF
%AFFFAFFFAFFFAFFFA8FFAFFFA8FFAFFFAFFF828282FFAFFFAFFFAFFFAFFF
%AFFFAFFD13FFAFFFA8FFA8FFA8FFA8FD05FF9ABC9AFFFF9A9AC3FD04FF7E
%7D537D7D7D537D7EFD0AFFA9FFAFFFA9FFAFFFA9FFAF8384FFAFFFA9FF84
%847D8484A87EA884A8A8AFA8AFA9FFAFFFA9FFA8AFA8FFA8FFA8FFAFFF83
%825E82A9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFA8AFA8A9A8AFA8AFA8FFAFFFAF9A9ABCAFFF93BC9AFFFFFFAF
%7D537D537D537D537DFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFF82
%89AFFFAFFFA8A87EA884A8A8A9A8A8A8FFA8FFA8FFAFFFAFFFAFA9A8FFA8
%AFA9FFAFFFAFAE82825EAEAFFFAFFFAFFFAFFFAFFFAFFD15FFA8FFA8FFA8
%FFA8FD05FF9ABCBCFFFF9A9AC3FD17FFAFFFAFFFAFFFAFFFAFFFA88258FF
%AFFF7D847D847DA884A884A884A8A8AFA8A9A8FFAFFFAFAF7D847DA884A8
%A8FFAFAF5E82588282FFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFA8FFA8AFA8FFA8FFA8FFFFFFA876769AA8FF709A
%76FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFF
%AFFFAFAD8282A8FFA8847DA87E847EA8A8A884A8A8AFA8FFA8AFAFFFAFFF
%84A87EA884FD04A8FFAE8358825882AFFFAFFFAFFFAFFFAFFD17FFA8FFCA
%FFA8FFCAFFA8FFFFCF76A176A8A8767676A8FD16FFAFFFA9FFAFFFA9FFAF
%AF5E825883A9847D847D847D847EA884A87EFD04A8AFA8AFA9FFA8847D84
%7EA87EA884A8A8FF5882588282FFA9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFA8A9A8CAA8CAA8CAA8CAA8FFCAFFCAFF
%CAFFCAFFCAFFCAFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAF
%FFAFFFAFFFAFFFA883588282AF84A87EA884A884A9A8A8A8A9A8FFA8FFA8
%FFA8FFAFA87EA884A8A8A9A8A8A8AFAE8382838283AFFFAFFFAFFFAFFFAF
%FD17FFA8FFCACFA8CFCACFA8CFCFFFCFFFCFFFCFFFCFFFCFFD16FFAFFFAF
%FFAFFFAFFFAFAF578258827E847D847D847DA884A884A884A8A8A9A8AFA8
%A9A8FF7D847D8484A884A884A884AE82825E8258AFAFFFAFFFAFFFAFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8FFFFFFAFFFA8A9A8CAA8CAA1CAA8
%CAA8FFCFFFCAFFCFFFCAFFCFFFCAFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFAFFFAFFFAFFFAFFFA882828382847DA87E847DA8A8A884A8
%A8A884AFA8AFA8FFA8AF84A87E847DA8A8A884A8A8A882835882588283FF
%AFFFAFFFAFFFAFFFAFFD0EFFC39AFFFFFFA8C3A1FFA8CFA1C3A1CFA8CFCA
%A8595AA88459847D8459CFCFFD14FFA9FFAFFFA9FFAFFFA9835E8258827D
%847D847DA87EA884A87EA884A8A8AFA8A8A8AFA8A87D847D847EA884A87E
%A88483578258825783AFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFFFAFFFFF
%FFA852A1CA9AFF7D52A8A8A1CA527DA8A1A1CAA8CF7D5935CF3559598435
%59A8FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAF
%FF8282588282837EA884A8A8A9A8A8A8A9A8A8A8AFA8FFA8FFA8FFA8A884
%A87EFD04A8A9A8A87C8282838282A8FFAFFFAFFFAFFFAFFFAFFD0DFF9AFF
%FFC3FFA89AFFA8C4A8C3A1CFA1CACACFCAAF5A5ACF845A84A88459FFCFFD
%14FFAFFFAFFFAFFFAFFFAF83588258827D847D8484A884A8596059605960
%59605960596059605960595A596059607EA884825E8282825883AFFFAFFF
%AFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFF9ABCBCFF9ACB9ABCA1FFA19A
%9ABCA1A1A1CAA8CFCAFFCFFFCAFFCFFFCAFFCFCA9ACAFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFF5883828258837E847DA8A8A8
%595A595A2F60356035FD075935603560356060A884A88282828382825EFF
%AFFFAFFFAFFFAFFD0EFF9ABCBCFFC3A1BCBCC383A19ABCBCC9A1CAA8CFCF
%FFCFFFCFFFCFFFCFFFCFFFCAC39AC3FD11FFAFFFA9FFAFFFA9FFA8825E82
%5E8258847D847EA8595A356059603560595A355A595A3560596035603560
%59A884A87C825E8258825E82A8FFAFFFA9FFAFFFA9FFFFFFAFFFFFFFAFFF
%FFFFAFFF93BC9AAE9AA193BC9A837C9A9ABCA1A1A1CAA8FFCAFFA1A8A1A7
%A1A7A7FFCACFA8CA9ACAFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAF
%FFAFFFAFAE82838283828283A884A984602F6035603560FD075960356035
%60595960A9A8A8A88382837CA1AE835EADAFFFAFFFAFFFAFFD0EFF9ABCC3
%83A1A0BCBCC383A19ABCBCCAA1CAA8CFCFFFCFA1767D527D76A8CFFFCFAD
%A1BCBCFD10FFAFFFAFFFAFFFAFFF8283847C7D8358837DA87E5A35593559
%35593559355935593559355935593559598484A884A883A884A176FFAF83
%82FFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFA8AD94BC9AAD9AA19ABC
%9AA77CBC9ABCA1C3A1CAA8FFCFFF7D7D5276527DA1FFCACF83A793C3A8FF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFFAFA876A17E847D
%A884A859835E83A8835E83588383A85883598484A8A8A87E8483837CA8A8
%A884A87D7CA8FFAFFFAFFFAFFFAFFFAFFFAFFD09FFA7AD83BCBCBC83A1A0
%BCBCC383A19ABCBCC3A1CAA8CFCAFFCF7D527D527D52CACFFFA8AD839AA1
%AD83AEFD0DFFA9FFAFFFA9FFAFFFA9AF7D7C7C837D835E825E825E8282CF
%5E825E825E83A8825E825E8283CF83A858825882588358837EA176A8A9FF
%AFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFAE83A7838393BC9A8376A19ABC
%9AA77C9A9ABCA0A1A1A8A1A8A7CA7C7C5276527CA1CAA7A8597D537D5983
%83A7A8FFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFF838258827C8258825882
%5882588258828282588258827C8358825882588283825882588258825882
%58827C7C5882588282FFAFFFAFFFAFFFAFFD05FFA8825882588258825882
%588258825882588258825882588258825882588258825882588258825882
%588258825882588258AEFD09FFAFFFAFFFAFFFAF82578258825782588257
%825882578258825782588257825882578258825782588257825882578258
%825782588257825882A8FFAFFFAFFFAFFFAFFFFFFFAFAE58825782588257
%825882578258825782588257825882578258825782588257825882578258
%8257825882578258825782A8FFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFAEA8
%AFA8AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFA8
%AEA8AFA8AEA8AFA8AEA8AFA8AEA8AFAFFFAFFFAFFFAFFD09FFAECFA8FF84
%59597D5959597D5959597DFD0F597D5959597D5959597D595959AEAECFA8
%FD0AFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFF7EA87EA87EA87EA87E5953
%59535953595359535953595359535953597EA87EA87EA87EA87EA8AFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFD14FFAF84A8597E595A597E595A597E59
%5A597E595A597E59A884FD16FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFF535A5359535A5359535A5359535A5359535A5359535A53597E
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD13FFA8FF
%A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FD16FFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD
%04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFD40FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFD04FFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD42FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD40FFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD46FFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD42FFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9AFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9AF85FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFA8FFA8FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF85AFAFFFAFFFAFFFAFFFAF
%AFA9AFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD10FFCA
%FFA8FD07FFA8CAFD26FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFAFA9AFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA8
%FFA8FFFFFFAFA87DA17DA1A8FFAFFFFFFFAFFFFFFFAFFFFFFFA8FFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFAFA9FFAFFFA9FFAFFFA9AF85FFA9FFAFFFA9AFAFFFA9FFFFFFAF
%FFAFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD16FFCBFFA1A8A1A8A1
%A8FFFFA8CAFD08FFCAFFCAFD15FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF
%A9FFAFFFAFFFAFFFAFFFA9AFA9FFAFFFAFFFAFFFAFFD0BFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA1
%A17DA1A1A17DA1A1A17DA1A1A8AFFFFFFFAFFFA8CAA8FFA8FFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF85
%AFAFFFAFFFAFFFAFFFAFAF8585AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD14FFA8A8A1A1A1A8A1A1A1A8A1
%A1A1A8A1CAFD1EFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9AFAFFD05FFAFFF
%AFFFAFAF85FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFA87D
%A17DA17DA17DA17DA17DA17DA17DA8AFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AF85
%FFAFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD18FFA8FFFFFFA8FFFFFFA8FFFF
%FFCBFD1DFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FFAFFFAFFFFFFFAFFFAF
%AFA9FFFFAFA9AFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAEAEAFFFAFFFAF
%FFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8FF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8CACAFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF85AFAFFF
%AFFFAFFFAFFFAFAF858585AF858585AF85AF85AFAFFFAFFFAFFFAFFFAFFF
%AFAE82FFAFFFAFFFAFFFAFFFAFFFAFFD16FFA8FFFFFFA8FD0CFFCABCC3C2
%C3C3FD15FFAFFFAFFFAFFFAFFFAFFFAFFFA9AFA9FFAFFFAFFFAFFFAFFF85
%AFA9AFA9FFA9AFA9AFA9AF85AFAFFFAFFFAFFFAFFFAFFF8282AFFFAFFFAF
%FFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFA8FFAFFFAFFFFFFFAFFFFFFF
%AFFFFFA8A7FFFFFFAFFFFFFFAFFFFFC39AC3A0C39AC3A0FFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFAF84AFAFFF
%A9FFAFFFA9FF85AF85FFA9AFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%A88258AEAFFFA9FFAFFFA9FFAFFFA9FD0AFFCAFFCAFFCAFD16FFCF9AC3C3
%C3C2FD04C3FD13FFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAFFFAFFF
%AFAFA9FFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAE828383FF
%AFFFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFCACAA8FFA8CAA8FFA8FFAF
%FFFFFF7DA8FFFFAFFFFFFFAFFFFFFFAFFFA1BC9AC3A0C39AC3A0C3AFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFA9AF85AF85AF85A9A9
%AF85AFAFFFAFFFAFAF85AFAFFFA9AFAFFFAFFFAFFFAFFFAFFFAFFFA8FFAF
%FFAFFF82825882AFFFAFFFAFFFAFFFAFFFAFFD0AFFCAFFA8FFCAFFA8FD06
%FFA8A1CAFD08FFA8A8FFA9A8A8A8AFA8A9A8AFA8FD13FFAFFFAFFFA9AF85
%AFA9AFA9AFAFAF85AF85FFAFFFAFAF85FFAFFFAFAFAFFFAFFFAFFFAFFFAF
%FFAFFFAFAEA8FFAFFFAE8382825EAFAFFFAFFFAFFFAFFFAFFFAFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFCAA1A87DA17DFFFFFFAFFFFFFFAFA8
%A7FFA8A87EA9A8A9A8A9A8A97EA8A8FFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9AF85FF85AFA9FFA9AF85AFA9FFAFFF85AF
%AFFFAFFFAFFFA9FFAFFFA9AF83AEA9FFAFAE5E825E8283FFAFFFA9FFAFFF
%A9FFAFFD14FFA1A8A1A8A1FFFFA8CBFD09FFA9A9A9FFA9FFA9FFA9FFA8FD
%11FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFA9AFAFFFAFFFAFFFAFFFAFAF
%AFFD07FFAFFFAFFFAEAEA8FFAFFF838382825E83AFFFAFFFAFFFAFFFAFFF
%AFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA1A17DA1A1A1A8FFA1A8AF
%FFA8FFAFFFFFFFA8A9A8A9A8A9A8A9A8A9FFA9A8FFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF85FFAFFF85AFAFFFAFFFAF
%FFAFFFA9AFAFFFAFFFAFFFAFFFAFFFAFAEA8AEA8FFAE825E825E8258AFAF
%FFAFFFAFFFAFFFAFFD13FFA8A1A1A1A8A1A8FD04FFA8A8A1FD04FFA9A8A9
%A9FFA8FFA9FFA8FFA9FD11FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFF
%A9AFAFFFAFFFAFFFAFAFA9FFAFFFAFFFAFFFAFFFAFFFA8AEA8AEAFAE8282
%5882828283FFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFA8A17DA17DA17DA8AFFFFFA77DA17DA8A8FFA8A87EA9A8A9A8A9A8
%A9AFFFA8FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9
%FFAFAF85FFAFFFA9FF85FFA9FFAFFFA9FF85AFA9FFAFFFA9FFAFFFA9FFA8
%AE83AE83FF8382588257825882A9FFAFFFA9FFAFFFA9FD14FFA1A8A1A8A1
%A8A1FFFFFFA8A8A1A8A1CAFFFFA8FFA9FFA9FFA9FFA9FFA9FD11FFAFFFAF
%FFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FFAFFFAF
%FFAFFFAFFFAFAEA8AEA8AEAEFF828282835882AEFFAFFFAFFFAFFFAFFFAF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFA87DA1A1A17DA1A1A1A8FFA1A1
%7DFD04A1FFA8A87EA9A8A9A8A9A8A9AFFFA8FFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF85FFAFFFAFFFAFFFAFFFAFFFAF
%FF85AFAFFFAFFFAFFFAFFFAFFFA8AE83AE84AE848282825E8258A8AFFFAF
%FFAFFFAFFFAFFD12FFA1A1A1A8A1A1A1A8A8FFA8A8A1A1A1A8A1CAFFAFA8
%A8A8FFA9FFA8FFA9FFA8FD11FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAF
%FFAFFFAFFFAFFFAFFFAFAFA9FFAFFFAFFFA8FFAFFFAEAEA8AE83AEA8AD82
%8382825E8282FFAFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFA1A17DA17DA17DA1A1FFFFA87DA17DA17DA8AFFFA8A87EA9A8A9A8A9
%A8A9FFA9A8FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9AF85AFA9FFAFFFA9FFAFFFA9FFAFFF85AFAFFFA9FF7D7651AFAFFF
%83AE84AE83AF82825E825E825882AFFFA9FFAFFFA9FFAFFD11FFCAA1A8A1
%A8A1A8A1A8FFFFA8A8A1A8A1CAFD04FFA9A9A9FFA9FFA9FFA9FFA8FD11FF
%AFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FF
%AFFFAFFFA77DA8FFFD04AEA8AEA8838283FD0582AEAFFFAFFFAFFFAFFFAF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFFD059ABC9ABC9AC39AA19A9A9ABC
%9ABC9AC3A8A9A8A9A8A9A8A9A8A9FFA9A8FFFFAEA8FFFFFFAFFFFFFFAFFF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF85AFAFFFAFFFAFFFAFFFAFFFAFFF
%85AFAFFFAFFFAFCAA1A9AFAE83AEA8AE83AD828258825882588282FFAFFF
%AFFFAFFFAFFD11FF9A94BC9AFD05BCA1BC9A9A94BDFD04BCC3A9A8A9A9FF
%A8FFA9FFA8FFA9FFFFFF8283FD0CFFAFFFAFFFAFFFAFFFAFFFAFFFA9AFAF
%FFAFFFAFFFAFFFAFFFAFFFAFAFA9FFAFFFAFFFAF857E85AEAEA8AEA8AE82
%835882588258825883AFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFF
%AEFFAFFF7DA87DA8A8CFA8FFA8A87DA87DA8A8FFA8CFA8FFA8A87EA9A8A9
%A8A9A8A9AFFFA8FF83825EAEAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FF
%AFFFA9FFAFAF85AFAFFFA9FFAFFFA9FFAFFFA9FF85AFA9FFAFFFA9FF84C9
%7D8483A883AE83A85782588258825882A8FFAFFFA9FFAFFFA9FD0CFFA8AE
%FFFFFFFD06A8FFA8FFFD05A8FFA8FFA8FFA8FFA8FFA9FFA9FFA9FFA9FFA9
%FFFFAD8283A7FD0BFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAF
%FFAFFFAFFFAFAFA9FFAFFFAFFFAFAF7DCA5AAEA8AEA8AE83828283828382
%8258AEAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAF8382FFAFFF7DA8
%7DA8A8FFA8CFA8A87DA87DA8A8FFA8CAA8FFA8A87EA9A8A9A8A9A8A9AFFF
%A8FF5E828282A8FFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF
%85FFAFFFAFFFAFFFAFFFAFFFAFFF85AFAFFFAFFFAFFFC9A87D5A5AAE83AE
%8382588282825E82828258FFAFFFAFFFAFFFAFFD0BFFAE8283A8FFFD04A8
%7DA8A8A0C1A0A8A87DFD04A8A0C1A0A8AFA8A8A8FFA9FFA8FFA9FFA8FFAE
%82828382AEFD0AFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFAFFFAFFF
%AFFFAFFFAFAFA9FFAFFF537DA7FF7E5B5A7FA8AEA8AE8282828382828283
%8282AFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFF83825E83FFA87DA87D
%A87DA72E764CA77DA87DA8A8A0287C52C9A8A87EA9A8A9A8A9A8A9FFA9A8
%AD5E825E8283FFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9AF85
%AFA9FFAFFFA9FFAFFFA9FFAFFF85AFAFFFA97DAFA9848585857EAE84AE83
%825E825E825E825E8258AEA9FFAFFFA9FFAFFD0BFF83828382FFFD06A8C9
%C852C8C9FD05A8C8C852C8A7FFA9A9A9FFA9FFA9FFA9FFA8FF8383828382
%ADFD0AFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFFFC9FFFFFFAFFFAFFF
%AFAFA9FFAFFF7DA95AAF8BAF8584A8AEA8AE8283828382838283828282FF
%AFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFF82825E82A7A87DA87DA87DCFA0
%76A0FFA8A87DA8A8CA7C7CA0FFA8A87EA8A8A9A8A8A8A9FFA9A8AD82825E
%8283FFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFFFAF
%FFAEAE828283AEAFFF85AFAFFF7D7D527E85AF845383AEA8AEFD04825E82
%7C825E825882AFFFAFFFAFFFAFFD0BFF83828282AEA8A87DFD04A8FFA8FF
%FD04A87DA8A8FFA8FFA8A9A8A9A9FFA8FFA9FFA8FFA9FFAE83828282FD0B
%FFAFFFAFFFAFFFAFFFAFFFAFFFA8FFAFAE828983CF8383828282AEAFAF84
%84597DA8A87EAFA97D837D59A8A882828383FF767DAFAE5E8282AFAFFFAF
%FFAFFFAFFFFFAFFFFFFFAFFFFFFF83825E83AFA87DA87DA8A8CFA8FFA8CF
%A8A87DA8A8FFA8CFA8FFA8A87EA9A8A9A8A9A8A9AFFFA8FFA8A883FFAFFF
%FFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFAFA9AF5E825E83CF83
%5E825E825E835E7C5282527DA8598584597D52AF527D5E8383AEAF7C76FF
%AFAE5E8283FFA9FFAFFFA9FD0CFFA8A8FFFFFD07A8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA9FFA9FFA9FFA9FFA9FFFFFFA8CAFD0CFFAFFFAFFFAF
%FFAFFFAFFFAFFF84FFA883828383FFFFFFAEAE828382835883588358A87D
%857E847E7E84CA59FFAFFFAEFF76A1AFFFAFFFAEAEAFFFAFFFAFFFAFFFFF
%AFFFFFFFAFFFFFFFAFFFA1FFA8A87DA87DA8A8FFA8FFA8FFA8A87DA8A8FF
%A8FFA8FFA8A87EA9A8A8A8A9A8A882A884AEAEA8A1FFAFFFFFFFAFFFFFFF
%AFFFAFFFAFFFAFFFAFFFAFFFA8838282AEFFAFAE5EAEFFFFA8AFA8827C83
%7C597C837C7D58A87E7E527D7D847D7DA8A87C83837C76FFAFFFAFFFAFFF
%AFFFAFFFAFFD0CFF83A782A094BC9A9A94FD07BC9ABC9AFD07BCA8A8A8FF
%A9FFA8FFA98283A882827CA7AEFD0BFFAFFFAFFFAFFFAFFFAF83828382FF
%A8FFA88282FFA8FFA88383A87DA87D7D7DA8527D7DA17D7D52A87D7D5383
%58825882587C838282AFAFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFF588258
%7C5882587C577C587C577C7C7C577C7C7C577C7C7C577C7C7C5783588358
%837C83588358825882587C58825882A8FFFFFFAFFFFFFFA9FFAFFFA9FFAF
%AF7C82588257827CA07C8258827BA07C8257827D7D7D83525352FD047D83
%7D7D5259527D588258825782588257825883A8FFAFFFA9FFAFFD08FF8382
%588258825882588258825882588258825882588258825882588258825882
%5882588258825882588258825882588258A7FD08FFAFFFAFFFAFFF838258
%825882588258825882588258825882588258825882588258825882588258
%82588258825882588258825882588258ADAFFFAFFFAFFFAFAFFFFFFFAFFF
%FFFF83A883A7837E597D597E597D597E597D535953595359535953595359
%5359537D597E597D597E597D597E598383A883A7A8FFFFFFAFFFFFFFAFFF
%AFFFAFFFAFAF83A883A783A883A783A883A783A883A783A883A783A883A7
%83A883A783A883A783A883A783A883A783A883A783A883A7A8FFAFFFAFFF
%AFFD0EFF597E595A537E595A537E59595359535953595359535953595359
%595A537E595A537E595A537EA9FD0DFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFF59595359535953595359535953595359535953
%A8AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD14FF7E
%5A597E595A597E595A597E595A597E595A597E595A597E7EFD15FFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFAF84A87EA884A87EA884A8
%7EA884A87EA884A87EA884A87EAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFD42FFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFD42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD42FFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD
%42FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 13 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-29T13:51:39+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-12-29T13:51:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-12-29T13:51:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>196</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAADEAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9SXf+8k3/GNv1HKs/wDdy9xZ4/qHvYLLd28bBS4LE04ggkfMZx9O/ECW47m3&#xA;cmjjbr9G3fApiQ1cTgKBbnnKw+BTQA7+NaZZARMhfJYx7+SrO8cMrxtIrenQMy1I38MjOIBq2MbI&#xA;uljXNsGCq9WboMBrokRKrp08MtzAY3DHmhK1+JdxsR2y3CKyR94YZYkRPudqcMz6pchCxJkagBPj&#xA;npWGQEBfc+b6mEjllXeh1tblpfRBb1TSiVNd8nLLGI4jyaY4ZmXCLtTuI7iASepUGLqpam+RlmHB&#xA;xBsx6eRnwysKccnOL1A7AA0YVrRqVKkg9cGHPGY2CculnA1askMrlRGzOWFQATlvEGrwpXSb+WI5&#xA;U1Ng5O0bVBr4jMTWEGG3e5/ZkSMu/cwz6h7Z5u+q+Mo3KWlsY/rEiReqSIy5ABKip3PgMnHFKXIW&#xA;xOpA5leLaCSMSQuJFbYOCCpNadQTjKBB3BTHPanaW0ksIeSMxuS1UIoQASNwfljKFGgzllAVhZxM&#xA;KoQ1PtUptXAYsBmb+oe2RpPjPVdMHHTrUeEMY/4UZ1+D6I+4PIZz65e8onLWp2KuxV2KuxVRvTSy&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:433c6e47-b9ab-274a-8a97-7e31000f3d99</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:433c6e47-b9ab-274a-8a97-7e31000f3d99</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:e5872eba-8f6e-7549-85a8-c79ff916236c</stRef:instanceID>
            <stRef:documentID>xmp.did:e5872eba-8f6e-7549-85a8-c79ff916236c</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cf50cafe-8bb0-2445-a735-23863c14d1cb</stEvt:instanceID>
                  <stEvt:when>2017-12-22T11:25:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:433c6e47-b9ab-274a-8a97-7e31000f3d99</stEvt:instanceID>
                  <stEvt:when>2017-12-29T13:51:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1683.403093</stDim:w>
            <stDim:h>1015.869137</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1006.91 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1006.91 li
1007.89 1006.91 li
1007.89 0 li
cp
clp
504.466 504.466 mo
.000504692 504.466 li
.000504692 0 li
504.466 0 li
504.466 504.466 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.088014 0 .0102541 0 cmyk
f
1008.01 1007.69 mo
503.548 1007.69 li
503.548 503.227 li
1008.01 503.227 li
1008.01 1007.69 li
f
1007.89 504.466 mo
503.425 504.466 li
503.425 0 li
1007.89 0 li
1007.89 504.466 li
.0173648 0 .00030518 0 cmyk
f
504.371 1006.91 mo
-.0951344 1006.91 li
-.0951344 502.448 li
504.371 502.448 li
504.371 1006.91 li
f
740.584 383.408 mo
729.623 383.408 li
729.623 104.216 li
669.329 104.216 li
663.847 104.216 li
663.847 383.408 li
653.667 383.408 li
653.667 104.216 li
740.584 104.216 li
740.584 383.408 li
.0543832 .0189212 .0178225 0 cmyk
f
723.358 383.408 mo
715.528 383.408 li
715.528 104.216 li
689.688 104.216 li
689.688 383.408 li
675.985 383.408 li
675.985 104.216 li
669.329 104.216 li
729.623 104.216 li
723.358 104.216 li
723.358 383.408 li
.0941176 .0545357 .0360418 0 cmyk
f
729.623 383.408 mo
723.358 383.408 li
723.358 104.216 li
729.623 104.216 li
729.623 383.408 li
.13077 .083772 .0569772 0 cmyk
f
715.528 383.408 mo
689.688 383.408 li
689.688 104.216 li
715.528 104.216 li
715.528 383.408 li
f
669.329 383.408 mo
663.847 383.408 li
663.847 104.216 li
669.329 104.216 li
669.329 383.408 li
.0941176 .0545357 .0360418 0 cmyk
f
675.985 383.408 mo
669.329 383.408 li
669.329 104.216 li
675.985 104.216 li
675.985 383.408 li
.13077 .083772 .0569772 0 cmyk
f
62.6479 884.112 mo
62.6479 881.855 li
62.6479 878.296 65.5337 875.41 69.0933 875.41 cv
78.1733 875.41 108.442 866.686 108.442 866.686 cv
108.442 866.686 140.908 856.882 160.443 856.882 cv
179.978 856.882 211.469 866.801 211.469 866.801 cv
211.469 866.801 233.347 875.41 257.167 875.41 cv
259.754 875.41 li
263.314 875.41 266.2 878.296 266.2 881.855 cv
266.2 884.112 li
62.6479 884.112 li
cp
.491066 0 .719966 0 cmyk
f
409.833 379.151 mo
243.885 379.151 li
258.995 379.051 li
316.393 379.051 li
316.188 378.673 li
326.3 378.606 li
320.408 326.583 li
311.569 315.093 li
319.454 259.552 li
332.491 251.716 li
353.731 263.118 li
409.833 379.151 li
326.559 209.512 mo
326.649 208.879 li
327.079 207.995 li
326.559 209.512 li
.268711 .130465 .130037 0 cmyk
f
243.885 379.151 mo
243.885 379.151 li
243.934 379.051 li
256.734 379.051 li
258.995 379.051 li
243.885 379.151 li
316.188 378.673 mo
278.168 308.536 li
326.689 208.597 li
326.649 208.879 li
326.559 209.512 li
326.556 209.521 li
326.689 208.597 li
304.101 255.363 li
319.351 259.614 li
319.454 259.552 li
311.569 315.093 li
320.408 326.583 li
326.3 378.606 li
316.188 378.673 li
.379004 .198459 .203311 0 cmyk
f
353.918 263.219 mo
353.731 263.118 li
332.491 251.716 li
319.454 259.552 li
319.351 259.614 li
326.556 209.521 li
326.559 209.512 li
327.079 207.995 li
353.918 263.219 li
.0831311 .00485237 .0216068 0 cmyk
f
319.351 259.614 mo
304.101 255.363 li
326.689 208.597 li
326.556 209.521 li
319.351 259.614 li
.15256 .0300908 .056672 0 cmyk
f
256.734 379.051 mo
243.934 379.051 li
96.2672 379.051 li
96.3849 378.77 li
130.019 378.336 li
146.577 314.13 li
164.408 296.299 li
182.827 197.185 li
182.889 197.16 li
182.899 197.105 li
216.651 213.512 li
222.359 290.886 li
224.27 315.616 li
256.734 379.051 li
.268711 .130465 .130037 0 cmyk
f
74.6156 379.051 mo
128.746 261.94 li
142.119 254.298 li
166.192 204.158 li
182.827 197.185 li
164.408 296.299 li
146.577 314.13 li
130.019 378.336 li
96.3849 378.77 li
74.6156 379.051 li
.379004 .198459 .203311 0 cmyk
f
316.393 379.051 mo
258.995 379.051 li
256.734 379.051 li
224.27 315.616 li
222.359 290.886 li
216.651 213.512 li
216.808 213.588 li
221.36 212.417 li
233.185 238.059 li
240.827 239.651 li
278.168 308.536 li
316.188 378.673 li
316.393 379.051 li
.161471 .0622568 .0744335 0 cmyk
f
216.808 213.588 mo
216.651 213.512 li
182.899 197.105 li
191.143 152.443 li
191.729 151.245 li
215.647 200.066 li
216.808 213.588 li
165.745 204.345 mo
175.337 184.743 li
167.091 201.725 li
165.745 204.345 li
.0831311 .00485237 .0216068 0 cmyk
f
216.808 213.588 mo
216.808 213.588 li
215.647 200.066 li
215.641 200.002 li
221.66 212.34 li
221.36 212.417 li
216.808 213.588 li
.0230716 0 .00183108 0 cmyk
f
165.745 204.345 mo
165.745 204.345 li
167.091 201.725 li
175.337 184.743 li
191.218 152.034 li
191.143 152.443 li
182.899 197.105 li
182.889 197.16 li
182.827 197.185 li
166.192 204.158 li
165.745 204.345 li
.15256 .0300908 .056672 0 cmyk
f
156.833 122.768 mo
165.561 122.768 172.637 129.843 172.637 138.571 cv
141.03 138.571 li
141.03 129.843 148.105 122.768 156.833 122.768 cv
cp
.00122072 0 0 0 cmyk
f
334.337 596.444 mo
343.066 596.444 350.141 603.519 350.141 612.248 cv
318.534 612.248 li
318.534 603.519 325.61 596.444 334.337 596.444 cv
cp
.0444648 .11899 .0719615 0 cmyk
f
676.948 227.731 mo
676.948 213.177 665.148 201.378 650.594 201.378 cv
640.074 201.378 630.997 207.544 626.771 216.457 cv
623.93 213.728 620.08 212.041 615.83 212.041 cv
607.101 212.041 600.026 219.116 600.026 227.845 cv
631.633 227.845 li
631.627 227.731 li
676.948 227.731 li
cp
.500725 .408392 .307347 .0179751 cmyk
f
134.58 575.257 mo
143.307 575.257 150.383 582.333 150.383 591.061 cv
118.776 591.061 li
118.776 582.333 125.851 575.257 134.58 575.257 cv
cp
.0444648 .11899 .0719615 0 cmyk
f
926.078 382.865 mo
878.959 349.239 807.876 325.656 739.661 325.656 cv
671.444 325.656 594.332 347.315 553.243 382.865 cv
926.078 382.865 li
cp
.337377 0 .499672 0 cmyk
f
841.87 877.967 mo
833.376 877.967 li
833.376 836.486 li
833.376 839.324 833.376 842.521 833.376 842.521 cv
833.376 842.521 833.376 842.52 833.376 842.519 cv
838.067 842.519 841.87 845.803 841.87 850.493 cv
841.87 877.967 li
.18088 .148409 .154849 0 cmyk
f
846.054 877.967 mo
841.87 877.967 li
841.87 850.493 li
841.87 845.803 838.067 842.519 833.376 842.519 cv
833.376 842.52 833.376 842.521 833.376 842.521 cv
833.376 842.521 833.376 839.324 833.376 836.486 cv
839.985 833.229 li
846.054 836.22 li
846.054 849.093 846.054 828.258 846.054 877.967 cv
.210178 .172305 .183566 0 cmyk
f
864.844 746.702 mo
864.844 746.702 li
839.985 669.427 li
842.74 702.257 li
839.985 693.692 li
824.402 742.13 li
815.125 746.702 li
839.985 669.427 li
864.844 746.702 li
864.844 746.702 mo
855.674 742.182 li
855.673 742.182 li
864.844 746.702 li
.246189 0 .271763 0 cmyk
f
871.948 793.05 mo
862.136 788.215 li
862.035 787.903 li
861.959 787.866 li
861.951 787.844 li
871.841 792.717 li
871.948 793.05 li
808.021 793.05 mo
824.402 742.13 li
839.985 693.692 li
842.74 702.257 li
845.677 737.256 li
839.985 719.561 li
834.292 737.256 li
824.403 742.13 li
818.327 761.018 li
829.669 751.626 li
818.005 787.885 li
817.968 787.903 li
817.875 788.194 li
808.021 793.05 li
849.055 738.92 mo
845.677 737.256 li
845.677 737.256 li
849.055 738.92 li
849.055 738.92 li
f
883.442 854.646 mo
883.442 854.646 li
870.278 813.727 li
870.278 813.727 li
883.442 854.646 li
796.528 854.646 mo
809.419 814.575 li
838.961 790.115 li
861.049 806.769 li
864.275 845.201 li
846.054 836.22 li
839.985 833.229 li
833.376 836.486 li
796.528 854.646 li
818.005 787.885 mo
829.669 751.626 li
839.249 743.694 li
850.145 751.909 li
852.782 783.324 li
859.354 786.563 li
859.355 786.583 li
840.001 777.045 li
818.005 787.885 li
861.959 787.866 mo
861.958 787.866 li
861.951 787.843 li
861.951 787.844 li
861.959 787.866 li
834.292 737.256 mo
839.985 719.561 li
845.677 737.255 li
845.677 737.256 li
845.677 737.256 li
839.985 734.451 li
834.292 737.256 li
f
864.844 746.702 mo
864.844 746.702 li
864.844 746.702 mo
855.673 742.182 li
847.088 715.495 li
849.055 738.92 li
845.677 737.256 li
842.74 702.257 li
839.985 669.427 li
864.844 746.702 li
.266697 0 .287541 0 cmyk
f
871.948 792.77 mo
871.841 792.717 li
861.951 787.844 li
861.951 787.843 li
858.582 777.371 li
859.354 786.563 li
852.782 783.324 li
850.145 751.909 li
861.563 760.518 li
855.567 742.13 li
849.055 738.92 li
849.055 738.92 li
847.088 715.495 li
855.673 742.182 li
855.674 742.182 li
871.948 792.77 li
f
883.442 854.646 mo
864.275 845.201 li
861.049 806.769 li
870.278 813.727 li
883.442 854.646 li
861.958 787.866 mo
859.355 786.583 li
859.354 786.563 li
858.582 777.371 li
861.951 787.843 li
861.958 787.866 li
f
818.327 761.018 mo
824.403 742.13 li
834.292 737.256 li
839.985 734.451 li
845.677 737.256 li
849.055 738.92 li
855.567 742.13 li
861.563 760.518 li
850.145 751.909 li
839.249 743.694 li
829.669 751.626 li
818.327 761.018 li
.276432 0 .293095 0 cmyk
f
809.376 814.61 mo
817.875 788.194 li
817.968 787.903 li
818.005 787.885 li
840.001 777.045 li
859.355 786.583 li
861.958 787.866 li
861.959 787.866 li
862.035 787.903 li
862.136 788.215 li
870.512 813.903 li
870.278 813.727 li
870.278 813.727 li
861.049 806.769 li
838.961 790.115 li
809.419 814.575 li
809.376 814.61 li
f
736.894 629.43 mo
740.396 889.652 li
723.988 889.652 li
727.491 629.43 li
736.894 629.43 li
cp
.235355 .0114443 0 0 cmyk
f
740.396 889.652 mo
723.988 889.652 li
724.669 858.907 li
739.714 858.907 li
740.396 889.652 li
cp
.336095 .0657053 0 0 cmyk
f
739.556 851.816 mo
724.827 851.816 li
724.923 847.434 li
739.458 847.434 li
739.556 851.816 li
cp
f
734.738 634.777 mo
676.485 697.257 li
676.536 691.829 li
711.327 636.275 li
730.305 630.644 li
734.738 634.777 li
cp
f
721.709 648.751 mo
676.485 697.256 li
676.536 691.828 li
698.294 657.084 li
721.709 648.751 li
cp
.235355 .0114443 0 0 cmyk
f
729.045 633.345 mo
704.064 551.656 li
708.739 554.415 li
739.454 612.321 li
734.841 631.572 li
729.045 633.345 li
cp
.336095 .0657053 0 0 cmyk
f
723.458 615.075 mo
704.064 551.656 li
708.739 554.415 li
727.949 590.63 li
723.458 615.075 li
cp
.235355 .0114443 0 0 cmyk
f
732.921 629.221 mo
816.157 648.431 li
811.43 651.101 li
745.924 648.747 li
731.558 635.127 li
732.921 629.221 li
cp
.336095 .0657053 0 0 cmyk
f
751.538 633.518 mo
816.157 648.431 li
811.43 651.101 li
770.461 649.628 li
751.538 633.518 li
cp
.235355 .0114443 0 0 cmyk
f
742.04 634.679 mo
739.085 625.018 li
729.242 622.747 li
722.352 630.135 li
725.307 639.796 li
735.151 642.068 li
742.04 634.679 li
cp
.157504 0 0 0 cmyk
f
741.308 632.288 mo
724.576 637.405 li
723.083 632.527 li
739.816 627.409 li
741.308 632.288 li
cp
.0274357 .0173037 .0173037 0 cmyk
f
613.015 663.569 mo
609.973 889.652 li
624.229 889.652 li
621.185 663.569 li
613.015 663.569 li
cp
.235355 .0114443 0 0 cmyk
f
609.571 889.652 mo
624.673 889.652 li
624.045 861.355 li
610.198 861.355 li
609.571 889.652 li
cp
.336095 .0657053 0 0 cmyk
f
610.343 854.828 mo
623.901 854.828 li
623.811 850.795 li
610.434 850.795 li
610.343 854.828 li
cp
f
614.889 668.215 mo
665.5 722.498 li
665.456 717.782 li
635.228 669.517 li
618.74 664.624 li
614.889 668.215 li
cp
f
626.208 680.355 mo
665.5 722.498 li
665.456 717.781 li
646.55 687.596 li
626.208 680.355 li
cp
.235355 .0114443 0 0 cmyk
f
619.833 666.971 mo
641.539 595.999 li
637.477 598.396 li
610.792 648.705 li
614.798 665.431 li
619.833 666.971 li
cp
.336095 .0657053 0 0 cmyk
f
624.688 651.098 mo
641.539 596 li
637.477 598.396 li
620.787 629.86 li
624.688 651.098 li
cp
.235355 .0114443 0 0 cmyk
f
616.466 663.388 mo
544.151 680.077 li
548.257 682.397 li
605.169 680.352 li
617.651 668.519 li
616.466 663.388 li
cp
.336095 .0657053 0 0 cmyk
f
600.293 667.121 mo
544.151 680.077 li
548.257 682.397 li
583.852 681.118 li
600.293 667.121 li
cp
.235355 .0114443 0 0 cmyk
f
608.544 668.13 mo
611.112 659.736 li
619.664 657.763 li
625.649 664.182 li
623.083 672.575 li
614.53 674.549 li
608.544 668.13 li
cp
.157504 0 0 0 cmyk
f
609.18 666.052 mo
623.717 670.498 li
625.014 666.26 li
610.476 661.814 li
609.18 666.052 li
cp
.0274357 .0173037 .0173037 0 cmyk
f
742.654 839.681 mo
733.569 839.681 725.337 843.276 719.251 849.096 cv
712.57 836.577 699.389 828.051 684.208 828.051 cv
673.298 828.051 663.449 832.475 656.281 839.603 cv
653.294 837.396 649.613 836.075 645.615 836.075 cv
635.681 836.075 627.628 844.128 627.628 854.061 cv
627.628 858.219 629.053 862.035 631.421 865.081 cv
631.06 865.823 630.686 866.557 630.372 867.324 cv
613.308 849.832 583.572 857.998 577.914 881.821 cv
647.119 881.821 li
647.169 881.956 647.206 882.098 647.258 882.233 cv
775.39 882.233 li
776.121 879.464 776.548 876.573 776.548 873.575 cv
776.548 854.856 761.374 839.681 742.654 839.681 cv
cp
.491066 0 .719966 0 cmyk
f
125.496 171.767 mo
121.429 171.767 117.736 173.327 114.948 175.863 cv
111.048 169.547 104.084 165.324 96.1177 165.324 cv
83.8901 165.324 73.978 175.237 73.978 187.464 cv
109.799 187.464 li
118.256 187.464 li
141.192 187.464 li
141.192 178.795 134.165 171.767 125.496 171.767 cv
cp
.00122072 0 0 0 cmyk
f
866.226 593.838 mo
862.215 593.838 858.574 595.376 855.824 597.877 cv
851.978 591.649 845.111 587.484 837.253 587.484 cv
825.194 587.484 815.418 597.259 815.418 609.318 cv
850.746 609.318 li
859.086 609.318 li
881.706 609.318 li
881.706 600.769 874.775 593.838 866.226 593.838 cv
cp
f
766.787 687.685 mo
757.929 687.685 750.75 694.865 750.75 703.722 cv
782.824 703.722 li
782.824 694.865 775.643 687.685 766.787 687.685 cv
cp
f
663.88 615.045 mo
655.024 615.045 647.843 622.226 647.843 631.083 cv
679.917 631.083 li
679.917 622.226 672.738 615.045 663.88 615.045 cv
cp
f
904.609 881.577 mo
889.884 881.577 li
889.884 826.937 li
904.609 826.937 li
904.609 881.577 li
cp
.301793 .485756 .45066 .026276 cmyk
f
889.884 826.937 mo
889.884 827.139 889.884 839.464 889.884 839.268 cv
895.483 839.268 900.022 843.187 900.022 848.786 cv
900.022 881.577 li
905.017 881.577 li
905.017 817.248 905.017 851.903 905.017 826.937 cv
899.483 826.937 902.342 826.937 889.884 826.937 cv
cp
.340154 .532189 .527245 .0806592 cmyk
f
897.773 632.667 mo
868.101 724.902 li
897.773 710.279 li
927.445 724.902 li
897.773 632.667 li
cp
.491066 0 .719966 0 cmyk
f
897.773 661.63 mo
859.622 780.222 li
897.773 761.42 li
935.923 780.222 li
897.773 661.63 li
cp
f
897.773 692.506 mo
845.903 853.742 li
897.773 828.18 li
949.642 853.742 li
897.773 692.506 li
cp
f
897.773 632.667 mo
927.445 724.902 li
904.567 713.627 li
897.773 632.667 li
cp
.53283 .0193179 .769436 0 cmyk
f
906.251 687.653 mo
935.923 779.888 li
913.046 768.614 li
906.251 687.653 li
cp
f
919.97 761.508 mo
949.642 853.742 li
926.765 842.468 li
919.97 761.508 li
cp
f
916.372 719.445 mo
897.773 710.279 li
879.173 719.445 li
871.921 741.989 li
896.895 721.312 li
923.528 741.392 li
916.372 719.445 li
cp
.576196 .102846 .797513 .00201419 cmyk
f
924.09 774.079 mo
897.792 761.119 li
871.495 774.079 li
861.24 805.956 li
896.551 776.718 li
934.209 805.112 li
924.09 774.079 li
cp
f
942.025 893.25 mo
569.538 893.25 li
565.285 893.25 561.837 889.802 561.837 885.55 cv
561.837 881.297 565.285 877.849 569.538 877.849 cv
942.025 877.849 li
946.278 877.849 949.726 881.297 949.726 885.55 cv
949.726 889.802 946.278 893.25 942.025 893.25 cv
cp
f
869.653 879.125 mo
711.587 879.125 li
707.334 879.125 703.886 875.677 703.886 871.425 cv
703.886 867.172 707.334 863.724 711.587 863.724 cv
869.653 863.724 li
873.906 863.724 877.354 867.172 877.354 871.425 cv
877.354 875.677 873.906 879.125 869.653 879.125 cv
cp
.347478 .284794 .288029 0 cmyk
f
901.542 876.101 mo
904.774 870.549 910.776 866.808 917.664 866.808 cv
926.633 866.808 934.122 873.14 935.911 881.576 cv
903.375 881.576 li
899.417 881.576 li
851.561 881.576 li
856.831 856.716 890.936 852.91 901.542 876.101 cv
cp
.576196 .102846 .797513 .00201419 cmyk
f
807.634 583.694 mo
807.046 582.6 805.137 577.852 798.547 575.752 cv
799.277 573.458 li
803.666 574.857 806.308 577.411 807.634 579.051 cv
808.959 577.411 811.602 574.857 815.991 573.458 cv
816.72 575.752 li
810.969 577.584 808.716 581.678 808.694 581.719 cv
807.634 583.694 li
cp
.227359 0 0 0 cmyk
f
780.381 599.289 mo
779.621 598.085 778.416 595.39 773.668 594.092 cv
774.302 591.771 li
777.38 592.613 779.329 594.123 780.393 595.194 cv
781.457 594.123 783.404 592.613 786.482 591.771 cv
787.117 594.092 li
782.566 595.336 781.318 597.84 780.381 599.289 cv
cp
f
348.445 389.408 mo
348.445 386.681 li
348.445 382.38 344.958 378.893 340.656 378.893 cv
311.873 378.893 268.081 368.488 268.081 368.488 cv
268.081 368.488 230.025 356.502 206.417 356.502 cv
182.81 356.502 144.753 368.489 144.753 368.489 cv
144.753 368.489 100.961 378.893 72.1782 378.893 cv
69.0503 378.893 li
64.7485 378.893 61.2612 382.38 61.2612 386.681 cv
61.2612 389.408 li
348.445 389.408 li
cp
.491066 0 .719966 0 cmyk
f
435.043 393.83 mo
62.5562 393.83 li
58.3022 393.83 54.855 390.382 54.855 386.129 cv
54.855 381.876 58.3022 378.428 62.5562 378.428 cv
435.043 378.428 li
439.296 378.428 442.744 381.876 442.744 386.129 cv
442.744 390.382 439.296 393.83 435.043 393.83 cv
cp
.576196 .102846 .797513 .00201419 cmyk
f
156.332 630.077 mo
154.846 627.668 153.974 624.841 153.974 621.804 cv
153.974 613.077 161.048 606.003 169.774 606.003 cv
172.601 606.003 175.248 606.754 177.543 608.055 cv
179.537 596.032 189.978 586.863 202.566 586.863 cv
214.611 586.863 224.689 595.26 227.282 606.518 cv
228.959 606.949 230.53 607.639 231.943 608.558 cv
235.286 603.741 240.848 600.582 247.155 600.582 cv
257.378 600.582 265.667 608.869 265.667 619.093 cv
265.655 619.316 li
267.116 618.455 268.814 617.951 270.633 617.951 cv
276.06 617.951 280.459 622.351 280.459 627.778 cv
280.459 628.571 280.356 629.338 280.178 630.077 cv
156.332 630.077 li
cp
.224582 .354101 .293431 0 cmyk
f
751.85 109.684 mo
751.851 109.653 li
751.851 98.365 742.7 89.2141 731.412 89.2141 cv
724.849 89.2141 719.012 92.311 715.273 97.1194 cv
711.64 88.7891 703.335 82.9636 693.667 82.9636 cv
685.333 82.9636 678.015 87.2944 673.826 93.8242 cv
670.303 90.9436 665.802 89.2141 660.897 89.2141 cv
649.609 89.2141 640.458 98.365 640.458 109.653 cv
640.458 109.684 li
751.85 109.684 li
cp
.500725 .408392 .307347 .0179751 cmyk
f
120.782 665.887 mo
116.587 665.887 112.778 667.496 109.902 670.112 cv
105.879 663.597 98.6968 659.241 90.478 659.241 cv
77.8647 659.241 67.6401 669.466 67.6401 682.079 cv
104.59 682.079 li
113.315 682.079 li
136.973 682.079 li
136.973 673.136 129.724 665.887 120.782 665.887 cv
cp
.0444648 .11899 .0719615 0 cmyk
f
912.819 234.906 mo
908.625 234.906 904.815 236.514 901.939 239.131 cv
897.917 232.616 890.733 228.26 882.514 228.26 cv
869.902 228.26 859.677 238.484 859.677 251.097 cv
896.627 251.097 li
905.352 251.097 li
929.01 251.097 li
929.01 242.155 921.761 234.906 912.819 234.906 cv
cp
.500725 .408392 .307347 .0179751 cmyk
f
441.753 884.112 mo
441.753 881.855 li
441.753 878.296 438.868 875.41 435.308 875.41 cv
426.228 875.41 395.96 866.686 395.96 866.686 cv
395.96 866.686 363.494 856.882 343.958 856.882 cv
324.423 856.882 292.932 866.801 292.932 866.801 cv
292.932 866.801 271.054 875.41 247.236 875.41 cv
244.647 875.41 li
241.088 875.41 238.203 878.296 238.203 881.855 cv
238.203 884.112 li
441.753 884.112 li
.491066 0 .719966 0 cmyk
f
400.399 379.533 mo
390.482 379.533 li
390.482 342.732 li
400.399 342.732 li
400.399 379.533 li
cp
.301793 .485756 .45066 .026276 cmyk
f
390.482 342.732 mo
390.482 342.869 390.482 351.169 390.482 351.037 cv
394.253 351.037 397.31 353.677 397.31 357.448 cv
397.31 379.533 li
400.674 379.533 li
400.674 336.207 400.674 359.548 400.674 342.732 cv
396.947 342.732 398.873 342.732 390.482 342.732 cv
cp
.340154 .532189 .527245 .0806592 cmyk
f
395.795 211.89 mo
375.811 274.01 li
395.795 264.162 li
415.779 274.01 li
395.795 211.89 li
cp
.491066 0 .719966 0 cmyk
f
395.795 231.397 mo
370.1 311.27 li
395.795 298.606 li
421.49 311.27 li
395.795 231.397 li
cp
f
395.795 252.192 mo
360.86 360.786 li
395.795 343.57 li
430.73 360.786 li
395.795 252.192 li
cp
f
395.795 211.89 mo
415.779 274.01 li
400.372 266.417 li
395.795 211.89 li
cp
.53283 .0193179 .769436 0 cmyk
f
401.505 248.924 mo
421.49 311.045 li
406.082 303.451 li
401.505 248.924 li
cp
f
410.746 298.665 mo
430.73 360.786 li
415.322 353.193 li
410.746 298.665 li
cp
f
408.322 270.335 mo
395.795 264.162 li
383.268 270.335 li
378.384 285.519 li
395.204 271.593 li
413.141 285.117 li
408.322 270.335 li
cp
.576196 .102846 .797513 .00201419 cmyk
f
413.52 307.132 mo
395.808 298.403 li
378.096 307.132 li
371.19 328.601 li
394.972 308.91 li
420.335 328.033 li
413.52 307.132 li
cp
f
183.934 378.335 mo
179.837 378.335 li
179.837 345.565 li
183.934 345.565 li
183.934 378.335 li
cp
.0709544 .1337 .158694 0 cmyk
f
188.03 378.335 mo
183.934 378.335 li
183.934 345.565 li
188.03 345.565 li
188.03 378.335 li
cp
0 .033753 .0823682 0 cmyk
f
232.194 328.294 mo
205.695 358.579 li
151.391 358.579 li
177.833 328.296 li
232.194 328.294 li
cp
.770932 .348821 .387732 .0517891 cmyk
f
220.308 340.291 mo
206.192 340.291 li
215.121 329.816 li
229.236 329.816 li
220.308 340.291 li
cp
192.426 356.514 mo
203.431 343.536 li
217.546 343.536 li
206.542 356.514 li
192.426 356.514 li
cp
185.056 343.536 mo
199.171 343.536 li
188.167 356.514 li
174.051 356.514 li
185.056 343.536 li
cp
166.68 343.536 mo
180.796 343.536 li
169.792 356.514 li
155.676 356.514 li
166.68 343.536 li
cp
183.557 340.291 mo
169.442 340.291 li
178.37 329.816 li
192.485 329.816 li
183.557 340.291 li
cp
210.86 329.816 mo
201.932 340.291 li
187.817 340.291 li
196.745 329.816 li
210.86 329.816 li
cp
236.1 326.755 mo
176.871 326.572 li
148.158 359.759 li
207.984 359.759 li
236.1 326.755 li
cp
.632898 .0876783 .270665 0 cmyk
f
148.158 359.759 mo
150.775 362.376 li
210.549 362.376 li
207.984 359.759 li
148.158 359.759 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
207.984 359.759 mo
236.1 326.755 li
238.291 328.945 li
210.549 362.376 li
207.984 359.759 li
cp
.525414 .0294499 .192477 0 cmyk
f
239.593 378.335 mo
235.497 378.335 li
235.497 345.565 li
239.593 345.565 li
239.593 378.335 li
cp
.0709544 .1337 .158694 0 cmyk
f
243.689 378.335 mo
239.593 378.335 li
239.593 345.565 li
243.689 345.565 li
243.689 378.335 li
cp
0 .033753 .0823682 0 cmyk
f
287.853 328.294 mo
261.354 358.579 li
207.05 358.579 li
233.493 328.296 li
287.853 328.294 li
cp
.770932 .348821 .387732 .0517891 cmyk
f
275.967 340.291 mo
261.852 340.291 li
270.78 329.816 li
284.895 329.816 li
275.967 340.291 li
cp
248.086 356.514 mo
259.09 343.536 li
273.207 343.536 li
262.202 356.514 li
248.086 356.514 li
cp
240.715 343.536 mo
254.831 343.536 li
243.826 356.514 li
229.711 356.514 li
240.715 343.536 li
cp
222.34 343.536 mo
236.456 343.536 li
225.451 356.514 li
211.335 356.514 li
222.34 343.536 li
cp
239.216 340.291 mo
225.101 340.291 li
234.029 329.816 li
248.144 329.816 li
239.216 340.291 li
cp
266.52 329.816 mo
257.591 340.291 li
243.476 340.291 li
252.404 329.816 li
266.52 329.816 li
cp
291.759 326.755 mo
232.53 326.572 li
203.818 359.759 li
263.643 359.759 li
291.759 326.755 li
cp
.632898 .0876783 .270665 0 cmyk
f
203.818 359.759 mo
206.435 362.376 li
266.208 362.376 li
263.643 359.759 li
203.818 359.759 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
263.643 359.759 mo
291.759 326.755 li
293.95 328.945 li
266.208 362.376 li
263.643 359.759 li
cp
.525414 .0294499 .192477 0 cmyk
f
295.084 378.335 mo
290.988 378.335 li
290.988 345.565 li
295.084 345.565 li
295.084 378.335 li
cp
.0709544 .1337 .158694 0 cmyk
f
299.18 378.335 mo
295.084 378.335 li
295.084 345.565 li
299.18 345.565 li
299.18 378.335 li
cp
0 .033753 .0823682 0 cmyk
f
343.344 328.294 mo
316.845 358.579 li
262.542 358.579 li
288.984 328.296 li
343.344 328.294 li
cp
.770932 .348821 .387732 .0517891 cmyk
f
331.458 340.291 mo
317.343 340.291 li
326.271 329.816 li
340.386 329.816 li
331.458 340.291 li
cp
303.578 356.514 mo
314.582 343.536 li
328.698 343.536 li
317.693 356.514 li
303.578 356.514 li
cp
296.207 343.536 mo
310.322 343.536 li
299.317 356.514 li
285.203 356.514 li
296.207 343.536 li
cp
277.832 343.536 mo
291.947 343.536 li
280.942 356.514 li
266.827 356.514 li
277.832 343.536 li
cp
294.708 340.291 mo
280.592 340.291 li
289.52 329.816 li
303.635 329.816 li
294.708 340.291 li
cp
322.011 329.816 mo
313.083 340.291 li
298.967 340.291 li
307.895 329.816 li
322.011 329.816 li
cp
347.25 326.755 mo
288.021 326.572 li
259.309 359.759 li
319.134 359.759 li
347.25 326.755 li
cp
.632898 .0876783 .270665 0 cmyk
f
259.309 359.759 mo
261.926 362.376 li
321.7 362.376 li
319.134 359.759 li
259.309 359.759 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
319.134 359.759 mo
347.25 326.755 li
349.441 328.945 li
321.7 362.376 li
319.134 359.759 li
cp
.525414 .0294499 .192477 0 cmyk
f
354.863 376.985 mo
357.319 372.765 361.881 369.923 367.116 369.923 cv
373.933 369.923 379.625 374.735 380.984 381.147 cv
356.255 381.147 li
353.248 381.147 li
316.876 381.147 li
320.881 362.252 346.802 359.36 354.863 376.985 cv
cp
.576196 .102846 .797513 .00201419 cmyk
f
96.1255 379.533 mo
87.8735 379.533 li
87.8735 348.912 li
96.1255 348.912 li
96.1255 379.533 li
cp
.301793 .485756 .45066 .026276 cmyk
f
87.8735 348.912 mo
87.8735 349.026 87.8735 355.932 87.8735 355.823 cv
91.0112 355.823 93.5552 358.019 93.5552 361.156 cv
93.5552 379.533 li
96.354 379.533 li
96.354 343.482 96.354 362.904 96.354 348.912 cv
93.2524 348.912 94.855 348.912 87.8735 348.912 cv
cp
.340154 .532189 .527245 .0806592 cmyk
f
92.2944 240.04 mo
75.6655 291.73 li
92.2944 283.535 li
108.922 291.73 li
92.2944 240.04 li
cp
.491066 0 .719966 0 cmyk
f
92.2944 256.272 mo
70.9136 322.732 li
92.2944 312.196 li
113.674 322.732 li
92.2944 256.272 li
cp
f
92.2944 273.575 mo
63.2251 363.934 li
92.2944 349.609 li
121.363 363.934 li
92.2944 273.575 li
cp
f
92.2944 240.04 mo
108.922 291.73 li
96.1021 285.412 li
92.2944 240.04 li
cp
.53283 .0193179 .769436 0 cmyk
f
97.0454 270.856 mo
113.674 322.545 li
100.854 316.227 li
97.0454 270.856 li
cp
f
104.734 312.245 mo
121.363 363.934 li
108.542 357.616 li
104.734 312.245 li
cp
f
102.717 288.672 mo
92.2944 283.535 li
81.8706 288.672 li
77.8062 301.306 li
91.8022 289.718 li
106.728 300.971 li
102.717 288.672 li
cp
.576196 .102846 .797513 .00201419 cmyk
f
107.043 319.29 mo
92.3052 312.027 li
77.5669 319.29 li
71.8208 337.154 li
91.6099 320.769 li
112.714 336.681 li
107.043 319.29 li
cp
f
785.137 850.586 mo
789.422 850.206 li
789.422 850.206 791.169 851.904 790.943 854.506 cv
778.417 855.707 li
780.125 852.161 785.137 850.586 785.137 850.586 cv
cp
.311955 .439399 .366155 .00973526 cmyk
f
813.677 803.028 mo
813.677 803.028 784.094 814.818 780.705 820.035 cv
777.315 825.252 785.137 850.586 785.137 850.586 cv
789.422 850.206 li
789.422 850.206 789.924 833.746 788.03 825.397 cv
799.724 830.138 815.818 822.251 815.818 822.251 cv
813.677 803.028 li
cp
.421942 .0599985 0 0 cmyk
f
792.146 865.014 mo
784.049 865.014 784.042 852.76 792.146 852.76 cv
800.242 852.76 800.25 865.014 792.146 865.014 cv
cp
.647486 .529869 .403937 .137575 cmyk
f
817.451 828.884 mo
764.251 828.884 li
764.251 825.572 li
817.451 825.572 li
817.451 828.884 li
cp
f
754.656 841.8 mo
745.234 841.8 737.568 849.466 737.568 858.887 cv
737.568 868.309 745.234 875.974 754.656 875.974 cv
764.077 875.974 771.743 868.309 771.743 858.887 cv
771.743 849.466 764.077 841.8 754.656 841.8 cv
cp
754.656 879.287 mo
743.407 879.287 734.255 870.136 734.255 858.887 cv
734.255 847.638 743.407 838.487 754.656 838.487 cv
765.904 838.487 775.055 847.638 775.055 858.887 cv
775.055 870.136 765.904 879.287 754.656 879.287 cv
cp
f
828.065 841.8 mo
818.644 841.8 810.978 849.466 810.978 858.887 cv
810.978 868.309 818.644 875.974 828.065 875.974 cv
837.487 875.974 845.153 868.309 845.153 858.887 cv
845.153 849.466 837.487 841.8 828.065 841.8 cv
cp
828.065 879.287 mo
816.817 879.287 807.666 870.136 807.666 858.887 cv
807.666 847.638 816.817 838.487 828.065 838.487 cv
839.314 838.487 848.465 847.638 848.465 858.887 cv
848.465 870.136 839.314 879.287 828.065 879.287 cv
cp
f
756.236 859.384 mo
753.075 858.391 li
769.639 805.713 li
772.799 806.707 li
756.236 859.384 li
cp
f
795.653 860.13 mo
792.887 858.306 li
819.265 818.306 li
826.401 816.367 li
827.27 819.563 li
821.342 821.173 li
795.653 860.13 li
cp
f
830.43 860.874 mo
789.969 860.874 li
772.083 828.044 li
774.992 826.459 li
791.937 857.562 li
825.701 857.562 li
814.887 827.818 li
818 826.685 li
830.43 860.874 li
cp
f
783.217 812.012 mo
779.904 812.012 li
779.904 806.713 777.856 807.866 764.036 807.866 cv
764.036 804.554 li
776.828 804.554 li
779.896 804.554 783.217 806.599 783.217 812.012 cv
cp
f
791.932 865.558 mo
795.886 864.738 li
795.886 864.738 798.022 866.35 798.084 868.773 cv
785.088 872.117 li
786.121 868.529 791.932 865.558 791.932 865.558 cv
cp
.311955 .439399 .366155 .00973526 cmyk
f
788.621 766.516 mo
790.768 776.239 li
797.955 768.803 li
791.91 765.036 li
788.621 766.516 li
cp
0 .24152 .343542 0 cmyk
f
797.955 768.803 mo
797.955 768.803 821.224 783.722 826.741 813.355 cv
800.962 813.355 li
790.768 776.239 li
797.955 768.803 li
cp
.620569 .362554 0 0 cmyk
f
796.312 783.309 mo
798.033 785.679 801.235 790.588 803.405 791.586 cv
798.595 790.709 783.993 803.085 783.993 803.085 cv
784.985 805.612 li
784.985 805.612 810.765 799.76 811.814 795.035 cv
812.537 791.778 806.714 781.983 803.816 777.917 cv
802.619 776.237 800.458 775.558 798.513 776.247 cv
795.606 777.277 794.5 780.813 796.312 783.309 cv
cp
0 .24152 .343542 0 cmyk
f
794.47 758.237 mo
794.598 755.155 793.474 752.226 791.552 750.187 cv
789.061 747.544 786.397 747.63 786.397 747.63 cv
782.875 747.487 779.36 750.363 777.963 754.721 cv
775.958 761.407 780.721 769.937 785.475 770.131 cv
788.889 770.271 791.883 766.479 793.244 763.313 cv
794.018 761.524 794.408 759.758 794.47 758.237 cv
cp
f
781.184 807.868 mo
783.964 806.344 786.019 805.676 785.128 803.932 cv
784.827 803.34 784.184 802.99 783.513 803.069 cv
779.751 803.515 li
778.387 803.677 777.346 804.965 777.664 806.302 cv
778.033 807.858 779.783 808.636 781.184 807.868 cv
cp
f
800.962 813.355 mo
786.649 830.405 li
791.932 865.558 li
795.844 864.738 li
795.844 864.738 803.579 841.632 794.912 834.721 cv
794.912 834.721 821.822 825.647 823.178 813.355 cv
800.962 813.355 li
cp
.287297 0 .0040589 0 cmyk
f
776.292 755.879 mo
783.756 753.934 li
784.151 756.481 li
787.913 755.899 li
792.268 765.212 li
796.339 759.232 li
796.558 741.506 777.882 743.623 776.292 755.879 cv
cp
.446021 .559655 .535119 .169772 cmyk
f
624.734 874.863 mo
623.44 879.779 li
617.937 879.779 li
622.135 877.947 li
622.755 874.495 li
624.734 874.863 li
cp
.0411994 .627466 .615167 .000457771 cmyk
f
616.284 835.772 mo
616.284 835.772 614.049 837.604 613.802 838.389 cv
613.802 838.389 610.583 839.173 609.963 839.668 cv
609.344 840.164 609.53 840.783 611.016 840.721 cv
611.962 840.681 616.559 840.842 616.559 840.842 cv
616.284 835.772 li
cp
0 .55285 .572015 0 cmyk
f
625.871 861.444 mo
624.894 862.05 622.997 862.654 622.124 861.906 cv
621.247 861.153 621.145 858.749 621.516 857.118 cv
623.738 847.343 623.547 839.673 621.937 836.642 cv
621.808 836.372 621.65 836.12 621.459 835.894 cv
621.458 835.891 li
621.456 835.89 li
620.814 835.127 619.854 834.641 618.779 834.641 cv
616.847 834.641 615.282 836.207 615.282 838.139 cv
615.282 839.931 616.629 841.406 618.366 841.611 cv
619.361 843.395 621.611 847.875 617.662 856.567 cv
613.779 865.112 616.039 871.233 620.415 873.697 cv
624.79 876.161 635.295 877.452 642.023 868.314 cv
645.47 862.406 li
640.032 864.04 634.879 855.853 625.871 861.444 cv
cp
0 0 0 0 cmyk
f
641.574 867.063 mo
640.36 868.388 638.918 869.548 637.245 870.343 cv
636.416 870.751 635.537 871.055 634.648 871.29 cv
633.75 871.519 632.871 871.681 631.943 871.787 cv
630.088 871.978 628.184 871.774 626.443 871.111 cv
624.707 870.465 623.117 869.329 622.145 867.801 cv
623.506 868.981 625.085 869.751 626.74 870.177 cv
628.397 870.594 630.12 870.7 631.806 870.512 cv
633.516 870.296 635.228 869.967 636.846 869.395 cv
638.471 868.822 640.009 867.959 641.574 867.063 cv
cp
.287175 .0665599 .0145571 0 cmyk
f
645.585 862.438 mo
644.741 863.09 643.831 863.635 642.88 864.108 cv
641.932 864.586 640.937 864.978 639.91 865.277 cv
638.882 865.572 637.819 865.767 636.747 865.82 cv
636.211 865.856 635.673 865.838 635.141 865.797 cv
634.608 865.735 634.079 865.632 633.565 865.51 cv
634.098 865.418 634.616 865.393 635.129 865.323 cv
635.387 865.284 635.643 865.257 635.897 865.205 cv
636.151 865.161 636.405 865.126 636.657 865.071 cv
637.665 864.873 638.657 864.633 639.643 864.349 cv
640.628 864.066 641.606 863.742 642.591 863.415 cv
643.575 863.082 644.56 862.733 645.585 862.438 cv
cp
f
627.777 873.558 mo
628.567 879.779 li
620.9 879.779 li
625.856 878.042 li
625.769 873.558 li
627.777 873.558 li
cp
0 .55285 .572015 0 cmyk
f
631.938 872.735 mo
631.338 873.142 630.651 873.392 629.944 873.545 cv
629.236 873.693 628.502 873.732 627.78 873.666 cv
627.056 873.601 626.341 873.43 625.671 873.156 cv
625.004 872.878 624.374 872.508 623.858 871.998 cv
624.564 872.15 625.224 872.31 625.888 872.429 cv
626.55 872.552 627.207 872.644 627.867 872.705 cv
628.527 872.765 629.19 872.794 629.863 872.793 cv
630.538 872.797 631.216 872.758 631.938 872.735 cv
cp
.287175 .0665599 .0145571 0 cmyk
f
618.09 837.156 mo
617.816 837.869 li
619.3 837.869 li
618.949 837.156 618.09 837.156 618.09 837.156 cv
cp
.394842 .163546 .10312 0 cmyk
f
673.942 873.079 mo
672.348 879.779 li
664.849 879.779 li
670.57 877.281 li
671.246 872.577 li
673.942 873.079 li
cp
.0411994 .627466 .615167 .000457771 cmyk
f
660.875 819.798 mo
660.875 819.798 657.83 822.296 657.492 823.365 cv
657.492 823.365 653.104 824.433 652.259 825.109 cv
651.416 825.784 651.669 826.628 653.695 826.543 cv
654.984 826.49 661.25 826.708 661.25 826.708 cv
660.875 819.798 li
cp
0 .55285 .572015 0 cmyk
f
674.023 853.722 mo
672.624 854.426 670.935 854.213 669.746 853.193 cv
668.55 852.167 668.106 850.527 668.579 849.024 cv
672.677 835.991 670.776 825.115 668.58 820.984 cv
668.405 820.616 668.188 820.273 667.93 819.965 cv
667.925 819.958 li
667.924 819.959 li
667.05 818.919 665.741 818.257 664.276 818.257 cv
661.643 818.257 659.508 820.391 659.508 823.025 cv
659.508 825.467 661.345 827.477 663.713 827.756 cv
665.068 830.189 667.489 836.941 662.106 848.788 cv
656.814 860.435 658.536 867.477 664.499 870.836 cv
670.462 874.195 688.949 877.578 695.056 863.633 cv
700.656 856.1 li
692.371 859.258 685.214 848.092 674.023 853.722 cv
cp
0 0 0 0 cmyk
f
696.787 861.444 mo
695.132 863.251 693.167 864.832 690.886 865.915 cv
689.757 866.471 688.558 866.885 687.347 867.205 cv
686.125 867.518 684.924 867.74 683.66 867.884 cv
681.132 868.144 678.537 867.865 676.164 866.961 cv
673.797 866.081 671.63 864.533 670.306 862.449 cv
672.162 864.058 674.314 865.108 676.569 865.69 cv
678.827 866.258 681.174 866.402 683.473 866.145 cv
685.804 865.85 688.138 865.402 690.343 864.623 cv
692.559 863.842 694.655 862.666 696.787 861.444 cv
cp
.287175 .0665599 .0145571 0 cmyk
f
700.346 856.519 mo
699.333 857.562 698.211 858.475 697.021 859.298 cv
695.834 860.127 694.569 860.849 693.241 861.452 cv
691.912 862.049 690.516 862.52 689.08 862.798 cv
688.365 862.951 687.635 863.031 686.909 863.079 cv
686.177 863.1 685.444 863.063 684.727 862.998 cv
685.428 862.771 686.123 862.637 686.801 862.442 cv
687.141 862.341 687.481 862.254 687.814 862.135 cv
688.148 862.026 688.484 861.929 688.813 861.806 cv
690.133 861.343 691.426 860.826 692.701 860.252 cv
693.976 859.678 695.231 859.052 696.497 858.419 cv
697.759 857.779 699.021 857.116 700.346 856.519 cv
cp
f
677.807 871.3 mo
680.01 879.779 li
670.131 879.779 li
676.315 877.412 li
675.071 871.3 li
677.807 871.3 li
cp
0 .55285 .572015 0 cmyk
f
680.823 871.381 mo
679.903 871.74 678.914 871.865 677.928 871.855 cv
676.942 871.838 675.956 871.667 675.014 871.362 cv
674.072 871.056 673.174 870.613 672.367 870.047 cv
671.564 869.475 670.837 868.792 670.306 867.958 cv
671.199 868.374 672.029 868.787 672.875 869.145 cv
673.717 869.509 674.562 869.829 675.421 870.11 cv
676.281 870.39 677.153 870.629 678.047 870.83 cv
678.943 871.04 679.857 871.194 680.823 871.381 cv
cp
.287175 .0665599 .0145571 0 cmyk
f
663.336 821.684 mo
662.963 822.656 li
664.986 822.656 li
664.507 821.684 663.336 821.684 663.336 821.684 cv
cp
.394842 .163546 .10312 0 cmyk
f
381.102 884.707 mo
375.357 884.707 li
375.357 699.094 li
375.357 697.356 374.422 692.771 367.677 692.771 cv
363.426 692.771 li
363.426 687.026 li
367.677 687.026 li
380.273 687.026 381.102 694.187 381.102 699.094 cv
381.102 884.707 li
.222141 .182895 .07187 0 cmyk
f
310.209 677.11 mo
310.209 880.383 li
286.948 880.383 li
286.948 680.563 li
286.948 679.398 287.001 678.247 287.108 677.11 cv
310.209 677.11 li
f
360.737 680.563 mo
360.737 880.383 li
310.209 880.383 li
310.209 677.11 li
360.577 677.11 li
360.683 678.247 360.737 679.398 360.737 680.563 cv
.13193 .110689 .0139773 0 cmyk
f
322.041 643.715 mo
314.761 650.434 310.209 660.084 310.209 670.779 cv
310.209 677.11 li
287.108 677.11 li
288.794 658.934 303.652 644.599 322.041 643.715 cv
.0015259 .664118 .531212 0 cmyk
f
360.577 677.11 mo
310.209 677.11 li
310.209 670.779 li
310.209 660.084 314.761 650.434 322.041 643.715 cv
322.644 643.675 323.247 643.662 323.849 643.662 cv
334.035 643.662 343.256 647.784 349.936 654.463 cv
355.838 660.379 359.76 668.303 360.577 677.11 cv
0 .523857 .400275 0 cmyk
f
310.209 703.223 mo
286.446 703.223 li
284.874 703.223 283.601 701.95 283.601 700.379 cv
283.601 698.808 284.874 697.534 286.446 697.534 cv
310.209 697.534 li
310.209 703.223 li
.13257 .0897536 0 0 cmyk
f
360.73 703.223 mo
310.209 703.223 li
310.209 697.534 li
360.73 697.534 li
362.301 697.534 363.575 698.808 363.575 700.379 cv
363.575 701.95 362.301 703.223 360.73 703.223 cv
.0468452 .0315557 0 0 cmyk
f
310.209 706.124 mo
287.108 706.124 li
287.108 703.223 li
310.209 703.223 li
310.209 706.124 li
.331212 .271977 .16965 0 cmyk
f
360.577 706.124 mo
310.209 706.124 li
310.209 703.223 li
360.577 703.223 li
360.577 706.124 li
.250278 .203525 .106508 0 cmyk
f
310.209 734.9 mo
286.446 734.9 li
284.874 734.9 283.601 733.627 283.601 732.056 cv
283.601 730.485 284.874 729.212 286.446 729.212 cv
310.209 729.212 li
310.209 734.9 li
.13257 .0897536 0 0 cmyk
f
360.73 734.9 mo
310.209 734.9 li
310.209 729.212 li
360.73 729.212 li
362.301 729.212 363.575 730.485 363.575 732.056 cv
363.575 733.627 362.301 734.9 360.73 734.9 cv
.0468452 .0315557 0 0 cmyk
f
310.209 737.8 mo
287.108 737.8 li
287.108 734.9 li
310.209 734.9 li
310.209 737.8 li
.331212 .271977 .16965 0 cmyk
f
360.577 737.8 mo
310.209 737.8 li
310.209 734.9 li
360.577 734.9 li
360.577 737.8 li
.250278 .203525 .106508 0 cmyk
f
310.209 766.577 mo
286.446 766.577 li
284.874 766.577 283.601 765.304 283.601 763.733 cv
283.601 762.162 284.874 760.889 286.446 760.889 cv
310.209 760.889 li
310.209 766.577 li
.13257 .0897536 0 0 cmyk
f
360.73 766.577 mo
310.209 766.577 li
310.209 760.889 li
360.73 760.889 li
362.301 760.889 363.575 762.162 363.575 763.733 cv
363.575 765.304 362.301 766.577 360.73 766.577 cv
.0468452 .0315557 0 0 cmyk
f
310.209 769.478 mo
287.108 769.478 li
287.108 766.577 li
310.209 766.577 li
310.209 769.478 li
.331212 .271977 .16965 0 cmyk
f
360.577 769.478 mo
310.209 769.478 li
310.209 766.577 li
360.577 766.577 li
360.577 769.478 li
.250278 .203525 .106508 0 cmyk
f
310.209 798.254 mo
286.446 798.254 li
284.874 798.254 283.601 796.981 283.601 795.41 cv
283.601 793.839 284.874 792.566 286.446 792.566 cv
310.209 792.566 li
310.209 798.254 li
.13257 .0897536 0 0 cmyk
f
360.73 798.254 mo
310.209 798.254 li
310.209 792.566 li
360.73 792.566 li
362.301 792.566 363.575 793.839 363.575 795.41 cv
363.575 796.981 362.301 798.254 360.73 798.254 cv
.0468452 .0315557 0 0 cmyk
f
310.209 801.154 mo
287.108 801.154 li
287.108 798.254 li
310.209 798.254 li
310.209 801.154 li
.331212 .271977 .16965 0 cmyk
f
360.577 801.154 mo
310.209 801.154 li
310.209 798.254 li
360.577 798.254 li
360.577 801.154 li
.250278 .203525 .106508 0 cmyk
f
310.209 829.931 mo
286.446 829.931 li
284.874 829.931 283.601 828.657 283.601 827.087 cv
283.601 825.516 284.874 824.242 286.446 824.242 cv
310.209 824.242 li
310.209 829.931 li
.13257 .0897536 0 0 cmyk
f
360.73 829.931 mo
310.209 829.931 li
310.209 824.242 li
360.73 824.242 li
362.301 824.242 363.575 825.516 363.575 827.087 cv
363.575 828.657 362.301 829.931 360.73 829.931 cv
.0468452 .0315557 0 0 cmyk
f
310.209 832.831 mo
287.108 832.831 li
287.108 829.931 li
310.209 829.931 li
310.209 832.831 li
.331212 .271977 .16965 0 cmyk
f
360.577 832.831 mo
310.209 832.831 li
310.209 829.931 li
360.577 829.931 li
360.577 832.831 li
.250278 .203525 .106508 0 cmyk
f
310.209 861.608 mo
286.446 861.608 li
284.874 861.608 283.601 860.335 283.601 858.764 cv
283.601 857.193 284.874 855.92 286.446 855.92 cv
310.209 855.92 li
310.209 861.608 li
.13257 .0897536 0 0 cmyk
f
360.73 861.608 mo
310.209 861.608 li
310.209 855.92 li
360.73 855.92 li
362.301 855.92 363.575 857.193 363.575 858.764 cv
363.575 860.335 362.301 861.608 360.73 861.608 cv
.0468452 .0315557 0 0 cmyk
f
310.209 864.508 mo
287.108 864.508 li
287.108 861.608 li
310.209 861.608 li
310.209 864.508 li
.331212 .271977 .16965 0 cmyk
f
360.577 864.508 mo
310.209 864.508 li
310.209 861.608 li
360.577 861.608 li
360.577 864.508 li
.250278 .203525 .106508 0 cmyk
f
370.284 692.535 mo
363.575 692.535 li
363.575 687.181 li
370.284 687.181 li
370.284 692.535 li
.275914 .225834 .118868 0 cmyk
f
362.101 693.915 mo
360.737 693.915 li
360.737 685.884 li
362.101 685.884 li
364.319 685.884 366.117 687.682 366.117 689.899 cv
366.117 692.117 364.319 693.915 362.101 693.915 cv
cp
.431464 .345281 .156954 0 cmyk
f
360.737 680.563 mo
360.737 680.563 li
360.737 679.398 360.683 678.247 360.577 677.11 cv
360.737 677.11 li
360.737 680.563 li
.0733349 .0238956 .0374456 0 cmyk
f
310.209 680.563 mo
287.108 680.563 li
287.108 677.11 li
310.209 677.11 li
310.209 680.563 li
.275914 .225834 .118868 0 cmyk
f
360.737 680.563 mo
310.209 680.563 li
310.209 677.11 li
360.577 677.11 li
360.683 678.247 360.737 679.398 360.737 680.563 cv
360.737 680.563 li
.191501 .158267 .0554208 0 cmyk
f
255.103 752.779 mo
255.103 763.855 246.125 772.834 235.048 772.834 cv
223.972 772.834 214.994 763.855 214.994 752.779 cv
214.994 741.704 223.972 732.725 235.048 732.725 cv
246.125 732.725 255.103 741.704 255.103 752.779 cv
cp
.224582 .354101 .293431 0 cmyk
f
273.583 782.862 mo
273.583 795.836 263.064 806.354 250.089 806.354 cv
237.115 806.354 226.597 795.836 226.597 782.862 cv
226.597 769.887 237.115 759.369 250.089 759.369 cv
263.064 759.369 273.583 769.887 273.583 782.862 cv
cp
f
272.15 735.518 mo
272.15 747.029 262.818 756.361 251.307 756.361 cv
239.796 756.361 230.464 747.029 230.464 735.518 cv
230.464 724.007 239.796 714.675 251.307 714.675 cv
262.818 714.675 272.15 724.007 272.15 735.518 cv
cp
f
255.247 718.113 mo
255.247 725.392 249.346 731.292 242.068 731.292 cv
234.79 731.292 228.889 725.392 228.889 718.113 cv
228.889 710.835 234.79 704.935 242.068 704.935 cv
249.346 704.935 255.247 710.835 255.247 718.113 cv
cp
f
274.012 685.309 mo
274.012 689.107 270.934 692.185 267.136 692.185 cv
263.338 692.185 260.26 689.107 260.26 685.309 cv
260.26 681.512 263.338 678.433 267.136 678.433 cv
270.934 678.433 274.012 681.512 274.012 685.309 cv
cp
f
277.92 778.313 mo
241.447 778.313 li
204.973 778.313 li
195.172 867.795 li
241.447 867.795 li
287.721 867.795 li
277.92 778.313 li
cp
.266575 .210025 .215061 0 cmyk
f
277.734 766.241 mo
204.969 766.241 li
204.969 778.313 li
277.734 778.313 li
277.734 766.241 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
287.717 867.795 mo
277.917 778.313 li
241.443 778.313 li
241.443 867.795 li
287.717 867.795 li
cp
.0938125 .0621347 .0799268 0 cmyk
f
241.443 778.313 mo
277.734 778.313 li
277.734 766.241 li
241.443 766.241 li
241.443 778.313 li
cp
0 .727108 .482521 0 cmyk
f
277.958 818.454 mo
277.958 826.991 271.037 833.913 262.499 833.913 cv
253.96 833.913 247.039 826.991 247.039 818.454 cv
247.039 809.916 253.96 802.994 262.499 802.994 cv
271.037 802.994 277.958 809.916 277.958 818.454 cv
cp
0 .308659 .762325 0 cmyk
f
260.498 822.065 mo
255.764 830.261 li
257.75 831.42 260.039 832.108 262.499 832.108 cv
264.911 832.108 267.16 831.456 269.117 830.338 cv
264.384 822.103 li
263.818 822.411 263.189 822.603 262.499 822.603 cv
261.765 822.603 261.084 822.411 260.498 822.065 cv
cp
255.688 807.135 mo
251.739 809.475 249.069 813.766 249.069 818.679 cv
258.574 818.679 li
258.574 817.255 259.336 816.031 260.459 815.331 cv
255.688 807.135 li
cp
269.233 807.058 mo
264.5 815.292 li
265.662 815.985 266.462 817.238 266.462 818.679 cv
266.462 818.794 li
275.928 818.794 li
275.928 818.679 li
275.928 813.727 273.232 809.386 269.233 807.058 cv
cp
.665827 .576745 .411841 .172671 cmyk
f
265.25 818.676 mo
265.25 820.194 264.018 821.423 262.501 821.423 cv
260.984 821.423 259.753 820.194 259.753 818.676 cv
259.753 817.159 260.984 815.928 262.501 815.928 cv
264.018 815.928 265.25 817.159 265.25 818.676 cv
cp
f
290.963 879.236 mo
191.923 879.236 li
191.923 867.795 li
290.963 867.795 li
290.963 879.236 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
241.447 879.236 mo
290.963 879.236 li
290.963 867.795 li
241.447 867.795 li
241.447 879.236 li
cp
0 .727108 .482521 0 cmyk
f
203.576 650.179 mo
200.681 650.179 198.335 652.525 198.335 655.419 cv
198.335 658.313 200.681 660.658 203.576 660.658 cv
206.469 660.658 208.815 658.313 208.815 655.419 cv
208.815 652.525 206.469 650.179 203.576 650.179 cv
cp
.224582 .354101 .293431 0 cmyk
f
209.848 694.421 mo
205.634 694.421 202.219 697.837 202.219 702.05 cv
202.219 706.264 205.634 709.679 209.848 709.679 cv
214.061 709.679 217.476 706.264 217.476 702.05 cv
217.476 697.837 214.061 694.421 209.848 694.421 cv
cp
f
164.331 642.611 mo
162.168 642.611 160.416 644.364 160.416 646.526 cv
160.416 648.688 162.168 650.441 164.331 650.441 cv
166.494 650.441 168.246 648.688 168.246 646.526 cv
168.246 644.364 166.494 642.611 164.331 642.611 cv
cp
f
191.641 712.609 mo
191.711 711.869 191.754 711.121 191.754 710.362 cv
191.754 706.178 190.643 702.259 188.719 698.86 cv
193.948 697.796 197.882 693.172 197.882 687.629 cv
197.882 681.298 192.75 676.166 186.419 676.166 cv
186.354 676.169 li
186.741 675.245 186.956 674.231 186.956 673.167 cv
186.956 668.859 183.463 665.368 179.157 665.368 cv
174.849 665.368 171.357 668.859 171.357 673.167 cv
171.357 676.826 173.881 679.889 177.282 680.729 cv
175.829 682.65 174.957 685.035 174.957 687.629 cv
174.957 687.73 174.969 687.828 174.972 687.929 cv
172.873 687.311 170.657 686.965 168.358 686.965 cv
155.435 686.965 144.96 697.44 144.96 710.362 cv
144.96 719.072 149.73 726.656 156.791 730.684 cv
156.015 730.613 155.234 730.565 154.44 730.565 cv
140.258 730.565 128.762 742.062 128.762 756.243 cv
128.762 770.424 140.258 781.92 154.44 781.92 cv
157.221 781.92 159.892 781.465 162.4 780.647 cv
166.051 783.586 170.686 785.354 175.737 785.354 cv
186.846 785.354 195.963 776.847 196.944 765.993 cv
196.948 765.931 li
197.002 765.313 197.035 764.688 197.035 764.056 cv
197.035 758.969 195.246 754.303 192.27 750.641 cv
199.905 747.748 205.342 740.388 205.342 731.74 cv
205.342 722.855 199.606 715.327 191.641 712.609 cv
cp
f
199.993 778.313 mo
163.519 778.313 li
127.045 778.313 li
117.245 867.795 li
163.519 867.795 li
209.793 867.795 li
199.993 778.313 li
cp
.266575 .210025 .215061 0 cmyk
f
199.807 766.241 mo
127.042 766.241 li
127.042 778.313 li
199.807 778.313 li
199.807 766.241 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
209.79 867.795 mo
199.99 778.313 li
163.516 778.313 li
163.516 867.795 li
209.79 867.795 li
cp
.0938125 .0621347 .0799268 0 cmyk
f
163.516 778.313 mo
199.807 778.313 li
199.807 766.241 li
163.516 766.241 li
163.516 778.313 li
cp
0 .727108 .482521 0 cmyk
f
200.031 818.454 mo
200.031 826.991 193.11 833.913 184.572 833.913 cv
176.034 833.913 169.112 826.991 169.112 818.454 cv
169.112 809.916 176.034 802.994 184.572 802.994 cv
193.11 802.994 200.031 809.916 200.031 818.454 cv
cp
0 .308659 .762325 0 cmyk
f
182.57 822.065 mo
177.837 830.261 li
179.823 831.42 182.111 832.108 184.571 832.108 cv
186.983 832.108 189.232 831.456 191.19 830.338 cv
186.457 822.103 li
185.89 822.411 185.261 822.603 184.571 822.603 cv
183.837 822.603 183.157 822.411 182.57 822.065 cv
cp
177.76 807.135 mo
173.811 809.475 171.142 813.766 171.142 818.679 cv
180.646 818.679 li
180.646 817.255 181.409 816.031 182.532 815.331 cv
177.76 807.135 li
cp
191.305 807.058 mo
186.572 815.292 li
187.734 815.985 188.535 817.238 188.535 818.679 cv
188.535 818.794 li
198 818.794 li
198 818.679 li
198 813.727 195.305 809.386 191.305 807.058 cv
cp
.665827 .576745 .411841 .172671 cmyk
f
187.323 818.676 mo
187.323 820.194 186.091 821.423 184.574 821.423 cv
183.056 821.423 181.826 820.194 181.826 818.676 cv
181.826 817.159 183.056 815.928 184.574 815.928 cv
186.091 815.928 187.323 817.159 187.323 818.676 cv
cp
f
213.036 879.236 mo
113.996 879.236 li
113.996 867.795 li
213.036 867.795 li
213.036 879.236 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
163.519 879.236 mo
213.036 879.236 li
213.036 867.795 li
163.519 867.795 li
163.519 879.236 li
cp
0 .727108 .482521 0 cmyk
f
438.477 893.25 mo
65.9897 893.25 li
61.7368 893.25 58.2896 889.802 58.2896 885.55 cv
58.2896 881.297 61.7368 877.849 65.9897 877.849 cv
438.477 877.849 li
442.73 877.849 446.178 881.297 446.178 885.55 cv
446.178 889.802 442.73 893.25 438.477 893.25 cv
cp
.576196 .102846 .797513 .00201419 cmyk
f
412.621 877.81 mo
409.457 818.132 409.726 808.817 409.726 806.857 cv
409.685 807.543 li
409.644 806.857 li
409.644 808.817 409.915 818.132 406.75 877.81 cv
412.621 877.81 li
cp
.378668 .524163 .441932 .0630503 cmyk
f
423.335 793.324 mo
412.261 794.216 li
421.779 788.768 li
420.461 785.034 413.587 765.793 409.636 765.793 cv
405.099 765.985 395.287 793.053 390.927 810.915 cv
402.178 815.132 li
390.055 814.713 li
389.242 818.511 388.769 821.663 388.769 823.713 cv
388.769 835.25 398.109 844.604 409.636 844.629 cv
409.685 844.629 li
421.237 844.629 430.601 835.264 430.601 823.713 cv
430.601 818.363 427.379 805.546 423.335 793.324 cv
cp
.491066 0 .719966 0 cmyk
f
97.9692 877.81 mo
95.4028 829.408 95.6226 821.853 95.6226 820.263 cv
95.5894 820.82 li
95.5552 820.263 li
95.5552 821.853 95.7749 829.408 93.2085 877.81 cv
97.9692 877.81 li
cp
.378668 .524163 .441932 .0630503 cmyk
f
106.66 809.289 mo
97.6782 810.012 li
105.397 805.593 li
104.329 802.564 98.7534 786.959 95.5493 786.959 cv
91.8696 787.115 83.9106 809.069 80.3755 823.555 cv
89.5005 826.975 li
79.6675 826.635 li
79.0083 829.716 78.6255 832.273 78.6255 833.935 cv
78.6255 843.292 86.1997 850.878 95.5493 850.898 cv
95.5894 850.898 li
104.958 850.898 112.552 843.303 112.552 833.935 cv
112.552 829.596 109.94 819.201 106.66 809.289 cv
cp
.491066 0 .719966 0 cmyk
f
339.869 892.918 mo
398.865 892.918 li
401.836 892.918 404.246 895.327 404.246 898.299 cv
404.246 901.271 401.836 903.68 398.865 903.68 cv
327.525 903.68 li
324.552 903.68 322.143 906.089 322.143 909.061 cv
322.143 912.032 324.552 914.442 327.525 914.442 cv
339.757 914.442 li
342.729 914.442 345.138 916.851 345.138 919.823 cv
345.138 922.795 342.729 925.204 339.757 925.204 cv
156.868 925.204 li
153.896 925.204 151.487 922.795 151.487 919.823 cv
151.487 916.851 153.896 914.442 156.868 914.442 cv
173.226 914.442 li
176.198 914.442 178.607 912.032 178.607 909.061 cv
178.607 906.089 176.198 903.68 173.226 903.68 cv
105.602 903.68 li
102.63 903.68 100.221 901.271 100.221 898.299 cv
100.221 895.327 102.63 892.918 105.602 892.918 cv
160.881 892.918 li
339.869 892.918 li
cp
.639612 .384863 .218814 .00732433 cmyk
f
302.67 893.235 mo
220.242 893.235 li
220.238 893.235 li
213.127 893.235 li
213.124 893.235 li
195.596 893.235 li
192.729 893.235 190.404 895.559 190.404 898.427 cv
190.404 901.295 192.729 903.619 195.596 903.619 cv
213.125 903.619 li
213.127 903.619 li
220.238 903.619 li
220.241 903.619 li
302.67 903.619 li
305.539 903.619 307.863 901.295 307.863 898.427 cv
307.863 895.559 305.539 893.235 302.67 893.235 cv
cp
.675715 .423316 .273167 .0238041 cmyk
f
834.246 393.295 mo
893.242 393.295 li
896.213 393.295 898.623 395.705 898.623 398.677 cv
898.623 401.648 896.213 404.058 893.242 404.058 cv
821.901 404.058 li
818.929 404.058 816.52 406.467 816.52 409.438 cv
816.52 412.41 818.929 414.819 821.901 414.819 cv
834.133 414.819 li
837.105 414.819 839.514 417.229 839.514 420.2 cv
839.514 423.172 837.105 425.581 834.133 425.581 cv
651.244 425.581 li
648.272 425.581 645.863 423.172 645.863 420.2 cv
645.863 417.229 648.272 414.819 651.244 414.819 cv
667.602 414.819 li
670.575 414.819 672.984 412.41 672.984 409.438 cv
672.984 406.467 670.575 404.058 667.602 404.058 cv
599.979 404.058 li
597.006 404.058 594.597 401.648 594.597 398.677 cv
594.597 395.705 597.006 393.295 599.979 393.295 cv
655.258 393.295 li
834.246 393.295 li
cp
.639612 .384863 .218814 .00732433 cmyk
f
797.046 394.285 mo
714.618 394.285 li
714.615 394.285 li
707.503 394.285 li
707.5 394.285 li
689.973 394.285 li
687.105 394.285 684.781 396.609 684.781 399.477 cv
684.781 402.345 687.105 404.669 689.973 404.669 cv
707.501 404.669 li
707.503 404.669 li
714.615 404.669 li
714.617 404.669 li
797.046 404.669 li
799.915 404.669 802.239 402.345 802.239 399.477 cv
802.239 396.609 799.915 394.285 797.046 394.285 cv
cp
.675715 .423316 .273167 .0238041 cmyk
f
815.495 141.188 mo
814.951 137.758 811.989 135.133 808.406 135.133 cv
804.436 135.133 801.218 138.351 801.218 142.32 cv
801.218 145.391 803.149 148.006 805.86 149.034 cv
805.851 149.192 805.835 149.347 805.835 149.507 cv
805.835 154.157 809.606 157.927 814.256 157.927 cv
818.907 157.927 822.676 154.157 822.676 149.507 cv
822.676 145.279 819.556 141.788 815.495 141.188 cv
cp
.598566 .493873 .334508 .0645457 cmyk
f
775.841 185.159 mo
775.341 182.008 772.62 179.596 769.329 179.596 cv
765.681 179.596 762.725 182.552 762.725 186.199 cv
762.725 189.021 764.499 191.423 766.99 192.368 cv
766.981 192.513 766.967 192.656 766.967 192.802 cv
766.967 197.075 770.431 200.538 774.704 200.538 cv
778.976 200.538 782.439 197.075 782.439 192.802 cv
782.439 188.917 779.573 185.711 775.841 185.159 cv
cp
f
775.421 177.905 mo
780.556 175.53 783.355 169.723 781.765 164.108 cv
780.003 157.887 773.534 154.273 767.313 156.034 cv
762.5 157.397 759.259 161.583 758.85 166.287 cv
758.6 166.344 758.349 166.389 758.099 166.459 cv
750.811 168.523 746.577 176.104 748.64 183.391 cv
750.704 190.679 758.284 194.914 765.572 192.85 cv
772.198 190.974 776.283 184.536 775.421 177.905 cv
cp
f
847.678 380.378 mo
686.587 380.378 li
686.587 272.502 li
847.678 272.502 li
847.678 380.378 li
cp
0 .033753 .0823682 0 cmyk
f
782.354 196.157 mo
774.727 196.157 li
767.1 196.157 li
764.043 272.502 li
774.727 272.502 li
785.41 272.502 li
782.354 196.157 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
787.498 265.71 mo
761.957 265.71 li
761.957 272.502 li
787.498 272.502 li
787.498 265.71 li
cp
.465248 .609857 .532647 .214176 cmyk
f
821.911 154.118 mo
814.284 154.118 li
806.657 154.118 li
803.601 272.502 li
814.284 272.502 li
824.967 272.502 li
821.911 154.118 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
827.054 265.71 mo
801.513 265.71 li
801.513 272.502 li
827.054 272.502 li
827.054 265.71 li
cp
.465248 .609857 .532647 .214176 cmyk
f
785.41 272.502 mo
782.354 196.157 li
774.727 196.157 li
774.727 272.502 li
785.41 272.502 li
cp
0 .727108 .482521 0 cmyk
f
774.727 272.502 mo
787.498 272.502 li
787.498 265.71 li
774.727 265.71 li
774.727 272.502 li
cp
.432593 .533501 .46952 .107332 cmyk
f
824.967 272.502 mo
821.911 154.118 li
814.284 154.118 li
814.284 272.502 li
824.967 272.502 li
cp
0 .727108 .482521 0 cmyk
f
814.284 272.502 mo
827.054 272.502 li
827.054 265.71 li
814.284 265.71 li
814.284 272.502 li
cp
.432593 .533501 .46952 .107332 cmyk
f
748.367 380.378 mo
686.696 380.378 li
686.696 272.426 li
748.367 272.426 li
748.367 380.378 li
cp
.0709544 .1337 .158694 0 cmyk
f
760.489 320.263 mo
778.527 320.263 li
778.527 303.05 li
760.489 303.05 li
760.489 320.263 li
cp
.693477 .214939 .327123 .00292973 cmyk
f
780.732 300.861 mo
778.279 303.362 li
760.479 303.362 li
760.475 300.913 li
760.475 300.861 li
780.732 300.861 li
cp
.220218 .173342 .178805 0 cmyk
f
778.282 303.322 mo
778.282 320.255 li
780.744 320.229 li
780.744 300.873 li
778.282 303.322 li
cp
.12726 .0970169 .102968 0 cmyk
f
778.283 320.172 mo
775.558 320.172 li
775.558 303.41 li
778.283 303.41 li
778.283 320.172 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
778.16 303.274 mo
778.16 305.999 li
760.49 305.999 li
760.49 303.274 li
778.16 303.274 li
cp
f
788.667 320.263 mo
806.706 320.263 li
806.706 303.05 li
788.667 303.05 li
788.667 320.263 li
cp
.693477 .214939 .327123 .00292973 cmyk
f
808.911 300.861 mo
806.458 303.362 li
788.658 303.362 li
788.654 300.913 li
788.654 300.861 li
808.911 300.861 li
cp
.220218 .173342 .178805 0 cmyk
f
806.46 303.322 mo
806.46 320.255 li
808.922 320.229 li
808.922 300.873 li
806.46 303.322 li
cp
.12726 .0970169 .102968 0 cmyk
f
806.461 320.172 mo
803.737 320.172 li
803.737 303.41 li
806.461 303.41 li
806.461 320.172 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
806.338 303.274 mo
806.338 305.999 li
788.668 305.999 li
788.668 303.274 li
806.338 303.274 li
cp
f
816.846 320.263 mo
834.884 320.263 li
834.884 303.05 li
816.846 303.05 li
816.846 320.263 li
cp
.693477 .214939 .327123 .00292973 cmyk
f
837.089 300.861 mo
834.636 303.362 li
816.836 303.362 li
816.833 300.913 li
816.833 300.861 li
837.089 300.861 li
cp
.220218 .173342 .178805 0 cmyk
f
834.639 303.322 mo
834.639 320.255 li
837.101 320.229 li
837.101 300.873 li
834.639 303.322 li
cp
.12726 .0970169 .102968 0 cmyk
f
834.64 320.172 mo
831.916 320.172 li
831.916 303.41 li
834.64 303.41 li
834.64 320.172 li
cp
.742977 .306798 .357031 .0237125 cmyk
f
834.517 303.274 mo
834.517 305.999 li
816.847 305.999 li
816.847 303.274 li
834.517 303.274 li
cp
f
748.367 380.378 mo
686.696 380.378 li
686.696 370.483 li
748.367 370.483 li
748.367 380.378 li
cp
.147311 .245518 .248783 0 cmyk
f
775.558 380.378 mo
748.367 380.378 li
748.367 370.483 li
775.558 370.483 li
775.558 380.378 li
cp
.0891127 .180972 .190127 0 cmyk
f
847.678 380.378 mo
820.921 380.378 li
820.921 370.483 li
847.678 370.483 li
847.678 380.378 li
cp
f
820.987 342.731 mo
774.35 342.731 li
774.326 380.269 li
820.807 380.269 li
820.987 342.731 li
cp
.494606 .444251 .456886 .0846571 cmyk
f
822.362 341.863 mo
774.165 341.863 li
774.179 345.374 li
818.129 345.374 li
818.129 380.269 li
822.454 380.269 li
822.362 341.863 li
cp
.147311 .245518 .248783 0 cmyk
f
798.309 380.269 mo
796.018 380.269 li
796.018 345.487 li
798.309 345.487 li
798.309 380.269 li
cp
.53225 .487617 .496559 .144076 cmyk
f
818.063 380.269 mo
815.772 380.269 li
815.772 345.487 li
818.063 345.487 li
818.063 380.269 li
cp
f
847.678 326.25 mo
847.678 329.862 li
861.228 329.862 871.403 338.363 871.403 350.296 cv
871.403 375.998 li
874.778 375.998 li
874.778 348.692 li
874.778 336.323 866.238 326.25 852.323 326.25 cv
847.678 326.25 li
cp
0 .727108 .482521 0 cmyk
f
847.678 329.862 mo
847.678 333.988 li
852.323 333.988 li
860.432 333.988 867.028 340.583 867.028 348.692 cv
867.028 375.998 li
871.403 375.998 li
871.403 350.296 li
871.403 338.363 864.012 329.862 847.678 329.862 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
874.338 345.04 mo
873.436 344.677 872.44 344.488 871.403 344.488 cv
866.866 344.488 863.176 348.164 863.176 352.715 cv
863.176 355.017 864.119 357.104 865.654 358.585 cv
867.135 360.053 869.168 360.942 871.403 360.942 cv
875.954 360.942 879.629 357.252 879.629 352.715 cv
879.629 349.201 877.435 346.212 874.338 345.04 cv
cp
f
874.338 345.04 mo
873.436 344.677 872.44 344.488 871.403 344.488 cv
869.906 344.488 868.505 344.895 867.295 345.595 cv
867.71 345.53 868.131 345.487 868.565 345.487 cv
869.601 345.487 870.598 345.675 871.5 346.039 cv
874.597 347.21 876.792 350.199 876.792 353.713 cv
876.792 356.756 875.135 359.41 872.674 360.833 cv
876.618 360.221 879.629 356.82 879.629 352.715 cv
879.629 349.201 877.435 346.212 874.338 345.04 cv
cp
0 .727108 .482521 0 cmyk
f
897.903 379.865 mo
847.678 379.865 li
847.678 372.442 li
890.48 372.442 li
894.58 372.442 897.903 375.765 897.903 379.865 cv
cp
.639612 .384863 .218814 .00732433 cmyk
f
796.055 118.311 mo
795.68 120.096 795.743 121.867 796.148 123.528 cv
794.038 124.802 792.436 126.907 791.889 129.51 cv
790.843 134.487 794.031 139.37 799.007 140.416 cv
803.985 141.461 808.868 138.274 809.914 133.297 cv
809.984 132.963 810.032 132.629 810.065 132.296 cv
814.501 131.354 818.189 127.895 819.182 123.171 cv
820.524 116.785 816.435 110.52 810.048 109.178 cv
803.663 107.836 797.397 111.925 796.055 118.311 cv
cp
.500725 .408392 .307347 .0179751 cmyk
f
778.474 152.326 mo
778.474 159.875 772.354 165.996 764.804 165.996 cv
757.254 165.996 751.133 159.875 751.133 152.326 cv
751.133 144.776 757.254 138.655 764.804 138.655 cv
772.354 138.655 778.474 144.776 778.474 152.326 cv
cp
.598566 .493873 .334508 .0645457 cmyk
f
778.47 137.948 mo
778.47 142.63 774.675 146.425 769.994 146.425 cv
765.312 146.425 761.517 142.63 761.517 137.948 cv
761.517 133.267 765.312 129.472 769.994 129.472 cv
774.675 129.472 778.47 133.267 778.47 137.948 cv
cp
f
721.733 379.332 mo
721.733 312.025 li
721.733 306.517 717.251 302.036 711.744 302.036 cv
706.661 302.036 702.461 305.855 701.842 310.773 cv
697.936 310.773 li
698.571 303.71 704.517 298.153 711.744 298.153 cv
719.393 298.153 725.616 304.376 725.616 312.025 cv
725.616 379.332 li
721.733 379.332 li
cp
.0971695 .791531 .55697 .0028687 cmyk
f
677.222 379.332 mo
677.222 312.025 li
677.222 306.517 672.742 302.036 667.233 302.036 cv
662.151 302.036 657.951 305.855 657.333 310.773 cv
653.425 310.773 li
654.061 303.71 660.007 298.153 667.233 298.153 cv
674.882 298.153 681.106 304.376 681.106 312.025 cv
681.106 379.332 li
677.222 379.332 li
cp
f
632.711 379.332 mo
632.711 312.025 li
632.711 306.517 628.231 302.036 622.723 302.036 cv
617.64 302.036 613.44 305.855 612.822 310.773 cv
608.915 310.773 li
609.55 303.71 615.497 298.153 622.723 298.153 cv
630.373 298.153 636.595 304.376 636.595 312.025 cv
636.595 379.332 li
632.711 379.332 li
cp
f
699.813 320.795 mo
704.618 320.795 li
704.618 308.185 li
699.813 308.185 li
699.813 320.795 li
cp
.525811 .485359 .512016 .148959 cmyk
f
695.534 320.795 mo
700.338 320.795 li
700.338 308.185 li
695.534 308.185 li
695.534 320.795 li
cp
.554742 .515984 .546258 .21088 cmyk
f
655.205 320.795 mo
660.009 320.795 li
660.009 308.185 li
655.205 308.185 li
655.205 320.795 li
cp
.525811 .485359 .512016 .148959 cmyk
f
650.925 320.795 mo
655.729 320.795 li
655.729 308.185 li
650.925 308.185 li
650.925 320.795 li
cp
.554742 .515984 .546258 .21088 cmyk
f
610.17 320.795 mo
614.975 320.795 li
614.975 308.185 li
610.17 308.185 li
610.17 320.795 li
cp
.525811 .485359 .512016 .148959 cmyk
f
605.89 320.795 mo
610.695 320.795 li
610.695 308.185 li
605.89 308.185 li
605.89 320.795 li
cp
.554742 .515984 .546258 .21088 cmyk
f
688.596 379.332 mo
688.596 329.11 li
688.596 322.915 693.618 317.892 699.814 317.892 cv
706.009 317.892 711.032 322.915 711.032 329.11 cv
711.032 379.332 li
688.596 379.332 li
cp
0 .727108 .482521 0 cmyk
f
644.085 379.332 mo
644.085 329.11 li
644.085 322.915 649.108 317.892 655.303 317.892 cv
661.499 317.892 666.521 322.915 666.521 329.11 cv
666.521 379.332 li
644.085 379.332 li
cp
f
599.575 379.332 mo
599.575 329.11 li
599.575 322.915 604.597 317.892 610.792 317.892 cv
616.988 317.892 622.01 322.915 622.01 329.11 cv
622.01 379.332 li
599.575 379.332 li
cp
f
693.47 332.393 mo
693.47 338.615 693.47 362.287 693.47 379.332 cv
688.596 379.332 li
688.596 329.11 li
688.596 322.915 693.618 317.892 699.814 317.892 cv
699.814 317.892 693.47 322.375 693.47 332.393 cv
cp
.0971695 .791531 .55697 .0028687 cmyk
f
648.967 332.393 mo
648.967 338.615 648.967 362.287 648.967 379.332 cv
644.093 379.332 li
644.093 329.11 li
644.093 322.915 649.116 317.892 655.311 317.892 cv
655.311 317.892 648.967 322.375 648.967 332.393 cv
cp
f
604.449 332.393 mo
604.449 338.615 604.449 362.287 604.449 379.332 cv
599.575 379.332 li
599.575 329.11 li
599.575 322.915 604.597 317.892 610.792 317.892 cv
610.792 317.892 604.449 322.375 604.449 332.393 cv
cp
f
926.8 393.83 mo
554.313 393.83 li
550.059 393.83 546.612 390.382 546.612 386.129 cv
546.612 381.876 550.059 378.428 554.313 378.428 cv
926.8 378.428 li
931.053 378.428 934.5 381.876 934.5 386.129 cv
934.5 390.382 931.053 393.83 926.8 393.83 cv
cp
.576196 .102846 .797513 .00201419 cmyk
f
315.018 175.075 mo
315.018 191.235 301.918 204.334 285.759 204.334 cv
269.599 204.334 256.5 191.235 256.5 175.075 cv
256.5 158.916 269.599 145.816 285.759 145.816 cv
301.918 145.816 315.018 158.916 315.018 175.075 cv
cp
.00375372 .00717174 .167422 0 cmyk
f
308.343 171.043 mo
307.282 176.429 li
306.983 176.41 li
308.047 171.012 li
308.343 171.043 li
cp
.220218 .173342 .178805 0 cmyk
ef
292.333 149.923 mo
305.742 183.171 li
305.929 183.095 li
292.52 149.847 li
292.333 149.923 li
cp
.0150149 .665003 .433173 0 cmyk
ef
301.34 162.864 mo
308.032 172.285 li
308.198 172.168 li
301.506 162.747 li
301.34 162.864 li
cp
ef
309.028 169.705 mo
311.72 169.705 li
311.873 169.857 li
311.873 170.77 li
311.72 170.922 li
309.028 170.922 li
308.875 170.77 li
308.875 169.857 li
309.028 169.705 li
cp
0 .599298 .363317 0 cmyk
ef
319.429 162.864 mo
312.738 172.285 li
312.572 172.168 li
319.264 162.747 li
319.429 162.864 li
cp
0 .536065 .303807 0 cmyk
ef
328.437 149.923 mo
315.028 183.171 li
314.84 183.095 li
328.25 149.847 li
328.437 149.923 li
cp
ef
290.615 116.943 mo
286.445 121.107 284.205 127.342 285.296 134.225 cv
286.954 144.675 298.43 158.454 304.526 167.349 cv
316.244 167.349 li
322.339 158.454 333.816 144.675 335.473 134.225 cv
336.565 127.342 334.325 121.107 330.156 116.943 cv
321.242 108.042 299.528 108.042 290.615 116.943 cv
cp
0 .599298 .363317 0 cmyk
ef
297.135 116.943 mo
286.93 132.151 299.707 152.647 306.458 167.349 cv
314.311 167.349 li
321.153 152.452 333.812 132.11 323.634 116.943 cv
317.661 108.042 303.109 108.042 297.135 116.943 cv
cp
.0015259 .0875563 .225132 0 cmyk
ef
305.201 116.943 mo
301.219 132.105 306.17 152.447 308.848 167.349 cv
311.921 167.349 li
314.612 152.374 319.549 132.102 315.569 116.943 cv
313.232 108.042 307.538 108.042 305.201 116.943 cv
cp
0 .599298 .363317 0 cmyk
ef
311.921 167.349 mo
314.311 167.349 li
321.153 152.452 333.812 132.11 323.634 116.943 cv
320.647 112.492 315.516 110.267 310.385 110.267 cv
312.393 110.267 314.401 112.492 315.569 116.943 cv
319.55 132.105 314.599 152.447 311.921 167.349 cv
cp
.000946059 .0374151 .130343 0 cmyk
ef
310.404 167.186 mo
310.404 110.267 li
316.208 110.267 317.033 124.863 317.036 130.682 cv
317.042 142.419 314.001 155.693 311.936 167.186 cv
310.404 167.186 li
cp
0 .536065 .303807 0 cmyk
ef
314.311 167.349 mo
316.244 167.349 li
322.339 158.454 333.816 144.675 335.473 134.225 cv
337.545 121.161 328.479 110.267 310.385 110.267 cv
315.516 110.267 320.647 112.492 323.634 116.943 cv
333.839 132.151 321.063 152.647 314.311 167.349 cv
cp
ef
301.34 162.864 mo
319.429 162.864 li
316.244 167.349 li
304.526 167.349 li
301.34 162.864 li
cp
.0150149 .665003 .433173 0 cmyk
ef
310.404 162.864 mo
319.429 162.864 li
316.244 167.349 li
310.404 167.349 li
310.404 162.864 li
cp
0 .599298 .363317 0 cmyk
ef
312.426 171.043 mo
313.488 176.429 li
313.787 176.41 li
312.722 171.012 li
312.426 171.043 li
cp
.120485 .0945754 .103883 0 cmyk
ef
306.986 176.397 mo
307.083 176.397 313.842 176.363 313.851 176.459 cv
315.042 183.12 li
314.976 183.199 li
314.976 183.2 li
314.871 183.2 305.726 183.237 305.726 183.132 cv
306.918 176.46 li
306.986 176.398 li
306.986 176.397 li
cp
0 .599298 .363317 0 cmyk
ef
310.404 170.922 mo
310.404 169.705 li
311.72 169.705 li
311.873 169.857 li
311.873 170.77 li
311.72 170.922 li
310.404 170.922 li
cp
0 .536065 .303807 0 cmyk
ef
308.294 170.783 mo
312.551 170.783 312.646 170.623 312.728 171.036 cv
313.026 172.554 li
313.052 172.69 312.912 172.807 312.773 172.807 cv
308.341 172.807 307.663 172.968 307.744 172.554 cv
308.042 171.036 li
308.069 170.9 308.156 170.783 308.294 170.783 cv
cp
.220218 .173342 .178805 0 cmyk
ef
310.404 172.807 mo
310.404 170.783 li
312.475 170.783 li
312.614 170.783 312.701 170.9 312.728 171.036 cv
313.026 172.554 li
313.052 172.69 312.912 172.807 312.773 172.807 cv
310.404 172.807 li
cp
.120485 .0945754 .103883 0 cmyk
ef
310.404 183.2 mo
310.404 176.397 li
313.784 176.397 li
315.042 183.12 li
314.976 183.199 li
314.976 183.2 li
310.404 183.2 li
cp
0 .536065 .303807 0 cmyk
ef
311.908 176.397 mo
312.384 183.2 li
308.385 183.2 li
308.861 176.397 li
311.908 176.397 li
cp
.0150149 .665003 .433173 0 cmyk
ef
310.404 183.2 mo
310.404 176.397 li
311.908 176.397 li
312.384 183.2 li
310.404 183.2 li
cp
0 .599298 .363317 0 cmyk
ef
382.289 173.508 mo
381.702 172.413 379.792 167.665 373.202 165.565 cv
373.932 163.272 li
378.32 164.671 380.962 167.224 382.289 168.865 cv
383.615 167.224 386.257 164.671 390.645 163.272 cv
391.375 165.565 li
385.624 167.398 383.371 171.492 383.348 171.532 cv
382.289 173.508 li
cp
.227359 0 0 0 cmyk
f
256.223 166.086 mo
255.635 164.991 253.727 160.243 247.136 158.144 cv
247.866 155.85 li
252.254 157.249 254.897 159.802 256.223 161.443 cv
257.549 159.802 260.192 157.249 264.58 155.85 cv
265.31 158.144 li
259.558 159.976 257.305 164.07 257.283 164.111 cv
256.223 166.086 li
cp
f
355.037 189.102 mo
354.276 187.898 353.07 185.203 348.323 183.906 cv
348.958 181.584 li
352.036 182.426 353.983 183.936 355.047 185.008 cv
356.111 183.936 358.059 182.426 361.137 181.584 cv
361.771 183.906 li
357.22 185.15 355.972 187.654 355.037 189.102 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: ( ) ()
%%Title: (d_082-13.eps)
%%CreationDate: 12/29/2017 1:51 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBmUc=de<RkfB*$_]HkcoN+ZMa-d)LBj2>.QB0.J$5$1,e0`hMT')U:q<Rpt_1m/hDJJK.@ApSd*jmK/6gUB8nZcV0>ntn5A
%l[I"dK!aX9WS?uq0PU>sRU3aPqtAX:(W1O__KM)3FE'C&dh(u(gMmk<G[&UV;D6%:HddVRPMp'BHo=,)cKF$JGWM>ODfsqH-ESYJ
%2t5"`p%*,bT)RF.N!BT+iL]C5po6Os&,Xi/a^EMRg('\G?d[-Ucf$Lt!'es.psl,Q341tU/>.6L2dUsFqrHpYok2/+Fr[<_kJE!&
%:>Ib"%h>+^&#nSUq-/(Bo4%K,1geH2MpZY;lR/&up*aBGhB/=!fFRI&BELeLi5\l:GVhB!03F??l72S=pnWUHI+imiMJ)'n=4D9S
%Agds]m$jKc'-c7TnP<Fkre-oWQJW&%F.PVbiA3T>60,BSkSZp/kr+gS*@`<ln8*Ds175bGYL(13hok!#l$0ELZE]OH6/./Vr?)R(
%/mMCr9&'^.b\dc?T^>4q2SS?"m3IX`&q8oN"31jTI[gO_No-]<eaSXInB_!6YD7bJiJ`hgCpqt<]n\?%3_g*+E*`AU[8Y]Oq'@]>
%`l$L(PL0GH)UZ*[p$n71iG]3LWiZ'W!=^N\!U2h`ioOSAB"3Be0cclp(Z0-WNqi#+fu`9j]-32YO$D^Yl#?36q?%Jdoc:4N5T*dD
%gOV-V!>a/q>$aUXn=^Y(:HXf[$dTZ2_)t-R0ho(=0FOJs7W1b[qbZ2$>u?^Ye\g)(:sG'RCF/<hjkW\=G:MI^]MSLE@Q4rOid.f>
%:UHPP[%H^VB=p>j4*`t,N3MufK\d$$WWNoLdMj_ApKPAl3skQ0?`hVc`Gc=%3q2]gr#\B&5>CZt[k#c#4s#+oJ+\6feb@b#rBB&_
%DMo^O/;iq$']EV#KU5,)^Fq?:;nOGOnX>[S2Z/)lV(#`*TC>'Of'VI.h(IR<mG]eT/md#qj0/E1'[c=H5$lV)Z^Y'j=cljDfJD3a
%GcUV1`ZZDm19;;ka31\nU:0DIX;(ZSCTp_3TB\%tKADLZ_Z0B?.u"!X/(RfRCTJ6LVn1mn4H9$NVm83l-,@^.CA8mSl1a_<kTq]@
%CMD@cXJt\R]9Up<<IbgVQ&\#"$88t_>f'fl):fE"@ofZU=j>W<]]8J`?A<S:4jBFMh2HKps7d$RaMn8[kCprTp`D0,3oYY?R;BC;
%`apI3B8WrZKbkt*F<)kUCO<^Q24eJ#<dRjJ.Qf4"HSWcKF;qh[]^Qi@TGXG+6+WW;SGeCh`;b'")s^Treh6<$r/]H;"lXVZb/I%`
%c,ZEl7_0G^@aKpN7tkSCL(+JE8OVIAen=)SD9nft)NP4Y3_%V['d#(BcY(q;%+t%8`=(!=.N@'Bmo]at/Gf!J6WqZ_Fq<@\B!7Y9
%U9W31?mAt$!AtMSFu>`,bZDJ0g04.RQ:Wn\h6*27'NYuO4IKd)DKT6???kP,dcE..@m?q;HNaHIY)_iP[tc+gV2jmWa6^E!Z<*3n
%mn"^qT(#gIZ(KO.]fI2->ohT+DX[8N.<T1)4D3R%OhDb1icH7=&HB*9A`(HcG/QFf5rT)HrN*d1)nFT]DQCOc(H?2XHKj7(3:bgn
%/nmApfP\?tk61+P]Bg,jInnNkgn'g]Z8pq3kIB'Vko,VLd;e>fqb+M+Fiuh;DS5?U:u6Z8[cdTqGKJs+q$Z!'#[#((?,MoS>%]Ec
%7M;r?NEA'n^(P)SnAE8S.6gAD20+un?[)M;\N!D!9`:P!Pm?hkF."<!j'J%)Ib_hbSG2pU+"Gado%(hjiA.Qs22)([_n&/n=\YX*
%U[[pcW,\4b(Yr#=Z]7r>.C*'mAW"N$S2+BbS"[P#LT\D?XfS/idh>b$rpDd'b?4ML8b:SAFiLuJ%,T?qn9.m&E>=I92rg&0h^Ldq
%MAa180'.5bm(*f=XREZje#4<RJ#01*;J:qf3\Fr+ATf%V&Le&F=PV@dY9p;:iVPN/GB'!Ii<c8]D8[=:fgP.h^?RQS`YW`")A7%H
%F&YJS]]aa6GB"r5;_MXeNkMPV0.tR10tqX(HCW"%!/4eD#'2[N>1YT>.]+e^[,30Sa3S5[7=TG4B1;.=gs_>V3=.k6\Bl$TRV#(n
%m(6,an()Do%`j*S"B,Ii+WSZbVR)#V;B@`t>=9F:,E4Bd+$",>Y2AK\*0FO:7'8<R%4+]SdaRe?n&6oWV#"ri>:Ktuf?WJ1'S@0M
%$9dT>O'S2dSM!$HBpPTn(FOsddAg(/$T@&Ain_kt1[X%rE$>KTM7sO"aP"&*T4XhhC7%u"ai*X/n^:NM_E*]<0\&X_kVN[@e@#H:
%r^RtVg(YtE1-Tl\kWJa&ZW7/r"aK!a4l4`G'r.I3`g$ae@"TaHLqM&F?&11`VGBLiGK+b62JgfNdBO)V6pU*.?1!TSl+/,HeC,ob
%@E&ObEu3CN-^J&ZDoX#R\*.:!jh!3XQfrEa?VDUiDf^Iu<`9t/I9t+"chb#tm<#D]U4+p\0#^,="S`+9=Wl%UlqpL5!f,%s8Hkbi
%7g4!'/1G?HA[Y,g\hm0eW]4\ZBW??bCO)^6ciU:A\U[r8msH%<H9%r<<I52g:6_]JN9H2F(dll.*LcD@XIGE]Ku^&i>mTn`MI1M<
%2IYZBM'"'I?IpNPFo/IfY*<bdf/+^e_s3WcAf#LEdPGg@G^<B[&jssa)+fGt>!^A+60Cns<M#_;LT.97l^4L77Rh=EN0.-fot]r7
%eEBJCUZZ01'/]6C5^cFIi=(&l$2=Yb,`le[V$Yj7\i@MTPB^N-GcU%gl=c@'>29d+gd0@A]9d(Pl`Ru1:T:2%$&ZZX)Tdh5s-/.A
%'gl/`5;qY84gQ.*2p?&-H\$0W/lS:9U3CAjB*&T8jKN'Ve!QeS(T+4rR6cb-<13Eaqnf.TE7T/?XnlBG.-u=$`=_;Rn3(r._T#I%
%^hE.&V+pTdf^)22DK-0,S9:E<#@8m&],L'W-Kdq"=A)V:*nNIZ4V/](%D2Qub$90=XJYb!DQ1EC3P"'b%Vh[#55rh2X5o4+c,53?
%JPDKs6P\+&7-hW7N,jb1_M/K_2o_=e(#Pt-B'O.jX3[enX:i_if':oM3X+Mj-8?CHCjBJ_V9)>Nd"fj/?1(+n?0fN`;[gULhlh@,
%:+R/%3\b76:1LGU*i;iD@<E0KlBf>VP7PmC8s`ecrp,01hMnJ:-Id$7mlp3O_QgZK$;[iL9"a!1/F9?=aAa>\f[hJrlZ)Mo3dPNn
%-@VM)6@o^TjJ)V^fYl&\T[OVr9MZ2J0Z,8kI)^kSQh>8n2/2"ES15.PWVTXi:kR'9@sK9Ie"O7!0jNZ#gTsL9k!K[V&aRTD.S0%l
%oVh"Zf#M&_lMRm@pHtl3<7DEjp5r$VaV:jbQ1T/:R(S2)At>B=L=h+0;;D\T2i5.eW-C2H:XA8K*u&Z9+cdnt-/F+E1':rUT?gmd
%Ag)PR0$W$J$<&j*iHD\nq5_nCS;Ueo3T<b-VnT/i4HFu(XhgkdD^@u!.L'`i]*lmp>e`X(%LuoKb-]g1U3EZ8/V@Td"E%huQ%BP_
%=;5#4M,\]#B:*uCaRMWF6P_D:0C_2G,);@8:N^E><uMJ*A/07+/nE*11mcD2JljD#=Tk;&G:(]\!PfQs.dIBl4Ia$).UkiN^t<Af
%Lu2>=p%.t@;hen&=--rFjX0)e2RGT1<jNd^<q[D7\]^gPfs+eDE+pM[h)HC[=L+mJr[f3b9Stfe@#)f7M5qshjJX\j*7h+K45<Sj
%""2%"Am*&S?keaoXB4#]"T)SfAko=L1Y'*c_GENhl65si;2Lp?<?[^H$l+\e<0\To6DsZ:@#5q'8#H'9gVq4E2\JR$F'4F2EPuMl
%kq_@u<jm79p!S@OQ]Q<j,YcoBNk9NSqj.SRjLM(XH#Z4tgLZo`-&>J0JM0HKb@D#m9di2">L$f!U_E4f8[;e\/bVP`7o=W1lQAut
%N_MKcV@h_'':!*roehd-)!#RdK0!;hh1V:4HJCI$(@,i2`k&KG9RLY?HocZ!E^ooKlkjj]kk?_'3G6UITXmNDZr=[]"8&oqXdfZC
%+!uC!jBPr.=@b;R+#Aq^_;n"E$N895[6l`3Tf9>)(7Y&FQWbZS52tjBRd_a>=0..B#WBsr@Tm&?)5;8RDLr1ObC&>/?[XQ^:5.3*
%LgmQCS@VbYIbo;1m5,0u@Mq^Q'&jQh1@QHdqT7m@DD1oe2>6p;S::72j09`.<NtjA(Z5B^CWUj^[%u5s8_(K"]-Q-n>_f\N(5@en
%!mF[-fb(Ne/4^?tN2gXL/Nqgi_q#l%(j-kD'md<7j#T0#]ANN=h^[4$lW+7jl##[5nHJQ>T:%IaB5E69S!cdJHf5[V:m@:$oWA@$
%mG:mQf6(]!je7knhH<lLdc6d:?e1Ve[,^F5PhC^-CQV8N]K=__h5AfZ^>6uQ("_=N7p9"tAaT.g3j.W=Pmq4fm&4.>KHIS]Q7f*7
%/MjQXj[.aOhD'Mo)/%iK990nS\A*gE2rB'ZQ\uAOpsg:%74qM$DR+A8mol%cEVnWQAI>R3[niDu&?YKer4$k$r1/K6P%NMFDa+K[
%peZ\E_#<++/`1ZlZ>&s?LkW6bo(Pf,HL#r<6J[%eYbTMCp@E9+ZFIR&_QV[L+,J@:B?Z".*STD^I)[c*PM.`uDnTt0HTA^<"uOAJ
%K0`Q2nQ[m<*+M/=CY%C4c+IiK[$%,A7X>Qt+*9<`NGd:4?bIFPosi!g<-B)E'R;+;phoH6e\&9SLUDlgAJLOG-]t_!et/HbI0pu$
%punG<]Kkt#D1[+h@&H$-(l$^b27@m5ZlrL^cqVR1?r=r=N?-X+Pd3l[n>rD?da@RC&U$?MLGj>2nnH%>9LY^%+jR?(=kHDML0,eH
%#(h&fX#c8jUs<.U29lDdoH08Kcc;A`XW'@IVUPAu]k#16]U(Tc2+n`[I"nNI.T<3i_U]crLR^13e;n]59Z!CUCMI@#!qk[NlbY3:
%0!ZXbL<4&HW3bfu^&V@(0(%)]Idt(15[Nsr/?:VmfNc=deM4,`E5IJoD_M<*aKXs4SqH/F[.`CrjZIYK>!a(,.A%k%io`.^n%.L6
%Zb_BVX6ZS@TJ9UkQYidLJ@g7iib8>Jd-pY6J<jALbA0>I:+A*O'![NOT%7.5bAE^$-KB2]Fl\b>#50-*WmlI)m\NXqVTbbRhqU8h
%f"/&Zqf'\3-D`LKaeY;dIn_#p\7i'i+7nKs:rJ6D=.;T,X[O!1W:mo]qP_8hZ!:db9_2#$T4W<&F!<6(0b3AcZTEK91.gQhVhK"'
%FC*3I;/jMAbg5BKBeqBbjh/`i)-C2#9/E`RrR#:LaI:**fb/J`(O#[)Y:7/Q!I.Po9>Cd5F6Z6:'\1"=cc&2Nhs+i7T*r386SYcC
%:M1<!'K<"I$$&7c4ZR("d,#)8Cc"7NCF3fXp_/?oWe`X*X"M>)ac2E5SW9LNf@7NNeg[S^1+0&"C(p0d`9]["QG\ZXb?:/YCu&;(
%??::i6!HE2aT<[L:'&e-Lm_gUE>cL5WemAT?_&CWP^fQFM1-7IE8474W\_Vu.2KOHi[2;fgc=IWZaXB*JCV+cFf81COt'lsMrj]/
%C0pJJ(](j\f^u6,jE9Dt.>^sV0B";T1c:<;iWZ5,em+Y1$*0[J<R@,"C]W@WohVAq+Y$H]VFJ&GkV>lLWSXaGa=ET?Rg[7lB'WIa
%)f$aa1.kb*A[1[Y(Y,YQf4CLfTuT%T=EJn\#`*=_SVmC[!OmPgP;T=Wq4?oW=rH%',!/f(N.&NRP/;<Pgsg)]f(Zd?AL6YQSOs:n
%N?cP49p"?Qs/`(m(&dQhqP2t(`@5'Y>#tA%;QLn.Yfa%r>5#A,:!#pa$=,(nbF\C5^?jNX'9nA8V(73'3FOp.mM@4P+N]o(eTI3$
%B$7*SIXB9B;k-+#i\I!<"<2=&<f["<a\(6?bU8WH[`f/Jfq;Ya^&oYE2Y,EMYNf5L>guR$qDQ-L1Oc2R8[H,Nfm)lJVQ.5`WS-jl
%),Mh=[`1A'AT`cED;cI3-*fC?PnU0Z3F20ogUl3:X^u8]76[2oE=N`.'fG+e[U@Qf.7;W\=@'dF\=IkY=$"j0F8`gm4uXgi:6LI_
%EIahZ[+Ygjki7PW>Fa&35_4d5Q%huYWK.^,f.%ajbPi0V:S@6RFFf=/F<6,W06fk9E*G&1HfXH'Q_Dpk.9p%U1A_t!d(<GJBmoAA
%QPZ:e]3"1[?IdYPPNlgr3k\lnI@XB]<32kjQks("<HGaN-"t0H?W*E[B`0"H6>?trB[3ELq76-O.V6Tq,\PCNI7=fKh*EE41PaMO
%H]3e;gr7R/ekA?,Q=lbMjdK2S<NfITXK^"b1*EG:)4_=&W#;`XSaa^m?M1+7+0`;CYXhq\!V><kfZW;'kV?0^>/O"[F.f"'ofA3c
%&l*aA("7DBUP::]d],sim"b0(d;OgaLen`0PHPAOs3T8Ynfh;X?5F8D9Q(]e/:mZ67lJQL'7D71^7$neeWe=gXCpGJh,Le@luuHV
%W$D.op6,t0V1I4TIc4"[WWHk9k\iX(d(;Ye/<GuXq9-\g6&:Ano&M5DcS65Zl!hd2Rkmc&k,\?jW?nA"aCnl)8$gNtQKW8TVj%i/
%'SO2.ff12iiEiGZ`Dt0&d84q#U&s!RKUfb+lIK#J5Zp+5Lf/g)AZ&\#@(tT%Z';fuBI,sEbMlg#7fmU?)W(ksiadmf@tpjLs"o;b
%?mR>U7(N98%+"c2!>g^+gZR9Y'+Zb\<9/WY#An$jf7;&3M/\@;1']bo:FaSN^;+B%+q@NkpZ/@U[3\&>4CPq\LQNIreH&6Waul3a
%SXpK24b9F9\ph4E]D7pG`g0d;@BJ&J'ZYl"dKttM`s9#ueRAI>Pa:C<+O9LAn8_D(]MH?_AC_Ir4DM,nW=\f]_c`VcKt>IAQ89L`
%2UYQn/eqgjRZnEP^rsYcm%')hU*QVXSA8gT6I2D'>Sm7%8cY@j]e@M-REpU?o*:3^FpS>'*4poPiOmBC@QB>*f]tjA@A!4AQa<+W
%TmBfp+H(N9R&8MiCc\^B,eVF:BQ[@'<Z0CuR=@>WL;V$D'L8XPg2(XNi9Us)FSt8T`m=!B*cn_Z1%IjlidQ-d?4L6`2?m0$+VcAs
%_Q&\`M!o>=J&_*0$Le<:+:uUEINusl!md]"T9H)3Ce!]H.?r:B!p?eSmbClkPFu4n'U^Y#?+SXYlYUWgd?.QR!M%SY>p`$r;<Gl!
%37bTh?)M)".J*)2\s3`_)TU0u:o[,rG@\e:9"4#bU1/6Fk_O?Rnr7.Sle?P'3l!E+9!"b,;?-*ll7CE;#)egZ[:X?shb1N2+&02G
%X\G>KGhp7)U?Y9G2[f#B<Vu_p+#1!T>3`SIH(3ZWEP"r7RrO2$nN)T.<:s1[f*rL<>`+pIc!u2Kj4k/*j-KF0m>SA5Q<")<O0rKt
%Dk(e^IBoFn,?i%fA8XG3ca`9#hack!Da0R/qhHW5D<'</q:]?=N,'9G(Z[@LBJ\ZeqW.+:11oiWcBqu3edjk-/DmBlTAQX=EXTX.
%,CU1VF/`Z`iRg-Mi5aUJj:M'XjWD+`'APVcGFrGndlsBua4!!F=7q8rgE/&n:9ed\Ks0^YX/An+@5Pe0E3EVqb'lui4Wg<4Nt5mP
%ZdVF.UZqGeGI#-NlXB,LBJOD/+'\C'-`oIPDD5;m3M!j;YE'0K"1?m+HS@MZA4`ZqDhj7'j'oIplpW\tNs@I<>f_H0MPJGp57A&<
%e(Ns`n?DTPol'='97_G2[pI>a#LHrL?!_$)@;gAnKi]R0BCj4e_t!@u.k/*U-HG<0_.56`N@&u9&,9]9]rJBV$\sY4XR[@Vk,2$-
%b/N_3V&*f0/U>inEOH_PpRcs8&3Kc2Dufho)NWiMG<-e+%YqChKA#Ir<P(F:/<3r*nSiM.Q\AsW<<HX(Y]D]_FpCiu2m^?bn`ZXr
%R@VT`>;)o'Z-9o@GPNN_2u3jL[$h9h:0p`:U\TaoN.0nL9SLm1Ge!ck^)5Q5%c$Ar2L.2hm8L.k^S"\[CpmaGXAo&2pM'3$W[GWD
%g[pa/")=7(B:(p*kO?riob<kB5<`^9qT$u,[+bLgE,mGBXYcYaUu[:U+KdRiW:?>T56nte*fjV\RI/X.8#$AeS(@SlBJEI"I!Tfo
%4e!G"p5]HV6^iJ`b'fOdp^28Ic9q'W]me4a>+LMqA09)$LEka)pKMjUT1fG:^e`hV;_?UPS17=DS<i't*+$DRTBk,.n+nn+]VH7H
%"?AqE;S48$AqD!1BDf+[AQnBgeC@IC#9af])_'sLcVi]jj;*nKaleMo_B?L?%K8k^@\+3).AVo#LJjI:%oQ0%O"#/n\WAqAr9Mt-
%;$0GcMBKm"&t)W!d'BkXW=,]G;]bYM4pG#H>Y#n]Cih)XokP.N6[Qnp;$&2#PYp^Bl9ac%b+jF8O.Fq"j?`@9;B^`?O5km+8>Iu[
%)""O2$f!Q=;Eo.6QP*L+%JZAV4toQ+8@YDCJV6\h]d-DMQr40PHi7.5VB.#L8npHqq1]'4.4)@a4"_:kE9F.+7k'5C:]$PIE>(K-
%2uoW)Y?uq^fMG\p(h)ebfXNSpJ.&4^jX<X]-0<cb3QJuFC&GY(PH')4RX+#P/'^MB`SW^G.\:')]k`"*.:qB[8+F8`+,VnMMMA>k
%7dc@JC6X=85VK7mEk.d'Xp@)+^',"n%lu6*9Tf&DSFU&#0;Lk,Q6M`)W^;_t'%&P1EUV6rN;d^B8L\*TEf?<[YVlY"$0Y`1E-Oim
%NT@%fl-#=7eEanP`W)%215T)P;p&%U;p5n"O!.;XPX?fcNdf$DjRVA>,.!,r;NDGZ)5g!/="7;>Oao2"N&6Dh.lPJ1L7oJFcnqP8
%7,r<^G"DA3R$\>sOJp/e,EZ#9BB,(B.d@X8FbmosOEs<9Z"j('1r36ePSkol^^XS2Fus[c;GKm%?##%O#]LEoa<E5Jdbs\I2^"0#
%J7IZ%HI13p=;_eX1QI%<KJY**i'_JD+Eml.eUrnN&H>@BR2%\c"C)Fl0eP]&T`]Zs#;4]+`m15T#s9hl$Ncb)0$U)[k#[=MB`aGb
%"EI&kqn<:keFaicn)[jd#"qH_I;MAW9"KZqHY/G9o_b\(-HNH-O_eAYL`sg?0r9jY.4<3aS8lL^<MluUd?&o!""j<`aX\XGPT2hP
%Nbi=n.5t/N86mI.9ggY%m>;s@P\;Ms;P^-c97]bj%3S/JUE:P:H_:C*lh7C)N!V[&9bid7Gq:9ceqa0mrepV1W`1.krKP7mP=.YI
%!2N^g@IcL#o(RqVAAl8mRf3mR\ptFpW1IOca?C?&22!$AnNjo4%0]?0PRV20PaV&=GU_!sSdWZV6lQ<lOF!/DMp3!aVmML;m6I+`
%'.k(Q'#@RKHP0.\&krH@8?lCHGUnCIJJn0KI3B"WQNe]FdX['/%X+?H3(7cnAUGEU92&_^!$lRCcdi:#."+iP!a-[<>#*g>ffTCs
%&5q6dEp^j8!P6QLK9k9_>*7DH*S1J.dD67b62c1RhYTBUI(&3glJgg:^nQ4Ch]!pQI)QU^kbJO@)i*h-NMBP<[$/T*[HF/H%pfH!
%$54ti%k:DEo)"V)80,?-nur1;^[JU.=_d3/5L80\geLZ0p-No2<p/LXFZqFXo;%E>8/2eqQr(\R&f-ZLVCQ(K%El:#"q$_7Ytj,u
%FZd^".2S_Ml,6<u;G%0ANK^u7la]2mZ`&@#+G"X#k-i]2b\&1K9Zdo%L6=6TI%c?h=g$[\Kd\")L4jC$+sIB.+9t:?H@5R%1tc@k
%dfq(a\m4[I41tuY9C7B./[eLm=t+[lcq5pt'=Lk*D8gU6Cp+7,:D]Ul]6t3Y)(rdm&*,>GD*IK?k(%97!J0GY_#b4Hn+D+m%M3nJ
%&:RG/#W^7pE-4XK;[@L;\T/jdN'N"K@L]X,E1iq<!#6KFTVOpg3[b"3$UhRD""^-r#nB]u&VhZ7@aILm3?F8Hk\_'0k`N[6(FaN<
%;Qtik#?i;SKg-b.6'f3I;G(NCRZfWJ@8_pBBqNq":S-1QHST"OZN$.37peo?n]b\dYOG3TRR/Lb=AE2_Y8+Uk*'N=g:]'Ptad"`e
%q@9-/4.95MT2B7WRcJ-BemG`jd=G^GJEH:mh7f*Io/uJmOO+$m0*Mt,_iP:8](e9ZbM:@5?GDj$H6>Ip,^G4TncG4O3MWX;QWPIc
%6spjW+n<:a7I5[1@j^dC>_I6=V3_>6*Z$nl\f#S:Obnrh]bIIm;_+86=]?i$*.[Cm<(\9/8B@Sffe_,LThra,TbJt&="5pZ`=h=)
%:bK@b`m:H<M2Ap5U)@u_1Z1SMS(VVDo/RmYXZ7]KH0WMI:^C!LaGNQn!a;#<H0Xq<\,VcXK$XNrSe@W(SciI'_FL@Jlj#9Pr5Y#C
%jiJ)`QNbILX!\Q/Fa9<$-1:$/81IQ4V-'Tc9-GY'OcF]p,TXGdN8tb;UF0k3@&\Q!jeYrLlII3tqN,3nm[Ge(PnJ'R]-&Am&F5!u
%/7^dp:')+_6)&HuMF<jbFBWD,Ne/P)7)F$$c=G<F:-Bpj[t.S2"AKt(-3,*c`(GJoPdY'TNO:.+lZVu4a,:rciO9"n,5d8od3U3R
%P5spXdi`T=nTUha/h6UA::9#<kB4n5Olfiuj]3Yu'kg0;>:\:#9K^tGbU'tRd9BsFBgKmm@2C@dQGb<YG]FCS<e;;?@YrX-=K_Vd
%.m>ps@?Q1DV8Ogj^4Sb:=P5tafU&=pVlf&7@AcJ.3,J6lV?SIY4t-q-@7[3*+OgP&9#K4m@_O1AlS5mZ_j&r</%Gs?UkE[sU#n*F
%=/`U5<,+Lj`o]ftJ`V1(YQ7][_EGLZV/UbdfHcD(TR>r-huXR';CY;,&c/[20?\k[FGZA-Om)s6Ee.WoK"NJa$7Ri_Wlf**a!t1a
%>i2YG>L$*;O_*lM<'f<?J'54^B#_=.di_/O;4C?=cS@sroniXf5m'WuOeKgpAGS#F7f:"^7bTN\BI9$T_K)Q@p,$pr5:amAnkuOW
%M:n2VUC^7(>P*1;0eAiO0R_4eq)W'7(XenuoKp#63T\cX)_'C%jC9le]*=e$+JlFF-L#:sqHA`i*WinsjQL>/*su!`\?8/0"idRh
%;h9r9"Oo.oaI]YW+U#nhX]T7P'l9]jY7r?Mfcl!1X\`]J,[[#P.hcAt63r]IKN)_"C.0<kY_,t%jEcKi)U[RhT0`k,3.XC'b]O2`
%BQ,8(:gA^9<$bcu"j7P>(_dE$N9!tc\!.kp+@ep8_Y'-0;U7lpSnZ"2g]Ba:<(gt8lS#6rF0T&.p0>7c*-EE3$2TC\02ka#08oZE
%iC"QC!gWs\&k.ZPaC%RjU'bkVUZCu6GSfpUSoR#L=CRJY9e6=lV]=bmBUn:jOIZS[9V20#lI?s:.*e9rl)CVB=6n?u/^^(iHWBCk
%(OfX*XE`SA%<,8=Vo!*K-e+<09+qdAZMt1>ZG`&tJ=&]a?.>VlopJRoRg_SMI%_,;Oc\f@g_t4SQ,0U09c,(Zn<k&TJY-LoBhL"I
%.sAq?3'J<I'86[JiShr?6Xh\kJ(LlDP6B-Lac!Nj_"8@p.5b"(8:1^REYQ]:4X2[nQWL&5;h?"dc(LDp[,)K.2ZpU5!&nO/3WZ`S
%!Or_-\!_'e*^R7f_6sL%67HBs"s"$(\tjU"W&>ftQK]$1Y!WIf1IdZCi^$]I/O]Xkkm^m1:loL0K!?;Om?=CiF9Tn6ck_.,.Z6!S
%2#qKYH@mFC<CX;TN620#7eJiJQU#=?OEA!,(hjbQ1s7T6<.^;?SgQ'$67FcIX"jDO%[L.k)VJCdmCLlJB9OH.X6V66?BlYRb4Fdl
%<]R>TilKau^/iESic>H^;[AnR^.IB[U2E$KAmfK.#hQ7OPYE?<#.A,QC*o6YTP+BkK,fLVDH=Ws.^?6.,YZ7mF>PMu;PGI9IZ"Pi
%9.Q+!OBdBp<,F)J2'p>kX&YJnalptZojU6N=,!hZ,OB:S@4.!S8eK73I?(UKMg,;7(X%&sM6e"[G/Dt:?fPh3NjnmP@?Q?f]!<ST
%3LI)d9&,sf9;#[\VHlX./ff_.2=iG3i8o#dat\0Ukgc",D3#q6-@h1lC;*N@eOu+\J_3F,WD];G]r?Xa#X9YMi$0im!m:l].ATu@
%+EkU9(XUi%^"3V/[MpJ`.o"b!<)K?K(W_4o:5!//WJ(B0+*`7uo(s(ZN=a'FLRoGS.@M_3D*N\PJ_TmLfbn?\D]Tm3FTN*T(ddQI
%h=:XLVb$qm<dZ%]!@Nm0'7IQ5?5J?,h.f@/76oGQ9G,i+QZ#rc%42_!QAA%<e)cgS+gd3Dcnlq%5)AGZWVqoVWI%TX*L%D*V<JsF
%lak;J!ON,n6g,\-+%#-%"q1eU0js:.hP'6SSFVke+Z0XhNEr\cpfq-+3^q9c#c0gXIA*skK_D7r,beK.niJeHO@C'ZL*m'3dZ\3E
%+Zkb-LLh)E&]PW8.E20pEZkiD3b7j<-R0"\h9!;RjQ70pQeVDuoALA6'G0nuOM$U:H;8&b9M.e]?-),@r.(XSct;&\K6^t"R0*1k
%ONEP;pCW-DADTZom[;.nPcL$.=LZr9Z!$GSbFJE,B;=+U/T0i?='#]6+@]oO6C5DoWJarKOCa5Ln,hRAVh?NK:?`se/i6/iW3eD*
%>,fD.Q^"sJ`,"fL&Om*^b"P'V0dOh*%?$s>BeIbCNF[o$g_T/N2,/l=`WF"V+Q0*u9Pe,]$PQSS/uY/W!@X=W6*t#jDSe-`JE+,!
%`,7XL[uImD\VD\,"d&eP'b'r')%2$?MnCk>>rN<7($8Cf]\^Kg>/3mbW!sD"/JoU:-lXcU:icAhV%=[fSaG$6EFB(:=#3\1@%`NT
%gCP_GFA:.>K:WZ,F1FS>`6fY?MZES\Zka7BR+"p.@6%[:okENO;6W`_MRhed_J!"#N5B>>Q)jF*D[?mh'/rgZM!>%%@XU;m9WfbE
%$"VjS_Rt96BJ(H]9,Pr?N@S[I/nnL7[VBlKdj$SG.nt=t^02BH']s(;L3B*pC=95X-@o-OKL/X<6=*,0?!/c-9.>gjMkr8Q=XD3X
%2^TtJ3U!MGLqk`KqU1/O$\Pg(_OgAuFjF%EM(5DQSqfi#G.68#1?8(b\Qj#2R<44r8bNT_/SoI8"a8DXJAa2JaI"WbGKJBt=cnnh
%,;$),qse!YF3AQ.<_!:R/ZX*JOufiO^8*BP+;<!\Zq$u$>\#RBQ!TQ9Yi9YQ1"Jc.DLR,5#8+@29$e`&+8#mj`7c^B"`#-!B@%,)
%9jD'SkiS9=,6D:?!.$EOOQpI^nnUmQWFS0B98:!a1QtR-AJZ[)WH9L7Z#H*$Kd,!*a`M&+$]*#n6$b>K$SO+VC067ueQ^%D2>5eC
%I!IeQ0OM@q.dG8nXd2Q/,,r:E$8!lFW?F*H:81FP`mtd.K[YG_V@t5=*&Wi&Jl&5!2;AoW>.&lKTX/-!.tRg.aiK9kbX`jBOlc/I
%bAf(?6c%j;*g([SO:%g#31CHukpT^C%:$2&krm8/7Eic)An-U2!"FYT+hbsp)MYnp0fO;Bd1/eU%#ml:Xj\Ym(P`PR[mgC=M:nWG
%a4RDr3-Y1=&Irt^E(DP,m)lkB"(R2r"`/0&joRj#dZ2(WajQA^J62k_.TsdEI[;^0oq_orls2`7CUQR-:r\?dPEat'o(Wi(;5m5u
%PsKVR's#"kF5l@h8rd01mE,/USJC6+O(bMHGqJQ30$BYUs.p2WeVKC8o7\QU*&$KK!t?G6iH>rXTIc*.NYf2.Vh+Ugr-1QMPFXOM
%!b"3Ii0P+o&"<%IH#@8^=H%hY?54b/(l3N9DC9PLO+I>8T0ZWi=Vd^6!h;%Kp@KVP'>hd&%u)A$,Qd[l(6_JpJo4-1S#AI5*s+$p
%&lO"3H!XTh$,^M_"jRq>Kt)JT=FoJ-,Z1$]`b_3U0+f24-L;W9S4p\R-!&KgQ.qm4WRVtg"DUj#W.JfXjPo@m=;rEmSkPA$+tY0J
%_e(Ze64-rslq(.[a<gr0TgVpBR_Zp>Pu(XRQ:86V^t'_WbT3TZBk&RC7)\@dYI%c`O5*G2E?o+rb+UM#TF/Q)YM#hn=sOgi\?=M^
%ZD[pVreVNGJN66oI42K=lbo&(X!597N,9bK$S]FD@[ec)+VEP+95Ds=UJG.4N]#fUQ\o)n>_I.a*FjL9"\O_V,1`Y"&IaUE3J@kJ
%<(J,uSgJpYjmnkgMPMaN0QgY_&d!n=OqaHCKO>ul'.'0Q7AHT0#.Lb!jM"1SM^6&&oKaqQXlnus(MaVES0k`W./i)H978+Ua+A_L
%fgW>JE04/oN7HL<H;')@91IliSsHGq,K#tT@*bc'd?tc0I%cQOPYJd0TGWBV@BiR7WoFJ0crVt8K;%\)kB2mjraNIK=bFC:"XM"X
%U3!J:E4L`D[Ef#G3Z[2*KeEnUO'HD=`"41b;@us7,W\=\R>ZI6j%9#6PEAHn8mY=_CXf,P&m+?H[7Uf'.9X)8gNK9V-rHV9-%:h0
%2t/:U$H_PMM*g/0*QYW[#-?`\+Lt"oq/fsl)nsUc3"B6SJg0G,4H%]X;2jS13!_N4P<ajF$O0HIKF$Ctk59Mo1&rC`O6a4j7*INB
%iClob`;>.j*E/O$Vlk!j`MKoJ7QO0mV6a"@AHLuCmEE(&-EZp)X0BBb;roQ(;MgLP>UbA\>`qp!=1YGO=o)%%(Z\\]^-_&obbQmZ
%p>V6:6nhJ-Nk>P;Mk"gi-*LL_9:*.FCHtVBdcE%/%nMDYJ0OOIF%X/%V(3>O8XHRU,)Vm6=(tPIZrp8/C6Y`ab>b,YY96b$8lT8B
%8n#l>1TLLq\siP-U>HU++Wm8dFXk/GWO5'%;U2AZV/'%@40VC>X@d2`XS0s@Qka-X>tQTi7oeM8Pb3a%nH]_o/]^>W7&2"2l(/o,
%=\+a0A;i!D(2AqaQHMQ2aM_Bp\ptK:EAPXV)JG9J[$$Z[9Yu?#=-.A>jdSrMePL$lI8/:41g,T,3guSfkH[iY7]X_B`$8fa5fu2e
%i[Mu2okWIp^p#0[#bY*^SZ)h;Fr<!WAKWE&>oi_gBIAYsU/^(Pk<,C7;oljWrX%&^(SU*K9(J%Slb`3g[7@E-$>!.ZA@bmSZlE#,
%+NJTCPVji+8&I6-.hcPcOCQ]/f(@_cX&S=%j;&EM=R+ue2I!%+8>u?8'Kn^'Y7KRW*$ah717RF<Xe[e-J43@NeNL7L9Ep_Va^hsE
%O"K@(R]'9(&]K]!kge\ao%:Uj]o90SO[L%?PhY<CTfIh;&OC;^_oj7_<a6?Yk5)JPUg42f1%[3_;Qu78;%i;\gJBVtPNJE1Mh/Ep
%V9AhD70HmZHEN'pS+G`P&N/1l6^*dsbY(QpQD4ilb/_iId`'D^R.!X-Fu@dZW?%=2=8cpF^3Vm'<PMKqTq$>s9[8q:bqn'2k4Q]#
%b^6@1/0jKC1Dn-7oY6n?Jni@gUG:sUVL6<-%dsD:WR;C'-kS`gVR_LbSnV%GFS*6snb7K,UkjQuHHFgQ"YD==giR6jb#MSbI9A/t
%c&(1GetlguRYl&@L9"%@LSebm78jIS;f]Q#\_W@r8^ZLok[%cYl:q+aO-]a&+Xb_W,e^983ekr$2+AW@Z5a7fN!!I&MEPgY,*Noh
%%jf3T'c2KoFep-31i]@M.rDr/G!W/Fh!<eGa."pVOoYqL?]f=.JTI<C!0pp+nEOXMrPG>%+i,_,0SV=TOV/5Uclre"c5rG'L?<.T
%NX`6I<_[r^$$*,'U/@7n'Q=pbXZk9)R$'FgnY1;2*Afc,V6lJM6A!$YLqhd\-f'T8?5!]P6i\Z(68p$AEkLY:aNn&fB"l9^_T3E9
%1$c*k<IA@6QEm:)6cYQ<jd>6U0!ZN'=c\!4a#b&=P[>*W=C:\LJKV[1oHD6ii@l?gAe-?tKe_-n5;DhB'Om+l+-mLo]5kf>KLc?+
%J]qGl&1<]%,#V8pZrgR2b=fF1Jb#)mBOJ!R3$&)V<PGK,Asq;L@Dfr7Z+s#L*\B+4W73#V"DRX/Put1%`'UNSV*uS']ljD@k(TNA
%M``t0Op3ITYR:dYq%/YB+TX_/\]B$0M;._i/o65\J"k]sS3%*bK$^?gH?#=lTn6W^m'`oJ`%0Vb@E9dp_/'aB-u@Egf8?iaoI+K)
%_HJ:/q4=;'X2kRD*j<U`dj(k-ii,eFT=>S09uTV!OjmjbYa`k*V7(80;7h::7mE)4e>.A6:_c9UH"0GEgk_Rl5`eKugr6ER,'mFj
%2L8QH6\1H#[h_&"78H94$m%Q+`_I2pdk3"k>$>r$/k.`TA!1spAtbhI\gZn%bh-PK@kS3A%kYh^Oe_\^7Z8aeX,)2Dj-&ZSaI')h
%3#:PGKj+D\b,Ar8G++;&(/%/61Zhi?rMj=uR??0[1$D$+F>#*&=g\B5PbuS(ntl6d,Hn>s-*=(ebF]-$V++gKaH/S:7P7p)LgLbn
%<^eROI]]ERL_[k$10U(_2e!14G#tWSn.<(+p(GtH.dQR@<Q04FDFp$@DjbQiEQ[S,OjuoDK,gB?O#_N$LcVE4cd6^_&]^n]NE&Cc
%/&W<X*;)j4CB'4R0udrPN6-&".ZA=hI'KV*^0!gG1!#Kt(Y_@pgI2q-n(?n2@k,K#^EUO^LbZ=h_H>.r@E^@D=?46#<K+1DOE!jF
%0c`R:RODZO*bEPUGEah1"\e;MBj)J[bVcU=AZTB2)3]'[*,XGbO@L0ulX?cO1T$n*Fa93+&SJ1PMDOCt*bS0hH^8ZkG*0f2Ea7S2
%mRUjSNie="jqX4L["2X-D6/'2_i-M)*,hnuD6,5D=P_8u2?<K[73!fp6*;8KN#P4J=YW$[fmI^``3HWDShf5&-@A*&ig@n5NldYu
%q.7Ja"2Z!)YsFTn@ZF`NW+/+TE876(GjPM+hYEn+(%SkBe1loSK&2BO&Tpe0F^YP2XcAj%kEeGqAbaXU+02)*h-hpKg[c>VUCK;A
%NP0JM;8J5Qe0oOX,%]*\E>([L+a9f#f&4^G$-XEPM*4!307#C6!XBMJp(H;XfUO,5,"M:9OUiB*Qobi@&lKu?E=(-](1=[6R*Rn4
%+=^ZQ;@lk@*Yctn\kWJ51J'l7NbVJm[<[9&ec`pgDatqg^6"g\"^Em[!?d#tHP5l\hb=\\J0b7T&cZE[%?Oa2:9/T7X',4qW!6\\
%Z@;mA;ZL!@\\A]lP*Y9W"inPLMdBPobhk/!m<+&.iX^cr@U4p"$_r%VkfOsTd_I=B?.f9[eSpcS<Ilo'#-2QjWle`E4<T(bUbX*n
%\e+W_E9\&ZU,'OE&O]S/%Fq;pB,(Ce]9hhColkgt5j)%])D*KbjHpb$130$WX_\e^)BGVFUlfXeKZP\HAX),3&cB<Jb7rnP"iUK!
%.)@S`pr*5=MJu2h=@&V@I'AHd,#X(g\pRRR%5d&*AkmA/9S!uVKFs2Q=EY];O^O#bdL%!M(A:'X*4p):gbT]a"(S;bPpX?lpc?Lt
%6j48I_S?]`L%''I!W_3+LTBsG84">[>FO>ldf>?MJ/_Mk0Kpo?E2cZc(-`HHs)S%]AKX<=&Ns(4c_Lhe$9T_'#=[:<BHpYg+">)R
%<<36QO?bT):p<;k6)bYMI8QuI;!E>3N!N9$GuG5M<O!(=;WX1r`V61[`NHif$Y&?mV-Ko$_$a631tDQlF@BJPeu<T>g!tasV23;0
%C``5<McEdB20p`Ke=Y(s-jh?$V1FH58UDJ49@W;!k&CRSla6&U_'Q)419ZV9f0N4ReJlgNh6P0242"*r+r)B%*8m5V%<3Q(1Ns4i
%qciB;EeH`md,T7-+RYg1;M2-e.p$OgF8h#T:dW=p-g*,5MLQ!=CZSkSSZ=9bKbCqI8l'Ns@IEMHfB-Qu(eXSkdXlu3W,3ehEtk6^
%pQ<s:`LcI&R`Np%K;LXh^sg44L^8YR]jhO:_W`Gs>^oj"#9Y'bdNq5tgjnTQR32g"bCKV*6n-3Q95/)j*t0YM,X't/,VSec_]:<s
%DgDhUJ_h%@Nq@cX?1,[DRqCQ(AF,t8R.i@40[mGDA%6c_V(J$m.88MDL0dr>>KjbgQg,SYJr:$?VqCl!NrplU`FA+XAhM(8*>f;<
%b^mrWSNumt_Jp+>n!\Tichfcac<UbL1pRBDBHcOkM>MPID\95jJc;V#Tj<3OBi.8]NX1>l)5,B:0K.Chlf;YjQI,^dW*at7*1=h1
%)hI$Z*i)oia=oGjO)&)T%n2Gg<kp;@1NN!7!i;"pjV@o<,d]PS_T+H<_kYV_!\h[MKr@?`SOU4rVIdS'MY'Pp6L,H)ENigjUk*J'
%Q>'j>0:`isQ;H\F@kffD=5+!Q1Ob!3X3aGC!E>pSJ(iWHYl5WefU3d>^[XrV6H#'+W>X<?H_jFH7*'0c7L$kKLQ>?,%gQ9WE,Ij)
%UQ^[1&Jgna>S\*F`<aJg-a_`\De.5R=tXhbM?tgSB:@Bm9f6Bo:jupW'SJiU!h.D64h:Qh#N!fJW%(VC)*ksZ'X8Wm_q[N-WA6gD
%:0KPD<3((X]n!;g`Yi!Y!d3,>&P\4l4r1Hg:h:IiP)3GZ:#]E</loqX<njSDNDu0oU)=7T`e0)0C2TqAL5MgHF%+-Zl<n\`#e:^G
%Kfdm#qmHeUY;J+I83)B#.0`X(6`=P'L8L779?*j"$=hPrc#IlYe&keEZt]8t*nI)l)mQP-dXb.1T<ch%V?*^N.T`%2<c+/'bYWFL
%e;s_REFVs)8(@[DOfMb:4H'8Q"SU1oJ1"J#4>DC#!Lc9s8.V-&KM%JqN#k/\%isorjhR!a)804-518']9qXaYql^JL.7,/.oZ&*W
%'aCWW#cS(HW9ouF'cK9a8GXj?d"I+78EBi7<ADF;o\bTAR`7nX<@5r$!Ai)XYhjo@-FBD\^_pL[g))$\]XnT%/foNfQ,\]P_Y-AT
%aU"I_!p;7EY=o=o'6AZ,J-XF5Yq]MB=KZpuEBc,)O?/(peu,g=4Mo5[7@<,J(a@MnOP`r?+X:s"MGp[5n&[O`mV4pp4h8-Q:h-Ee
%/Ok7sftsXt%92LZ(4aC=ORn\)j!JF++E`((+\;tBRQTPfjU$IX6PRMkh88/0oOO].Q<eCJ$oro:)gMb#W;01:6Mr)Q,.&-F-Z[q>
%f\q!o;/AYW5(=W^@=ft7c;qI@_MD/(<$P:[^;8aF2"f5U-0nr*ahU8"mi^hES33',=gqc@>6G6fWE'<Y1=NU_ftC!"19O)lHq>]K
%jrIau+4IpD'Ek*+Nd2W6&\_bSkrZmJa+W>P[`!*CH&]'\6BpZ#Er6VXA'/`Via-,+5I$p`8@8sE2Z]%$l=OW8g[5jF/Ea*[:9el)
%UKA)V]rTX[2_YjC?a98'd_3C>Nhk9OIhd@GQ@"'05IAogA^Pn&X8TehhcHB,Xi0YmBG@-hgsC:Dic\*2ERa\&9j=WdjsVcUZP'H!
%iEB0NPiAK$\GR8-8,2caZQR/8b:lR<)l?Sm4Y^f*UI:`[i1k\/0(-9Xgt\a_1CNIR3Aqbc<116qq-n'0=9NEo)7\2n?lA)Yd$i2`
%/tE`iY6[#G)r)k1/+.m5Y`t^Ie]M:McM)):HaWIYgA,(BI'7_-=-o-2cM)):HaWIYgA,'':u<c+n,/j?a)*3nddn?3(%Skl^/naN
%D-6#iJj8XS5O"bB]AQJsi(puC:V5O\]AQK>)uOF5fiOBtcEhHPfsgS>gNiM[4Ss;nI94q)Dl^[CSS+Q@GSAW#2c7u/O"^/VBfjl+
%lHld1F:AUth1f%<&a'Ph?9se>EB1I6QSGUuKg#SW%;h[$bIIH3VTm<p1D3nM$fXI:<Hose<5bT.N;q56?"hG..OJZ!"Y!Z-p%X#K
%D<a)GR)P4?a_[aiP@m^Im1BhHPZgoWMo^f)Otn29Y=QBiq[H-]g?%nm&t)_."=7g?f=Z,t0/MG%Y\.dK.lIqPkZ#\9(9rFXg/aR;
%Qc0(nLonR@I+p?AqipU[_m2]%-fZq8@.4LVZD_;SesH7COMR@=M1G%`_"K!l3D/6$I0ft8+d?h?:&@l"565X.U=l"Cb>O%B7DubM
%6GQK.'-4s+1aJ$a0S]t_`(C>rKLCin.*b+F>)\[cBg4@fI(]*(Wo)kNdOO"FEtN8g34H1Qef]??YKpo$-aD74YS&23@Mhkii@?WS
%@3]/<.0]:k2:c.Z_oKc\3);P0;$CGU)6>3ei.7R/J"!;JgZ^%R>PLHm)r)u<qQ=5^:h[XJ78t@0P:h[s0pUN]T1USM8ch6XV/rSG
%*@_Sc`1mt;#e`pr\bJi7T%8PIMf^p&lAJUX.5'%PUpGk*!-JIfMH!SlEl;W?;UQU(&Z@:AOEr\)alm?ZBdQ_OQWp>^"aWe\*>,52
%!U*H7diB`'m;gpK'$Xs/1SS/TI'1"@BV3W8A<3Z6UQ%qX:)M'hBd-AgU4Y'W@CcU%U!(@UUi,Ia9WTjW340(T9hfp']l&Md1g=2+
%pjPG5\P8sV-r[:X3"2bD0S1t0?Gu+:hmAn9;e*OAI)<.i9WlO:/N()J4^4[)IoT"n?k[3.f=$*fY(^o6c%r-6!g?9f%PE-53ulT4
%#t#P4C["X<2ZGTl[TD5;/+6VJDJLo6pf(JP1EBh>lrh$4^!;[!2`<V)f/PMS@A%6*S@F.]2fW8'lb\kHZO0L.HWKBFK[WF::0-t7
%e'u%ad+g!$brIUW>d[%teu(Xi`?B6[K_R4`]q?A=&Muhq$&9n-i%^*JKrqc)NPnO)hdLC3NcJn8W>n<GQgLac3iK:$?5i.T(b=F_
%PRR1/EDT@2g'RnZfPXjq5[h;"BY-uo5s'sf!6"SS!kkBmrLu<Wng#>8LE:/$JO_mF5f>gX1`"[H(8Le2E5anX?.,OAVGM?;'r5dn
%\qGUVjb/Ahb%9a`@>2eoWYH^;%o)5TTh]nrP_nWIS]F&B?1'',E&[cHFs^h0I[LUFOY^qg`gc5,?Z=j\LlJ_1'?elgKB*Tk+^9#8
%l0r06#WuRr"YmLH.k:cU>L)1YScR%$J&;3n<ZcD']#Zj#,Q`YsJ%u3h[b2Q'8C4&HE>7he5/1.u7;^_TJ!8Wt6&qO!j(V$@31=LX
%qKkoTMW7.L`Dag79Va'o6s8KoWJRmsNK`iT-,AduSAKhU\o2?"20Hr6h/+qq;,MPl/3@]$$)qY8/LVT[#o_HP#8YZOii7[>Q$5P(
%8f1rMagne2ba4ebS^[=I/FLJZhKcB=c_@k[U5%UW]iN+B=%103;0f/3XeIEtGNiQd)fW2P(YAp)>:9."5jY=;*fshq4iKs^1&uRU
%%"r8hl_TCM3b^'(C)_*/SD&gAC(s@XD+>Yo6GkPKS69*aXb>5OjPbBTX[k5s<t"ednk^u"?\/WA4/C[2]?b?/"2<^3!_Mu[7*Nsg
%pcud8[KmC2=*bZ0gq-C:N]$r/)h*Lb-j`:+_OnA9&e?-2!_4c7NsC^u(aTna8F)tBQ-#"@?g27D3P&Rh0Qfs`s'="h8,ZM$2L9=T
%,IFfTAfPBtB,:'+SJA"5_CQmojq4;Q>?-dJF7KRT*H_:r_hQZ\LjC*c\V.sIW0PF(`!crMDl-t^WYE?)S#.@+!D(Vr__gp<9fo"g
%TH9B9,hr0V<Vh`lI-<4>ifGK,b(t\>EGU!O_]W\a:7ScjW"!L@J$-2A@NH>_O#>uQ0!.HNI-%tQXF**78/89RH9?AqRA;"k'OpFO
%Wdn:fnG!U>Q6;rY86ttQ@[Up\n']!%Q,Z,,/1?URF?JN9.*[6TYsaf#lm:((c0:Q^-Xcm^_nr,qj(`g.`$cKZMRu(64M%:aMO7QM
%9%!<IU_n6b9UBhP/6Bi,%&GJ=Xro/.acUT@F@Z7"_k9%'Gu?Q7$>U86;oGr0,V1uJTcK]BP_rS+`0!B#\YX+$"Er;B&n+;W^!)I.
%OrQcBZum6nMsMMU.$49Ud1`u;<_9WGdmd?ZGI6^0>!+:00P.mB'*gP`;G]@<WKc#_*7aXrm]F^f%"q[ErMm=orAWRS"]Mc`XBTPa
%VT;ApELRD7BJa75p3b90J0Y9-c6Z%J;>`*O&7#E96:`QV&-sCAWN$;&,W8\,ge?T;_K<Rh$H<H=**D"%6=_S]]1f?=.#31WXhMj^
%=1K"j3]o#lV?mc*Cet1#;,h5]6\4C+VCehD?;MCF$D1;IMJAJq%$YEPY`U[JU<t(lK7ms#YF3TPSnu87Lm!'%*c9N4)1HG>Ce-K*
%'#m;MO.1#VV!ShVA!&n09V\>Vf:2>X1Q78b5&_KN0VST:*cYcLTaX4d,[uq%W?ud"E%]Lt#aJ*^,j#H/&$f!J!rn@q$HI*of'Bp8
%Wjd$42i\o>6M@',#]Mi%+q"].$0;Zb6/2[eQ69-7_N,2,Sj*a'j5S%<,OQ'D(<i\IZD-qe5#L)+JjKI1<GoFY`)pN[&sk.N!]b8-
%fZeQe5c2(b$RONgVQP=FLt(ZWY2q?$hj6WU(b^pqhbHhF3M)I-R5]ojcli@H_E&'_dB(o$oG*[Z1gs@kHd_Z/@nJX9DC!h6e>`k^
%Oh_\HKYVOi"W'MD>)MhA@;@:8a2d;M$rV9B4;e:;kB=YGFDfELCi31c'Cfk'UUp_[?b](YS]dik&Y1qETp9q/MA+C(,L*AlXL%.G
%C1HHLeMD$,%=:P1PJs9C$Eunm?tDHP1'9S%k>`=&SNJ`3Ht3@=fQpRNGK"#CNU'Y+Znbjp@V]!b+@p=NMR>'PgKnffiur>AN]at1
%'Utn^X`1Vs*,R4^CeY`#P!p[Q,c2/E?4]a$J>u3e;,Mp;!B2G7:<WkQh.TOo\nM@K'lH6)`uc@'<BC-o")jVtF$5sebhtiES)ZtZ
%g_GX5c,ie2Al.8RZ[2:uCR,RI8Sogj9C,7a)khcRaA$9.b.tfsb]SpiMC$k8a='c,\M@5JRasQ8<]hc?L/j%%gGhnB@\FD?Fdql0
%YgS'&!1jbi\4FZZ3"WXc_`.EI9W>q[K:Iin*NgZd&>`9)i/[]W8\Q1A<(@K,JP(j'o%5B*(;=IZV8r)j<[nZ'>KV*;:<B%u\]o5U
%d+0E9VoMjK'jQml0V9g5Ne/ijN#GnuW6H_7/V]0ehsD<9(5V>bI'RSIRhPj\;bXB?MZT3o9=Q[6E:2N>"r]`Eh<:^p_Y?S<i94c4
%\SdF;-5jg&qO^=alqk9'#?ili.\*J/gq=YIF>X5-GOuJNJVrumLH4afJtL2)Vu2a!2\H+snC`_Y'NRUMda)?DSreoab/ph\94&GX
%=Z,ld;SfP8nR2W##S8kG,Dl3k'm$jZKt&PV>tMpgW-Kg%?[^::("QX#fW*lljP<'?7cmsfl:RsY&J-1N6*Wj6]u&fMOut1s8X8";
%A"je#GeR7W/jYN*^F`/_<T9PD&lYX<S&1t\,$G<GKL:?`\?o)ep42V+"]="^PJfg/Q8CZJP\niDh*e_:\uZm>@d6%3:WjD>d9WnR
%7j5?NMBTScAib(ep4K.U,jj6(od/O;B>ISXgbf1P#Gr+f`L8B@Y_(KH`a.]7MlOeIMK)T-O$e/!En9=k>$AdPD"*-k7tn_>q`888
%q3gKsUe0#f,&DaaY-n_$`rh<XI7(Top<i%o\'U;g&iA4`AF'B*#d*aYXCU?.nq\,nD:jtoW^WG>KL4deV@Z'?PY2umiq>\e:IrB6
%0.nA>@9a(n;*d/U_RC)h\Xs6':s&X"6j2VDic&[K`oKHq6lu*Mc+.JEYc<FZ@A2BCWBDmSDC![]0nY@.8!4#m:2GS06tQ;*7YpdJ
%a0j'$BLAaK`gC+JX<`-mO7j`[$@Sc/9*qbuN_DQ!U6HgK\OVt3UFHEr2`heu4*&/+KM#.SB4ZJb/=*kV(G3^*m%_Podc1.<3S[Zd
%Q+J\pE[NH)?m$>=/mm)ldDBEH,"'e1K$.XjH86hCmL67R\7_9BV()s#[pn^/KhZuZ[`T'54=L;b?8;-uQb0%LGb%3H<flU(DOuRW
%NY6MU\3%9,:?7GiI87?T\Kr(#&]C3JKj5W8KIaqL7`[g7i<t;>2`qmLK#47f?eWXQjPZXQAj&W/0GZ7tb"]fFN!p7OV'4VOS@4^;
%[[qlOfsj5F2-=5%q/q/$bIi:,=F\'cb?+T=0(\k'2La*3\'F/<p\M!!2-1O:hqm(md[m=D;*tJGCSXt"B@JMGQ/bI%$X1c"W/Mja
%]lMpq=>nQ37SpPYctQ@?"9HV?;<Uj70!Ys!VJ?cbU"-53U:+e6G(DcOKaCXbO"=7l*sig>D'sil,Kb?l%-"W/`bjMfag<`^B-*cU
%%^`3&b:6g0e(t:>9Ma4ob*LAkOD?#nb;dMj=24X,_H:'LG@k+:44?AW9#Y7\Km1q!,I\aK7qnp)"n-FWbEmdA4/FXPI;-;;@\5%K
%.+WPd'l6RuJ^fdTopnV'Q4bC%La-b=`)[MM[bARMOt4HG7WQg3/lctn'Mh10&\Eo5,9f&,b5F_<C#2F.L_^C]1EHcp2t/Y)5"*%D
%dA!Ka8qe:CBosTupm='K:Lel;[RuTB>KZHN@ZOGX\K".iA7<_/9K;\NBo.dn`\r<S1!O_N_2N-kdbECI`=uWPb(#h]Zuu-RW)@5[
%qCBl=[dk3Tpj4GsJ^_9%OI=JL&6k,%\7ZO7F[g2Gb=IN9hJ609$Z"i=XBB2YR084Gn-oQhb5Lg%H@`d<?DcrkE=qJKgGRKs]EOV$
%>T*)F99gGQ5eC'4$?^4q9/Qm3;BYqgba02#=q+XYgC%.k78tj,<Fmmb/(h=g4/h/;-3[&-:`@5d=t#C/K"[&36cr:QP`$8sTr>=t
%`#"@,dY6JQ:%#m]9!c?CKS@PP,ILSld&1afE*%;P.U8ui?6sg!j<?cd.E%.l?q9W&SSPK;3a*/(I`CD*M!.nQ0OtcaUm\kLP4*F=
%6EV9V:6ZX(BWeK#/*Ej5f\]]J9Nj<F;,-[*.J&Ds"!Yed%lD).<JE<@6&hj)8V3]-26Ft0,sJA7M(;31`d2?YU^GQtNlf5YF_-Mu
%+EcJ(YWfK?Q6p/Y6,O)k+_%fHBOfHp]'oL&03@L#BQ_4'9p&)E"aTW'e:gJ("D9`=-DD2g67sjm&2-0X52API([6;[].gqa,K3nE
%YD^Q.M,PkC_W_t@Yr9CeB"TSN">f[g,_[TeL5iW'c6OB4gm(Ndqpj<?"@/@oL-JqhVp._sVQYW;.`cPH+\Q67U-MAD$W[VCb\<"'
%@UNOTR'm@5>Re?IgU3rrYG0r^d46ONU"M0E+r0aLR#M^O;Y-5O:aiYRB5hOc!MVV#b!8g8SY3E=<R@[H2cnq9g^KDI;@\g%5T3Z)
%Ui?DZm92fOos)N&GoN'dg<0)Vl<UScRg<*`H_kO+)!G_LpQZUZXD6Qr%rn<p>e"`Q"2h8O`7Ci(6g>C"%l@6ZI5>SFXq'ZaY\k',
%<T($3G87nt"nF"/&?,]D'Oj@Z]j9md=q10@iElQ^E3C;?)b[tJK7%7scQ_RWL4/`SIu<0fd#,e#5[aZt(/+-DPtDF`@OKXQ2F)C-
%EB2Qf&<p6M,Wg7]bMd"Q?tPuZ-GZ_;/TQXbH;^sh"YtFn5+`PA%uUm3K$Al=1J)8,SlC<e!d;jH=+1<9q\"@<$N;9LN#g%\lahg?
%hUB]]2+.!;4C+!-/4&S/AgNWES8ALE`s(dMZ-Q$>HX:9EPm[D.DIg$K*\538<[@<Sm'BU)hhq@B/:IaIdseWRccaUB3e1Pu&X#$<
%J)XG5-Zf$G$DU;3=.4:sWSd_$Pf-hYf9m_;"Pbl:?/H/]#N/;nhFsKW?3I+3m;RIf[?DlK&6`G^@TBYhMp_775:9R:m_62o;[q=<
%q*O_?'q?Mt#3X'h1J6+V;HX]k\1tR9A4iSKMB9[qa)I%i,KOQFEmZaBK]=h?E.oV#PaS5Ra>l$=6+4pROb-jFVsJFhXc<ggQ&@NK
%8r#s@i!ro/b&mF3E.GS@=%G.$I?W]#dGZgi<*..QpW'9]n@N4kH6(-Y9NC!*b&=FfTkZpeCt>U9<e&EXpujOo50=G#L?#%Hr).-J
%C'S4sK"V.uPN-/\gS8+0J!&Gd^!ib/YcGUP+P(!q#lat^iDIG3;QJtR2.^Dje((_ik#`Q+JbCLiF9+>@ZD6IA\iD7nY1_()b/lA@
%mc:=W3Nh`.=E\Xo8\-og`4=97AlNZ.PuaJBS9eTlg]N+eEqd@'U.B$fHXOspETLEl*=Cgb%*<U&LI-:@7<sAdc2,o\F8i[)/4(dh
%*-(uC^^*rq5H4,sd"<Qn"@.OBFjC('U9e?_k#>bLMr?W_dkR!o4&]Wf1c,&AhiJ1e\Y,nDEcOR8Tn6RUJt,XLIT$cN@)raMC4K1,
%AHu._d"<eR8OCK2'u:V'""b@Q`bOa#dYR^)kM:kt:b+UU3M\3gk`Wi`TcWQ2'B:N(a.g6+'u&q\<o&d%En.B.]V04sZ"bSjik2OW
%d;h7e6J=0jqSID-X%Go_HX*?dYV:71TMX1h_',8_J;2$m+N;l%ol@+EgfS2'MEaQMM^tppRWc7rpUQ)R.>knjA+`6J8#=8#dPi!n
%a.Oo"-"]W>P'CXp#*lHjU59g9C'7MA>=b<RPVo?H"fJ;cg*.uRQ0#FYafRQk"ise/_mQBl9SG+:eOaaYNe8=pdTgHH`>K;Z?UBWE
%\IM)R0n;]HN)tZO)oGgo/8UXN/;%1Ei@\jj`)T`1G`7WH,e^SP#8Gs5,tV"jG%!tJ3eVHUNZd\(ntM9^X)T=H[P7;8m2$uT?b[p^
%%SP3'9l*@Y/hH#j)\IgM5]bWh\%%8t?Ap[VCh'>/@YbTY%M-??#)P_m<?MLNM-8-A@u(+&,369APEG?:Nu];>S?3@r`Fd`G6qbX(
%6KSSh;co/+q*-VJj;?:I";0O^J0"GX]9+;t>GD't8%=9fM:a8[g)DR;2>9SG/<ToNjHpXQVb4k9O0hG])tA*I:U4[RpWtrk9Oul*
%V(q8sW\KX4XAF_1I/]MSKMrY\+r_*q<fR[jPa"ZDYi*\O=0C]-)NM\E1#uG+;5t4maq.DRSdS7$IBW7rjh&\2ND"6uqe5OSWK&';
%HB`(NA]jsgC#nDt`c/*9#feQ`F%tZ!T^DJ\X@k=G1ZZ&\'^2Drcl$_WTK\Y#6GnIA'05-VDW"oUA[G9lQp5@*XjaqiA]AmG"Nri=
%%U:E<4gt?BGP_[_.oHVcME,kk*E+#`]]6l'J6sl8pa&an^!-FLMa3I924:1+8U/%Ac+$J8e(+YLErqnP(10M,\ZFfBZW4h$,E4-%
%p84>JE$H6+a^#N9@G0'oOY$TB=Fi15EOR@d69Ddk(L'2@?nom[YqARJ7Qt2H5/)Kgh8EkqngFeGF,dQh$CbK$lKNE]Ho@EE7[#d_
%Y<>%Fhcts8\GsIarb/q]6FH:(c`R*6mAD=mT2#oPoXQnA=H',@_<g!@T,tB-r,jcd^lN[EMoBN)qJ7mVJ("0%0$Iq661LCrj3dX@
%2Or,/?L-GmQnn5&r3pop3i!kd34D+dh:m]9-Z@4%rYUU?pbdQO>_80&Y/!Q6dVNY5hH<h:h>4-*IJqpi@*tC69b*kQSS;AfCGe/I
%+nbeE[$Y(Ic+&(*[024od8b[V%N!/$<T;VIG%H\hUGp4$MqWspf2\C.dAq)2H9?H60!Edgd%WjOd:[VKhDC\b/T66_fu^RQ`ScfN
%c/d>,?<@.Zc=X8H=)0^aT8d]BX13+c1r&F2bH(5\0H^"$_r&dpP62a6:q1tFI<@H&1(9LNOkmFPAhrtc<+n&C?]5a*F];YIcCD%a
%3>u*r/E:J<@T->1\#BST\af1NZ;/jUhV8WWl(\.@g$E)PEpi2^keMcR9PdhHACKf!BMq@dc$FX#X%7)#CXnfD%VLF5FCnAdFm5@X
%96Y]&3h;<IG15OTQ%GgkjTW0G)]lC.lr:NTW5;;pgSo3T<R+(!$[/P?72,#e\TOrn(6HG"C2uhN!K<?7e*1P[e)bbageO3jl#Jjk
%DPtZ0+";EI/"k/?<FWl=3B+H?RZ:BZ[Rns4%0%0)pQ#Q7dm&%L=+^+/qKE)[s6K2X*C\jT9ufR<SM(J"_`pTm/<?(CXC&\R.H'1C
%Cd&pM-Ct!>gMFFRDRaQ]XI1+Mc%h43?FZ_NkKl[<3aAFBA5`^PC$>'Bg?8;g)Ilu3b:W&bk%D#q_81*j?nf"iAB`4URosVkopVK_
%&"]?B%BXIm?"4S3TnIV#VW6q-rh%7(MR"B3]X&Q)m(0T='G`QW*^(GQB&2]^^)0O[\u^;&g?RkR="s[?F?1;B<'bZMQ7<ku6cZHF
%U.n--aLcicZ&6/b>rCJC<9*r2AW5g$d:De"%Z:&J_\H[R:Y!LUN,PQ>A'J"to"j3iUD5MQh($I6kg=.G*1KCuY1fW.GdM]Z(tAst
%gIMT$AEgQ]ZiBD2-bkB-n[>Tl7NL89?nkkNN,AEd%[SsI,M;@.iS2ku?XFfXZdIe-A@Sk;^&Md.\;a,M.Z!sON-1[3qIDR41W5U7
%8nl=P3k1XWnNfgQZgtX`nEflB6YBFH,o[>arBm)5gmolm?#;L8Pc6a8N]XT+n@cg+crIPbEn_@)p_]7Wb\$R*$eNq>=3E):U(1B0
%\_-Pp$<(dnFZ:A##<"*TgSe.:REeQgVrR"\$NX]=eW?h#`i]C5\k8Q82GPtgijC";+)lIAr,fE`NjiW7hn<P&dZ*XVbLUPpe-*P?
%<j5fk(iM:=2P+C28;u:iYoF_YGN[_q.DGa=@rLBRb$BOLNFtFVK2C0f*,Hjn[[R#]Ds_#_-Q>js/F"puoh8Pm9@=3+e]mOP?nrU[
%pP7efJXq6s^1CUCb:FDm=0H!,Q8N`QhIq@!*ZPSaL6KT?_<H-K*#m&)nLV]^!8&3UF#&:4//HsK6ZTp%=F9A]elj9*8fq@!j7:@@
%7iS^:>e"Aaf1"T@-VZsK_s*Z8!8MhqAq<Qk%=PR^bf5hL)u&4(+_8]lbr2J[ZK\S/mK6u%B<gdRe\`/tF>:2^^XMl+@5]D,FEpRb
%LPMYDkRSVX6=%1*>"tk-RjoEuS=Q0-/>=&JdOnj-[Dnu`E+!*&&$"s3PGsPTZZbTeAs!6_34'!M`3*9F2$W)*#Oa4D!k`Y1Qs"H<
%G3-<8FC])_Gr-G#m0n9\l`5sJYLQ3sGkb4;^iJ^J?GF<3a3e^L@aeJ%fig7k_.7Xs7@QO=:aNUYJ_@2VDKBcn/5_Q\@#8@A,<JP_
%NJOgGFf$Qf@r(*rf$uNE\\^E4?9qd0S&)T(nCc)&A`MIieY(DnaVMj1k&7scMG9^Z49;dMo67Vk4'Rr?/]sngL5fh+4'RqDQ(5%R
%/W.0H7G/UUFqngj%^(sHMG7Y?Sg8-./]ouQdVP[QNR\kOJSM9m0=O#fSsAEkXs^Y2il:\6`!7m53_OFgiYQ3f?M,^qa/_kQ]!d`N
%fg)dr''\SZ"cM8,RG#uqF4%C/8(T;\?q8glFDXP"[Xt[D1H;]Sf660--Bkh\%al@tgJPB/W7k!KgBhXWWj\[;=,![=.mgElGu9&1
%M46pIr1b#-GLL6uBb^$5O[TrMVU99").P"8>+pYH's$s7.q:*sg3#tts,:feJ-8%XrA>QZ*tR5A>(b/]VN']bjD]?#Rage+BioVN
%%L7o`<TFAOg3%Q2'oGYjMs7N90jWq>(tE2C`O77nMeb,<G!TEb6QAju[539dK"<KHR]\nDQ^7NaF'<Ges.'q<+2DMK5(F_Y=3Z2D
%Q&%)_-5p0lN='#sD90CJ7f7G[fm#=P*W3.p1r+.!D>N<XR%BgCkFgm!41!QCIVXbTb)9^JmjDI(P.#a4X=FM5<`4M!VU&:?K<#]B
%c(Zh/D(*3S2%fls>kr5B4cMM4lR'g+K(HtqAXbl_>E1T;,hVIo;.g&GeA5L!*<rjtiqR&oYi59TBI:9L$P=mEV4FOAcI6^@rjuD7
%?+$!<qX5_#<SU'L]3G<kXoGQ)<`aDApIal<Z!76F5Ws;V^Us0reYG]?!VW#gQBL<Hc$)OKWso;[GAFoc,kg&_mq#;o/$S/O]d0n%
%)=6%dH>RK=@apsnN^1dlXd48.]'As+3$(lq>[Fu2kfrW!0"?7Y!C\T?=1htZWSXNDU;PC+d@&76**^=@/Ed5?FE]bH*FWDUWR;e+
%hd8HuCkn,>&@*<Cp5__bG2(mA&@0&^nlQ1'gCKK&\c0F7fl/or!&F'5!ANN\S*>Pi7apmHnR+7;Hn_*#-FN0n48`n86nklr1C*A=
%-YJ@KIGg'h.'?h,.#]^W1E=:k9;G%hG0M^8DaXrPA#(Ge[8#m?7H6*MCYLl9Y:@*b<-AMKCc\pY591eq6pJ:ec5efI+cDem!3h]+
%=eEQ=?buZD;c!X!Wh?q7#JBDRQQ>S$"($/db78dM!A?OmALZA&R"YPo*/,R6AI#kaZ3GWoJ<t6X0!S-j5!&a9:72VmOF=;$Cc-gO
%Oq,5o,dtNKFQ<=gGJPUaOV1p,8H7_tiqZt]$XITo+g;7YYj$]cC]XZSHCtRk)n!p<``F>)KM<J15pgd!naBj4>Jh8$&XYJ70j]P>
%9IjkA46F$rF(<61Y6]4)`qB$?(t(&5dOtCE\q]H6-;Mtfn_eB_kAHKPSQGe[bPW,A[!(m(]+F*@-Mp;'oAKat@5^6T,R%C.LFb@T
%4KRRaLAfP-Rp?8W*HC><2:))21tMY_3l$#Qg!s%+2Q^UUi3M;7FNR?GgBJ,SXrH5(5!j,]fc&P3>pX;(g:K3L:&bK)faSpZY533]
%BP%%]Y?P4BI%/7u&+.U/jFup?0m:C!G<!ShlX8*Ma4P&+G_]dFrZ"P5!01JdLE2D[iLG(H@r*V4hr,D6*+MW\N.6TUN#LDZ?tIc-
%eb(_fO<]sqP@k,Y_&l]qXnp$&lJI4e[c^dh,qRDqXc\d;[RK8Df7Wn'59'TN2Okc>Lms+af2];Tf`26Spuum2j-RUM>?WtRrPjl2
%NV>f39_T?u`BbLEC4I:Kh943uMS^64D^jASb(5<$(;!9lVD`L7]"VA7@LVX5%';J.cn<75]e$Q!0m%[X[tW2<r=OdcjPQ`coYdWA
%kV>fIj26BgX+UrY:r(E#Ze=ZN0oVRg"9knqlqQ)/GMth+la!?^?9=h0JtV#XH?1a/.dW,-2?9n'SZ?;fAQ>.81A4UtaK%@7k'ta0
%JqYemeu^;NTSK]b)"1^81k)]'/_Ds4IZn1+SM#*eqQSH2G1t_HS(hXu4)Jl5c0_mKb1^Zt2J40Y?Zg52_S^f"c)k3>Zfn2:<T^HW
%C"5tL.nQ\/7eClhgeOEpWH2:FcJ<WHJ3mmMM4I8J#qB5*PuKfFb&!86pZ$@ApguFgi?)-,T=\i"X^&,]%$hD'S*kQ1Toe^%9'kP0
%>ZeMGb&J_NnM*[V-.Y&srdMuJ6P6NF$';D5PA.X'LppuR+,rQ?AQp\BIm"hm]RA.9Vl$AEK@/]7I4JuT^3DTFJN`gOl`.$tkAAC!
%l=3=ij]StNrp(g=k6pFYnIY,YiZ`P!T+pVll*UQ?Rmu;:2j`8`(g&Lfj6CcH2%*WAq:Y+JE%nZ$Q?i;;lLj>F<=FI6hrsuU'DKpj
%=1hsIot)EJ[e7)8>Jjl$a98\gG<2-F#.5Ch)N&;"NfEM2Wt'Bd^'3U<]H<]7=fori/(`=V7+\S.FIpPtnCV[gh^f@KmFjFU:V@?7
%rl90iA=n:kJe/N=bZWn*8om))B.*GT;=7S$=5g2*qhU-5+T.IB=^1hUG`*tern$CV10gf1lB[u;ZoLJ#:+"]:7*>tDcfadu$UlT6
%FhctA46u2QfNgiU[N"SICA*&8dGjt0<%ErF,9a;Ll#1ENs4]D+ILCkgD;@'=*Sg><_&a6FHt$nJVWpiFN;a)@]+/uRP`.Zul`7p2
%2Hh)m%'=]9fJ1FkAL9LQ\=#Hje+o^I%GQ!=\=tahj,G!52g2k(MX\W&7$)V^%K<\eT'bd'%pFjm*"c7mMmoapYP?Or.GH9/?f`]B
%]>-hH^dOYd-8qIX4bUH1%5qGF8FfL[OI\h!PH>r5DTh"<lB=?:]XII[L/`s:f<3edVm@aF?+JX!ibHS)=4G-+(F*Fr-dd^e2V(cs
%B33bjp?kodQ>tMC>?W=V`]@c4('g705qLje8WOE?:AL5X/)p)EB\=.P>jX*/2N]&^2M\_u,ZqPgD@K<ZD)U&&$.M&VH>0_LVk`4P
%5FR!CphC`aKtWek9%.8=H9D,A((i=)?<;&D+YFkd>:2;mT1of%CaBs5a"=3s)eRh\bT:Zb0QVHVCn!msB<B/sUuJ%?nB9Km1-`(t
%8RV_Ar+]-S<X<DU.HJC'C"qV=[=^Ydd)S.mKhU@/nT^tjS<p&<9IrDeM<+sl_2=^)h9I(PcDu>5-oXMfF!7-$olN6?%_5CeT"FoJ
%BD?'qd=8]UmHH(uQE]8<O3cba1YOYj$BuQ+?OpA3g"H;5ojf`o]G]!ucXqr/`aqBCfWX,IGW^;i(^7\Hj`EPt#QN*[N[oRmpIVF1
%$Nu_KMt6tL<`;2`6!Xd]+j1SOUHcem\!AY]r$hLpRk==gK(b_,KT+,R9CdNq(_7F@iUptgbic1gfT(S@p-?r;7rdgk!I\qF*.19t
%2[Eo"WB:-*!BJ@?1I<:8rIjNVIX2M6;>B,H[H@eam\o]tVlj(Ba,k#GT(;5nRLs-=rODmqjRmVR=oCR5"r5G74b8s+2a',^!HG_1
%=:F-cX*`h/&kW"9n,kYD0oLp]lU`a7/;`iQQ-CU<V2e%%IauO"DSNdSd:E7AO25Z3?n$_\Mt)S!b-*A@h#+bV:%`fh_2Z^*)o9@u
%d%pQV`D^LbMrrG@s(io03rp)JVP<,8_;!qs=A)U+ETq$EMMjD]UDS"JQ!IaX&88>;))f1?p<H1&E,[^B9M[hp=kJO6Y"&9Us']8-
%]QU-6r]u>'rV>C4F?Dr4$A?EJV#DD+Aq.Aad,/-#X#61*7t5D?Hf'Kj1*;PeXpu>a)u+m3NhRY2h0UjrN15.MY1GUcEo6OW#P=q4
%:R5$tW=:-gj5#Gh/FfI5*P6m;ZsHf1b>Lp]%^YK)TBdb:B\.6IHd5MlZs@<'TSfjuSa!M\B!8*?&?Ho`Nu$&RUGp@n6Rke*VN$]i
%LhJQ:PkKR_%,h84hF<aiA@NHrK%+oLKh3q&R%&jN3jBTEg=>?4c5sN9C]EbnF>fZ8><cS=o@C64L9o@^87$],5>R#hUU-08MrB%E
%53$%:Hn&[c[Npq:'%bfNX$;=n4IcgmXlkf9E7*,+@5i92aiGO"XXD$^EU1SO^)5-bmg0QST#5L:*TNGuB8b6F`NkugJ2_LK!?Vh!
%DpAQ*L99Xfe$IM\<cM9aB7C=o08G$/>5@,j0mGi"Nu!>b\<3EYne!)GmU5V+@(njO0<-NqhAHiZLH+[Nd/)/fo`\7.qO_+i:\>es
%n`.OWo^uVi@X*2WSu_]X@H`KPHtd@M>J-O;AqqrF1#I"UDe;?s+<@6B@^NL3d&$m^&g0d[?rE@bj_W,nV6/4_.1Cn*ki?PBd/#-^
%!\^N+T4_*:\!-'mgF8)82m]LM7Sh3LJID@QK,M7k_aU=f.#7/XV'UAg)LH16c6OI:oMR9q&m(83*K3L?r/6+7pQlfnA2&L;4?#Kq
%MRi%GJami$-jgfL(-4Pu[2"hF*jr;[`Dk,5lXj$p<s-A5?L:*7Qqul:E*0%Gk/3#Y&s;Y."urqmO,&2n`tbr.BcTd&!o6!\9noeG
%@Q&Y8=Cb!62gOQbE;]B:!OEI]5Fan%c0=D+r[P+"4?XO?O`VIBlW:_e/JB3XBVcZTS[NEfoJV'G59#XeIJ@51_`8(=<fHB9X6*fq
%(q$#:#4m][X4h%aA4lJr+pl;2Gi%ZrRc][i6Q#g+O9"Bl/JK]h8PFnm'8+HWk=+ISaK/!)PFt/<F:VmNccDD$Rfd#bIli%eUq7/W
%UJi"D#^Q=O,OGs$5$r?RWM&$F_9'V9Z'q$!*A\W)GQ339_2&;)3Zr'`hVD$,KB_`AGZ[hbf"J!1L&&>3f)B3!$7p<^HntX&`kj7I
%oQWED51L!N0LOH-_&Rh^)]Xm"\.'d?S3&Y"6[%'k*!4fPh*i<abRfbH\ZPf*rot#(\(Nl\AbNa;>ofNq4XD3-qec2@rHbh1).9)+
%"d#S3Y<RGVo!\K88,DlAW6I_M6+1R458h]%c:cd$'u_o65FW1WhDDE(Ij_tZ%_^"4S^,ra'53TH;r"gJ1g`J%.4lksk[]-Zp:C6j
%"E$<'^!b9F'J7ceRiTf:mD3<W=cGjA(K8`5GC%.O(dj(\fC)nV)%[L1rP!N_-HfFs1gc3r1s^q5]5(1Q:OjgP[>V)3'/)Kg*Y$E7
%$b/Pr_``1Cp#GQ7]cT_!_s+i^;ihEC^Xc?bf]79J,?p@`_^&RB>ViJqQBdN]rfd2HE\O)m,sA&@X-[(=U:>C&bbMfTF#F%<>90ou
%>.ZN,l-X2"e1K<<]\3hJiDj^QUT'ik_tJ2,"AkFYlN[pC:^r/j[QBjOTW&_ULs;8cq/A;8]pT:&_H"kqX$aa?'6U(NNi1Zjf+<Ze
%>P^3YnsAG4VibK,PBEmFBE$n!VtDJ,7W',5GJ1Fh2a'p/0RB?M'LX0R<?hUO=u'jW@8&_L/ro%HBcqE8(oh=Fa:d[mB[S_;[HAU$
%]PF$`0I2]EjoJ'4]i+JP0-_FTk&Eag(f!ocC)XF#g!SL6^eX"CDuK!Dfu/UqVPf2^%8@+0bW,kn)luUh;4HBhaTGCd-K/)VXgNEp
%9H-#&Y!<<#3=e=02$poJ.o$mOFj\16Wf,c!7%1W#,f#\B^e+Z4eRc'bL2J:>JtW1-nH=05ECLT.I+&jhUTROB)>OfOO)8o![a"3#
%-$*aKE&p1-f/+f<U4^S#Oc,kt7saUh_5rKX@r@4PfGJK`[=f,G*h;L1BYNt\=o"B0Dn9bF`aFc/O4BO%Skb@$?<A]s"!^;&;l@jI
%"X(X+Gl`FY/OkY<dgTjmSMeh%\n7fWg+Br1'P+AojCm8s0;a9'8_t4alf+GRj[rX`cqLg0=Bqtp`8Yf;P"L&:Qj;6>kOXEWG;NI0
%&'%=F1qVsnFu5aH$;Yp&r9Uh]^4'(scCne`Uf?%?oCc_iAq6ODPKZ#l2%qjrk+$t90?DkIq4\O3F\@H7']$`$#I8s3,S;Z!*tJj:
%ZXHdJiDmcaJZ_5!:cCouX\<!UdJtj,YbOKA(lni&fJG/Ol^)>u3(lOIIa_!4n4N4arTZEmHj6?V2BP]9&A.a9<9FIDAJreNN_Vm`
%R_5b=l>NQ'*s&4c)`eZElf5g/On#/1lBQp#L;5oeK!s;X%*-'U!s>qlL5]O"l'*?H&RQGC9[-$'#5267Y)ArYQ\0H7%++EKB-[[[
%[blN*-jb5STFQbLle^K)I[31tVXnQkk:aR=HhX+[SNc6JDU1N8llSC$q:L2dFDl*kUU0\lnF_^CmQ^S`OcK96IX.PJqt]Tgs3\a)
%VsiNXhqS%hJ%`P/Isl]SDstt12^$j#I%3EJY?p^c4n#H)GE6#(E,128?Y8i3DoV;*p36#p7e3eTeaO_4d7;6%628t@^]+3=I/*JH
%qO7HQi6aLYo`9L.prS.An`quSn]QD(grHT'oJK:Uo2">_SK!sls(0=Dhi?XD-_KGNQggAt+1JT&i6/n)WZ*T4hL>@OLJOO*`S:"P
%B`@QDI\icn^%RArF80_+V-j,UiTtddqE9;@S,_r8hs]KY!W5U.Nd(DI7UK;8;CG``Su<%nh4n=AIinVN3^(bq^N=Acs0$X4[Je-Q
%rlacc]DF^;q>:)55O\NnKD*%NC]=1]rVuMM55tD%n(TYu^XR#JSj$[\4n*0/F77cI4n>4i]j(NIn,2VZpVm%(+._8WI2,3.N8?rU
%n,E6'0AjCr\T`Gl`M]G+i-%4Z7q3?aJ&Jtg?Z5th:27Q#RR-8p]RaqukpnfO\&8#[TW0)`qd2>_FsJ]SE?DgVfdljZd0it4Qj-:J
%]DXArs-KX#pL37JJ%s'2*.I]\-bjj]TG$'p^\RiCTD$!Dqg&1goV[1%m/.LpYOhJeiFcNrrq!(`N@:(Z1E:>#Zdo87+2.V94.3fC
%li1>ldBb7tp>C_okju"HJ!rTIm!eX)QO!&Yq;_J'aM2k@nG`C"\)2SFpZWKP=j1)ao$.,Ls0JmUh9h]Z[,d9DIef_o)pZ3Wo7%kT
%4($fnqV0bOh]@1a`$bS)^Fti7ab*+TYFjp[S^5TeDh#KH"TA/NVk(HaGQ6nj3dgQSACh]K2>0,lnFl0-^,J:IZe</>pX?V9Y;fBs
%I.n(4qscMt5MJ:![$,i,%l8EQpX?=W+2?*a]BpQNUV";9^!;fh?PGSfpZQrBbjY:DIcB5?]*XqqhMoFVJ(r`Dr><?.STX]#^AMSo
%-,%,Vm#uqtH=QE-Va(-opTOJY^M'jXhM"Vtm(N!@I_4:J1JOD6d>rLlT7/Ztj@t4jh8M[opX.iWO++dWGOr/te%JuBVm#i4a"WE9
%qYXKPZf'm@cGR=W?]P/mpIW(`h>>g5&))B&IWqQnpXp)WrF,0_0DTO5mFQPHft6ujo_G)"o)-*_G9.:hr0rUKHiD^md9cUqs*_3i
%I<P4sHa3H_[[2C7`8=5b_:O&.^YeqWhLbq$>M8oOUEAO00>@5Dg"r&[I/[aHX,6`<?K_=&H@+KJgjHMrIl+dFf73es=*n<355f']
%dBh;kHf*[CbOutfDSOnPqW4WIlok@sHF3G&lYNr;s6*%YpV$1IpNo,prH;]>Vs.jihS3EGIZ0?`jeqS-^&NO?rakPJ0>l-0?N9M(
%J+)m)dp%/hLL31#4.ZotHZ),h^>:r^s7>]+dqA''HbU[#q"rq-1[jWKH]JAD2f>41T%s+>F7Z.GGE.1Lrl1kl0:a&+kI:J8_g+"^
%E5QmlSA8WPKYQ@Ck!nq6j#]1@gn4Lbj,8s's**M(g!@FjkT7Lk^X<)M\&"%o^HNRnGl5b:cYbj,HkP4Z1&c'2j86e+05pdT5XrM!
%iu9p`mI.a"nbNA0IIuH[G@U8.A8lS\o[b%[c]^loR)R,'7lPAQcYhS:./<B.jsQqU5Mj&b++8Rdom]_SL*-5`hFpZKo:,dS^B[7f
%^O#G)^Mih;Ie2pgfDA>Ck2RQ@IX^na0Acpl?iKcph4$Xdr8cn-^S[nfD@W6KAiGK`p.oT*k'd+G4Qbee7JHT>r1iW'XW,U#4M(4U
%BAGMU55jrfj'0f]Dh#A6mX9S*/,eS[n$g%+p2ob(\*&3flYA_sHgAeO5DHXRHoD$&erT4q%r_Demt^)8#5<'8kLS%EDi\hMrSRP>
%f'21&qtAm!Zd7Sb[m0`Rl2PDb4l>8_OZh([pNb'aJ--[D<bP'!1;aNG0OU%WfOQ['0Oa_DQi"8LqN]Pnh%OaPn[nM/S3:KqY#-^6
%8u5.[Wc\j/pO;HEYP0Z]c!>V!Hi/$4AG:1f]\Yeq\ouf@]JS$n]l$JAh=$rm^$X[YT7?5lr,QD\^O5mjg3nBsE7+:DE)66#Sfb-.
%P^4sbHaJ2behale54hO>Q2>6^SiO-be?f)Hr3Bt1B5"%&rS$%UcX(^jHVTU\%m?90m8D:/E;t*"cgCFFn*n`GgKqS$;sGB-)uJ8L
%]l^)t(KT)tHWNF,^?XN<lauT@]g#fj4Z;a5HS9+AT6ftOVd=onp.e@FlRNu'Du34;7f+OH\@]JCfs/#7bJYY&2D3U.qEBA`46Sb2
%]WUqXV^'Z72nejr^N]P<TRWam\Ctk:[E8DL]=4X9\ZaQ<rmfHm@K5*$b'*gJX(P*(B9O8OVZ1Gf`<4rHYCcqRSe!IYbYIis^oMa/
%4ts0H*Y#4D>jW!5]/nXd+Sk<__"l[/LOm(<:EKf<qbMA>V7ZR\3&^eaJ$Ac03Z`Z3<36[K0>G1<gj=M)4nrUAPm6]K^TfW>:uA/e
%dmJ/!iUtRmnC<;fRG6E$Tp:8b(IRY7<n5R5B/MJeZ%'JNr;:TqI!E/JEcBZk%[VsoYJ4rc0@c,eL:?0'CA@D@mH*<ud[S_EqigbO
%BlNpdElmt?f1T&?f,1Bl[+2Wkg8^.I/F>$+cBmgSQh?L(Me[WMps#<,&U4!o*i[r@muFK.hPlY3Ru=m'7#pfYf@A^UW3<Be*i[C#
%kL$>TD`1e3>C@*#SQ*(nrA><[QSbr1?KeH;0LEG?*t]1PrMO+503T-\=&t3,;7R=+o;c*$qs.Bfb)+t@3I*J\QV3V"GOk,dBhf]j
%X]tV/p7bX]=4]*jdJ]\;-2tQV<pfORg.>UGW@tXmVk7n26o9iD\Z6/(M/h:F(Z,Zcf5Cn#hW^eZ05pNcH?gG?Se'VqagQU=cW)IN
%n`InbIs`qt'#e45#-8[ZR!rV:pcNJ,Vao=_`gcWsB#!2(2d_bm4a,bY2E'eaSAbpr\%D:`DGA8pH['Th?uHQqfds=C]CG^mCU[92
%f'`LtfP>]>2"`/?YqdU=H*jrI9_W@/-YkN9j2pJZQZVfSpsA6?ft4Z>dFm^/Ljct*)gupPH9HS_0i=cU`a1:JYJtZqDK`*bmCaOp
%W:&0T%_!7$a6rYqmI@.D76Eb6q/SC-H?ueL^?7]RO+0<As*8)Ke[ruBjM54(`9Y+cK8EB.0:+#g(Lo<_1q.Q_3DnViR=)\)YV>n;
%rA$oOo(q^akLK'@jo!Zil^OGH/(_2Z=*q8@eQ4]]HcadYb1t';frEo.otKj,;hl1PfB$YW46L1_pYi29F851!]R@)6>lN0`G<4PA
%If<n>=hDG9?Fl/7VK\s$?;+_`*":7LQ."t!<@Q,FA7b`-DR"5p5IXX@q=aflC0+a!<Ynh0V<ZA"Bt8QgH$OgMUhB77B%d^dcYS&X
%<h;;j\9Kse]D^i7G&64rR=0L*^,`g?Ed'V>Cp\\$/fo2JEsqrM1!JEJpVHFUf>7HUq']CGbZ@kacKF)Vc:lMj%+J&gL,P>E(Wu^T
%?PYOa*)m]f,]bo&rV,mUioJLF_8Z),e"+J,XeX"7^6K5<9,$c<\!BR]9o+(dh:;AWc+D]J-]+1O[IrDI5j`[Z_jBJ6nSDudnnbnC
%]Wl`/QbQ4T4aT>*:JP8`c-1spg[U3RY:mm[<`_o:ZXYN9h+4\rG^_lanoa*-G?(7&]i\Qbp$mM(e(sHJg9[@1q_^<ZomCU&l0G3T
%erBu0s-p`be`b7.ou4YuE[.dE>eJou>TYukfj(-gH*b9"]@)2Bna-(l_%!mDC4'N6Zu9O9jR.8BF5UHl`THfJV:!Q^lVhSg2]H8i
%>Oh-7fNLJ0>i%O0RJF/E5J=46R-jIdn`KOlfDU*ok'1q/XdS)BnoeTKDsZl5q=;A6_9Xe%]B[](rk"^3d_1.=GBWn5oX+>WrPm4J
%ebb8mrn7TsHoph+8Y,3s38E>^r7F5RnEaY]qs=:%O8IOm43r(B4Z(C.f^$r`S^"S8g<S5<h<sPko3uq*g&'gc1HVi:WO02ro4amo
%fM;`j:Bs,Yl\55^PtQ,rH2#54_;<@hrJu</VREr-hG:8Vn(fXuY3h:`=^Bk@3o!op^DY[RF5UB^D:($BlaPlk_:?uNhOtfJq/Wug
%&D\=4CjkM3dYgtMZo[`+qP[^<HZQ:N^E+AuCqmYJ5!PW:-VCCmPEkg4:FG>7=3jXlg?$uOlH$rqC&Rtlk"L9k+$3]]*;si"q76dH
%oSZj8=ST3$EU_u2ouY(hH.#VU4Q!0)mJ6.9lb3/ibaPTI],*sRcei&&?;-?^?X2s?fu;.k^81LDVH8/X4;`o%Y(gcWmV6`JD-rk%
%:QAf*B][5+lM@F)f2mUN(29/>mdjueFaIQcq9:]q3kC_/m;1U+)R+:lrS>N9s#8V-hdn$m@F_uk\uH_]g8kK+?'eWPk``0U99*Bd
%.4)^K_ifas4;:=hN#Y1V(.*bu7B]5</AODtY>p)lJ&<[2B[bW]^s*oS$&GH-[b*LP-NY#pL[W8!>.6k#PYIuIBKp,d]t;F]hO<&_
%"o2,9pAS>'O_c*BFM2mBg4H-_7^kl8TX$JL?S]dOi7\-W<*qf"3Bm:WF'[[YKmN]h/`O/7+d1f>!Z0Q.n??o5e_*aaGC,[3%32c5
%=(8M_2@G:g\6k6(Bb\eo2Rdc8)`N,qfAC>b'B%6Ul%W9;_Z[JdF%GpjD>h>s/g#-)VJTu10Q&!"Dk.pI4!jQZ;kdNk[\L";e"a&W
%kKlZ9N9BiB?2m)O]'R#a"-muq?$9X8qt[jG:RNa#h;UqsXF\C5!bP)2S%%0-rV*GoY0c]gY3rp)M'I+J?$=VP__4+]hs&6(0s\,Y
%s'8]dOG:>[i2hQ(>!GajF`_TPFiNcdYH,D#^\\PYF_Qp%B*UV>q\BJ_BYk.D<=X^rFQQ('it3<fe#]a5)\Y9EmCL%p^V'F;AZ5b8
%Vc5rF+5EAlIk*R]Y_@#0&Ui-$,B(j\h`Tsj9Nr1n>D?MH];IBSNs>K)o8O!'@VO<A]p#4FJubq^duBj'Mu8MU6:DeJT-K=5:IUP^
%CEG]hG1:!*DX-J5j"fB$\^RN/?X6tYSDILV**%hZr0,gb(rZ^sM19&dB]7.HE7ojOY$M_!VI#p=/uLg7&:kXi$p;lXH$1-*>roUA
%DOLg^\UM:h]OCO!o'QsI;]90YRr8^h_Ht2_$6:ie/;(VO)bobfc<SW_haT6lrd,3,*T+Ijg,Qd\fY?3'X$>[jqGsim\!CB8pu$1k
%IdkGR#Wj#[NPZX>Nd0RlVSWoe(oKVZD8!+*D8Y=5ZUDIE;uV2fF.Tuj+6IVfYKVK&Ik(j]`u+&cmespATDP@eU5-eZVhpLT=GU)E
%&6[B(Ha`NsA\)`k9`Eg+NmRpf.*MKh&,LGW!^Z].(jBB#htMN_#GS2dNY)0W-/%)94@InSjP&")q_4f=guj#%j`e`/rt&lq*"p.P
%4$LjcYWm;1^Alb:@Of#U8bo:NE&k<l<XXoOn%+fGm*^+5Y2t;*X8T`Dg>7=>DJjq28IZj%iIs1\LmF<Tcc3EKT\mRq6L0?K"-Omt
%)9mBP@f%N>*U*MBDeU9,8f9ujGNk1U`UpXr'QgjnM?MZW2WP*L9E(S8p"c.7M2#1<*p`*dAtI1G155=HJd(eIQ(AM=j4b6\@s`-L
%(0/]'nFY5Tgr8OAalTkJfk3[#]p5q;dd9]63Bq"[N)"689ePa5UU?/rb>U@o#Bk8[0"Z"pont60Xa[7@$q2hI`cauW;r^6s[o9b/
%EeK18)QQ$58R!e'9qTY5eY^@Zd<anj@e-0q.eTC?N)_re7g%K1D"jlV5Bg3-Z88W?%hFpYY%kH-L%W(,_+F7XI^Z7`DGPb]pMSG6
%e`1=_^MRmBD/sI%einI4DcB>5SO^r6)r6o#5G-c")SI_.$s&.pmq;O[%Zb<@`n0Qi3h4a\SS\bln(Z7Ml-m8eWI6E,)#;rc4V5$)
%;rb'-[s^b'l.aAKamKoBeajOTj(HiYm`WfEqXBD95DcjrL\EW!ntg9o@-/S<l`6Q@:LiGHDUgO&rHdZ`*64PTQ)"5-afWMuVdfr:
%Hft1iCiJOHG3XhudE%om3ICRIoPAaAE4Xp)Wd"5MnDer-[bgTj$g=3$><G?iJJm4rR4;PboNhr$/<>eCMiSNa"Xj#BaLXL40&CIX
%k%sLKh,_q^kZMJ-O#C,l:\5),*DP/Ql@iT_]3=r.ARYMUp<6>G_tRDApg@E%g<.t6i:tm^LJbV^@YaiO]^2LA9q$VLfTm%[gT4Z^
%<KknprFS##kgj/o&j%b4X!;uO4gWH=hqqfYK-,9I(N)RW7/P:H2#h')EcsSC2825[jP*ajAj6+Kj?'n;'`9j-S=H)eP1<V]';;2g
%M=Ijg0<]SF2mXB#Ik/uf3XiEb?Hf:Ne!PaNRs9Qd8"*lVZg$a&7Q4cc[!?T(*0`C^?O!RO,>2BVp@`f>:7M4,[IO(XVoeMLl+pYN
%p#X#1Gsa'C5hYS<HU/_o^7T]Jq:0nJ,u;/WC>D$ko]GG8S,%0ThHa-Bf4PR2V:=s?s5;srZ#.6Kka@0nq'60RVY/]_fr:I1dnN!:
%]`!_3ai.mOL3@NDBQ3etfkn`@ETqbuVl90UMlttf)P">+S#t8\FL2mGdXTM1B>1-4Z[Xhi[W2&S]Wl^*hho[Uh9;QVh>OfAcN$<P
%OT&EE.lX6gr_7DigXgN&?TBu^hTtOYirdi,S"$,8BQ[c8Ru,0VL5stmq9u'GRN!@J4GtGr<2qQuZ$V$0pg&%.?S@_f/%a9RZ^'Q>
%(Q#!e_qE2k`B34XD>%CU\o&k')kEJ1g;NmQq2H1(9p;5YBHBYoe[b;>,8t?7S-)K[j3d7pf(h554.s?CmcL[EmjH68R"!kEPHfhr
%X5h@Um?qD63W*;cp:j^sDlda@BXHrScLdTT&D?X4`8^[5FOZM8`7#G!g0GYb]DH\p;-s:8=<0DkkaV5c*;@aJo#C7Najen]_VXX<
%>C0#\N"8B6+#Aj\cO=*mQEr_doIXqXI55k_rj=*oJIbA$ca2l-&%sj[PnUjm2tcKfI(Qf"H")K@g:fQf.$^.UX^Ar)fAPk,K25Db
%[V)F7qmmpX=3*X&osieh>IY=&bg(\&Is/sB+U3=>6q8caDu)=;!AlbhgcW-n#O#?^]:'Vk31(gVY&2W"J,=8*El'7(22!6GXW:kj
%cd63t]!O:Y4?G_?p[bT$RZi:qhgT'\WdD=k(mV=4*uYC7\lWMHH>75F`3.B=^Cg@TRq:.Am,a2mJ%8bqF-YGnrgG*)(DG3Drobje
%e5pp\_;Lt8IcQtR%0)h%LTL!3r(jY*PABr9Jj7RNVuSaC]./jPce<WRqF5p[Im&E2j5A9t%nJPsCDs<]2`gNI@)-4n;q^djZS0>.
%$)Y&OF5fc!2:PLV:Bi?BCW<`3TFJ]V\@9I3gda/d0^3bUnip'KU!**Q6M[B2r5oCme\J&#N7iJE?Cm+XAOop9P\.glk?$-b_8urV
%pU`AZBd[S]VTnTP!FLi3Gp/-H,"<o(?&a>S=4trANCb6LTs15Sm0N0sD=NhP^Tr"X;&fNDPh)-_^4S>j\<a7t5qgKI)ckE"?P@mj
%I"G7T9Jfe0`[gHGg2pk>Qjerf9e4K810X&)<H1'b`jbk]e#;Nf1_*oRD@0T0fcXU=$tPUW*1='JMQ7U6nY@((1X!;hI_Q]T\OenS
%1lQR=!-"?K51tr8o&?r2qI@IbHP2DuSrLOlHt/]1?fAct(1_3gAug#Im/2bK(L^4U/AF2/=X&E<l+6-Y-uWoR?-Z1OEDFEqFjGI[
%[)@A>-aDI1FcXjt]%\'h)N.Xg2&$f)]Qu?gs2mu8/!]AL9EMcgfFCgBb/lrOK>oeHZ6?Y%p"?BU0Ds2a4d]1=`:Tt&nsdi%9',PS
%nfqH>Drr!_[N0^%"/V8?%5[ia<6se%gmTW"'>9delKt(1)16jT3</!_`)tKle+NQDfkc/j)6GMd4F>bW`n@VLbr952EG1q^ch9<p
%+DE)??^oW8;r5Ibr^lcr@-11]]:CuBGdBH5\)g_hGYB#CRdYN9E,:$re3:<3bp#YDWr=:g2%A"[<Mq#u0@$W:@o.^%8cH?cRJC[r
%?9lKCKWM.C%kl3mqgEtr)PlEI^s[&,s)=rg-eJUNhL7fEqd)u-Hh/&<^$jMDBUDKH)fE`ThlCu9:c89X\hn8MM+[X=RJJ0(C9Eo&
%+!a\8LFKtAmgidt=&)M'D?K:@QeP4j8^<B_i]KF240fdGIC&f5S-)Y7TFl:o3HA&(SZcrhe-OK:Vp?ij+"F'qRcVktrSF[%p93&f
%AukHK3B0%nGrVY-8=Ve,`P>-sOgjqckdRrCean*6/c9qF'A<!SrRIjT[!teDCfkjC?XqKaZ-UnlbH4BYS5^7B,]NdD(u+`Ur3X21
%Nl9<,mBcGXm$)1%54"T!Z)-FGLQ(@C5?k`SE(!oQY&as3h0!FKnC?+Hf<gkRbD*0rGL,LfS3G-[CD=dTQ1Fe,i>7[B-Z8"pk-K`=
%3^31VjMOCC]f[LpYNOR<nETZ>T$bbS4>+L(&K]h9^7",W@C'Z(qI:%qCFpJgV+`[>*ITJM,M:]*SUhT`1RIj.ATr1R)P&s::g9Gr
%>FhMSo%h:N@!'43XM%rt@`%.I]Gd'lKlVG1Wj5I'^Eje$)_Q&.2E,:B5+`5nc>:1b:YGd'h;%micW@H$964aurP`Gik%b.L;%6hP
%FR&Pq:3o#IC!&ThI=8KZNc($=alB@pbpM?&G917]m2EInK.!'&1-]#L]G^MBm:2ZU$'$_s!`B14#Di[]-IqA7Vpf>Qj-2$:#qNp8
%LW50d)!aX-j`"R*^\MA%r8A*[1oRpQ(ri'"RDAoFgpj\FY<PbM:2R\W]CR:-Z*a&/3\ma*8n*6b#Yd2_2l2XgNGnV@3Og/VcD^:m
%s2aeOE.O`C'$jU6bi#F=cX+rk^K\Cp?X_]E,IolY\p_%nI^:d(ETXU<^;F;bnm-P?m<*N@S'78(5ZDlRPJ>F2e%qH)[JgK"+84on
%rR"/qXnPe-HU_<tCqB%\qfCf(WFr*^YD?/U2QD\ECTsh"*RF2H9T<qNOM5'b)8JV6rgWuK0,QM%2g$pHglhk=haWg[RJi-%JMtt!
%+\AM"]mO'kYKjhN3j((eD$ZM`L.@<-1TAE>nRA9Vjne>A(HoC;QfY`"eA_<"l-80@5Bt?,GM"S?I.jiY%)`/NeiEYNI;FYZD=,&@
%R=EW?phfe@HrX_3?#*]U]SEl%r?mkoPEYsN\pLkXW2G!9F`G,9j>:bSPOZhVXaH=Wmeu<,9p4c;aKlJ7+^63>n&0n(R@"aPo6a`^
%UL-qPcsSc6ZipEJi5$9@chP``aSY9]"@?QEdI6j<A6-l(UGGPAA(0$iYq`k/6tN<HC2@O(Q$OC`C>FZ@O/QW4GA>nqq_0qke4(c-
%LQ-CgdsEmCLJR2Wkq&*3G5'QhTdAb*.2<(R9@'"!>^S?9c)r#Wb.O:G]WQ(-L0,Kfp8%SUBHqdt**U*$]!_",a2_u$%8,1#q!bV*
%Q3C=7\%lpG,0>4KoLnRY/S*>6"WLN8.\8f2;@/n`X]O[aj-/)>90hi[bg!dbfRKN_Y;@o(doe^mRBh%ap0@E8=jK:t5QB*=M)u`)
%>7m>@\!aML@l$+ucYSh_nck=JpX@oao$[7(E`4&J1+th!pQqd2<[Qkq>AK?#MS4BAdM=4+MrJuO0$Vqoo5q%qLSqSHhOZT@W:94S
%npO2\]qFD/ndM]?Ns_ZUhO!'toh"2f"VTIl2p6VeY'XbGjgJQ+8TdN2+6LS\k<YR2(`@`BeNZe%XA@W1&%ro(8kqUb\?7G9*hUbS
%I+5HYB__:+lT6W#I[L%8?GGC-%l0YXMe3G/-H1**bMd`TX00*AT,K/^,U]b#>l$_;<8T(ZH3E(8iJ\7$@n!:$no$Q\,Ve*I:5r&>
%DpTqXjikp2,MgJ.YBt2,bC53*F2Xs@RCf&EB5,,QPOclYr+u2Re\nA+]J-e?hQ;Nm8Ad:R!7/j\GlPtT!tlNI*qSsA^7)0gG>;a#
%YJs9(:o;['aiRiPJ@K3Np<Z8Vad8LR[iL2hX%Vm`R[CeDCie6TbBCR3Z$KZH+n=RedmP_#?C[ABq4.\6LfUN;BCB06*G2jc]WOKD
%Fm,U`Y.Xb.Z<4i2+8@lY5'q8G4\$:;hbXY%49-ROpD*$RnXbSim8mMenoJZ\]!Sf;B)Aa^7)!Y=^*#brIMq41h8M`dCF$9)P/snO
%5C>JuOXYHirOs;T/hFY`#u.1$4W<4+?="Qffcn.Tq?!sdLbB!'Wp*^Y[Yj:Y3i-Je:+"i'T&5:NnlPYL0o\'F?ef@;\Yf.W0p6%T
%JjO26?^0BNkUd':cd$U'_X,#,_pi$m#=fb>Li52,g0?>LF;4SCiuWQ..@SqXjXp4g<6u-`<;#I5]^N)fR@s)X+$Pt7Qds'?Z(uG&
%U9>SPVbUr1Y+d8pGOt$>Q20Un(LoH+]t(Vil9T^rS(EN*VURiA4K(H.2`A8!)OE:QrV6;+jn6jOan5E"i(L$:]eHXL(\mCo!6oPZ
%\*Shb._'E_E2!b1C7qap6n-p)rCHf(gM&HGCCI=J>AKL>gBtE@SSg^0r,=gN4hG\s?,*mi7HSt[EdG+i\`m3Q<jUL93)O#Hh3f-=
%p<%`-b&<m-0Q%4#[CDW3+g^##NAm-Se_Bi./#L@Q?<09kB?NGr;rdJ7;U[=8+(*Ah4me%1%TdY]#$Uc`ZR-H3HsM2B3RT_RYr[22
%>rZ*$X"O,=c*A_.HM$QM#V>d*NBcY+PU#CK0q/)$a]7df=7!oOhT#;=cJQq@/aU0A]'Y"ESF.?(6i:Wo3e&"2]VNaueJhQHgPo#'
%QXF)4eW\WJ+!8)oG\/;;%a6bNZAaWOr%#Ij"3\7bRO2kV%5T_MT3"$BJL7^%Z0R0Hj)`g*GD@-g`6lK?K8ia=2m>>K*u5f:Dr8=C
%X<+S$9fGb7^<,]srVP9o485YC'nED5beXA/N;4rdFcpaqB4n-:]=m_+Iq3en:pntX^>(qeLb4<5GNHe[jnP+``H$4K(cpJ&YK+9L
%Su99fcEkgCJFnpt]?rlNE^'/m7Ou7+/h#:9oB0tR(pB^hE]!dl3bQlPnt#1hLPNQ(E&M`%@`-VNNZG^t3@eI-Xpd.I;((_.)\chF
%)%ouJ&'?Cqo6V%)h>n:Qk6)MY9Pa%kbe^od%qBt@='qsP1LFg`ajo(gmb?2b;KmlQ("V:^Il<cH+27Lh@\YjYZ)R=a@j%oRDX;-#
%_">[rbPhBPp2XSYYgr713I`]QrKltcL>TP*Bt^X'F!P_54*3eoo6.os?.sWoVs:4ADM)rVZC7kiJVgZ1dIW47<Sl5fh5])jBO+l!
%ihWmje6:sUlB&0eH=a^9<Bfh$L0?H:_<UokWuMHRb-ljUUNbkYrqT\aDecf]$U_[Q`3AEE8[DH]g2c'u;ql)?4WG)6[#pE4T)E6!
%I/3'\.LCYf&r5IVFn+.)PabtBr6t)d_TMcq1\u99T2p"9*s#ZI4.k\$E.N-_7OO:lqItVD_n!1Dd2+n%(!..;T*Aqo#89.HK0saH
%2BY90*))Mt5.9-crA*&rq=$."ftO/jc"e^0]07j&Am'N%\9PF=[DMB@DVI?`CejY_#AWM8%@\%Qm,bk%77$W)?6B"$53-juo'Mkf
%3p+%f'-`;^`himef6`ie<j/.;)gumT?GF0(*F.E5Dn=@*9ad<N?)VG*:X52OJ@E8eYG:4VqVBhIrM\M?ga[Y\(dIdj:XR2FOkB6-
%1l'3(=+]`CHhB9m%6I7d>d(=Q+g*S%Z*>$:^+_;YNbp8pg5SG&_#")mMT'W.0e,-Zs$U,I<clGCm]m/u2sQ8$XR6&Fs3nHlGArQL
%%1!iR?1OT7m+N3-g0CT)*Yps/q\"=O0/g.a=IAJ'']gq,^Y\r/s1O$D]TI8td$RUcjEVX?5@$VH\j:mRkG3u4LNa9$Let,Gm=4W/
%7Jc<XrSPB%7+AX"ojK653rD5=nI;TVM02B-WOnBiF@f(T].OAjF[DW<QNPhHi$<:gP=WmT7OK4lq+cr3ii*gB[s'_k9"TAXGBm*4
%Qhgit7Rq_%FRT'>FEE!#o!!RbPHR^7dac4r^PK<.Rl\YPVa%F:oE-/NN/jq#LM9Jb.p"Zr7lPA[%aXQ]7n6!]SZ"rAKM5(;YE&,%
%k&&74^,[Q*MP$#IHCNI7FQ)d!R:4_8pQ-3Zm\be1QOua!UeTWY(%[-$a?PJ_q30]mT3>+a6ehBGXhT?3q&-/Dk18<'-#!=,QK8-J
%M:Nt6m10fY]5Pp*m#TI'XA/ZS/k+Yf6//rOWadX$H$/Rfn)CdncUC#HF_j^-LfB^7kk;_uVP?aeC[3.O4G;?`m&*k,J(apnIfI1,
%YDAO3N4&0h^O"m@O2J/?cq;kkq8BPlE\*#b<ghT5E`&VVs(>e4VG$DK@Nt,i,fe]]3\-Z;1U&\^KkV1G)W87JQKt=Kpn&b%J_e:b
%UNYl8]6e"2:ZC'2@s4pS8n/8;;^H4C\=m1t+pY73TYujaM7?K]6ZN_)TnOQeQWY+]b=FLj&jNY(-e@sW,rJUnS:-d#rjg7R2BD.9
%1REl5'c\:oVP,\qKht=\p;4J=n1;g(`,EH+b>qaCj?'Jtp\_eBAf+#M8X1Q"lH#qmdN9sEMA0J765,9L@YOiu+$,Dp7t6n66]=Y)
%XGEUA'iBjA#'!MgV2U4'dZGf%!H=i,Yu,dcXT3MiG\ZOJcWhh<_"gb)Q[-8CXqXJ'YZ1/Io6P,7P"9+2@Jbo5s/fb11*n)KnqZa]
%7lQ[:^YF];bchchVjlA+84Y>`VO;jDi$+f93p?YDa073k(QB/Z\5DdQI6Fj=^WO8a<0BgCSaG&#0<7]#etSR^A`+s8eWt\&>>icE
%iE!fCrq44Er\FL'8^l'jreTpa`$I!l:H#I27@_Dt(@`mW(\q%]8I+`LL4*daXs;IgC49W!:[IBh_S0Pc,$h".-i+GN(C"nWgnI!4
%P1<16W/iC;aJcC>3e75br(BF(7lp>Ws*E[3s(qZ\A4\1"IPq/ZClK:/s*sfns,ZF0lgK/3SbWq@+sLMV>fDRG$%HP."?6p6m$uSl
%5nGcq5Lq)E.NpX*Clr;lD]W^e:(a8%(VqjVWPmFAJjFWS'#7%NF`a,Zk"5rba;jPs5A+r*"*:ZoPp2F%64^=O.:k*IPUo8qF4Yog
%1nc3`n4Es<L]^)W9,QYWMAU@Dp+L/qA5[GK(Kq_S;C9EYMI<YlU/U)c<3>`?&iR$P-^b(1:E(T+'1]':!L@U2)&3rq$#`ZRlTD1f
%YS=,Cr-8Aap7TucCEC&eqG`;P)CI")_:-lpK7j&Z2ck5!,4pG^JfC^XaG>WlU6;a;9GILM%F\M&Up95DofQA!"6J?7s8G5kXXPRg
%CR;=5g0;T#A.lI=SRB-];uuArT3RnNXE:TND:=2G.$:Nl)H2jN3!<PZ'3Q>Hg1VF6C8CgT$,dnkY?.<u>K=Ja,7+j>2\P*G2Osi\
%DJXs1FI],EGVG8<2DN!8+XSBG8uEUi)Mk:a)ooF9q\:4MB)tjB!O!+-,6(.7P7u!$76$;%K?+''a\niHP)"8sek'fA:_nLf9;`ZN
%TG'R)%B-#-B=2saNO0$pH>,UC%p>&`NWGX]dF5@p:6JLc?!)16M!6[JZ-5P/=?2(0TgPg>`4p:7X@=<CB1]KCr9AjZWF&,r8kEK;
%$B!-/hhqsXBTLu80)Vf,/LDnKr+j5%%'^-!4U0W+[!&$O@R>]$.e_UhN<3-j_G71#':=Ls!XI?jW=qi,g*$6K*+</^2iLW8gcFM'
%-N$sYY98R^Ri!f27%H^GXe:%V#8WL?U*#6`i92sA_^^K".-@fn,'$4pe"rXEP9crkfVP,MK,,Rk9qN_<pn\!37^q#V;mNY:i7@.(
%oOX#sUS:.9RID:d+#XZIrJ]2kR#4.N-"eKZ4e23]ZsPqGFqa`Y6R"7R,`X.&l0Qk*6u-92%TeYqCEe;]GV0Q\!2_?@]h;Pm_AKia
%')c*XnJA`'+<T?+Z-YcF<%;&mD$]Y:56V5O!?$nU25Y3saIq@G@!f.2-JfPsY\HH`14U8eQ]s1-8'I8b-^\#!(JsVPM25)Oe:jN1
%lS'-GLVX0D)tkWc*39$3ruu56K&^W'`hL5,N??06,Tb:tNs(+cq9Zrkds!=og@SenfPVQp4$iUU-h/gHKTr3^k![WhbKsK.&VVAH
%[5,S2Cg9SCXKoh0fZG2$Ua=@j3.WlGk_.Su!Cf%<b]5#N?jRm`28HUHE8!ZQq\M\q0Mq)*%N\QK+VZ)5$:b9R"LA[QKT5X!8rjR$
%9.[CK+"gblf-BL;2P.(K,fgD4h@_ln3A=aSe12R$/n-7tMT"H\0VW-\Bp]5`"BX"Y368nC+uno)&jkS+[eZ'>9^7bfoiD3VUlZkB
%C'@X11)-G(GcOF=9Lgre9'VRkW"*$adpVF3NX6CCC'\j$$DOrMaO+"!nk]DHe4LKnkbr3)PEInFM-'hhKS*MsGcTb<9<s[:(ktkR
%(a;LBgjhe\3:Uh)&;qo49OsN2*e8KKh!/!^Y+__2-+;^Ja_$Mb_SB--%J%l+GQNPY#.W4kG2*2;R$Rhl;Dhj%%[WIS.*d)*:JuN*
%@(a?ReYKC1k2XEQ+raEi0S'X+`t^?8NiOLEV@6=<*_$qlnO1\=Ln]`sgBP#cKP',^7-@TTPolpKPTH7<8XkAs$/B4BMlfL58[7;u
%@KLd?,Lp_.!gg3lK>U:($F1qc8Dern$k\,H1a+1%C3XI8+qU,$^SHk*"fHCF"5[#*6l!g%\Yca'Gi/Ub18\D1_ar2lBl"h$%[(K]
%-Vk@]"NI^c@F^AlD-5b0P5kn),Vu^dk\n6BF:"'0.*:mF8Q$"34"b4B,X+"/PS.^dDe0-U'u=uXa-$'+=)sjR!9ZE=?T+/^@S?P.
%%hmH7@%j5Vfh)50G#Dd,Lj[P[5@=FBmA*@B^Z"Du>sACY(Eg9rkF%jZRhSo2%-rqLo0I2hK5%#ei=D>^O0'DH2=j$6/%R,"+Hd_=
%-u"6pAES6HFI"OtR0OB]'IE)4Og.<G#ZZCh<t_;8nqE2.(RQk\dtD>c),/bb6'u[67`Up='N9OY/$4K@PYcWZ_%^Tj\FajH<^]qc
%qo')6TrFpm*]3.RaTSf%_NdJd)V!b!-0\#1DnU4O8^8QK=L'8Hg9iP!fkTD$ldoK&q-Tj5O$'flO^FDq2\B"SYE@t&`6Fith34W7
%!SK$gfK/?1AQ8@dd9QXKUc-XVJ4L:S,42LM\^h`D&S*@h#?5FWDr3VA3u&I'`NakC&gc3"7Ja7rHNKrZ6m.X-@/-LVnJ_!d)q0c3
%H6BfOJncP>Vogt0DXF,=O9)I#S.)_K;R]4/Xn#"W80m2D'^7j%6>@d2QR#-=LJ_8:$/MY<<%JDSKD/&c93=:Be\d7IKJ.mM":5ZP
%]mV!q'W9N,CSHV1`[:nPjrbMcOlSVYYg'IqRE8[Ulg'L5d"XGPgBLG*!g@>lD-eM/A!o=4BZs9cXsO#W5o#732O56#l&9]0U]RCi
%UP.P]LXsCHC`HL.1lE&pe2gI2J<64#Z7[kkq'@pA`9=GG`g00!dCI7*NbQC&fdESYGTXc#kN<*')-Rg?4G65f=%!">%OujAlGR;`
%DOO*Z[A'lZT<k&p=A9_&Cg\DtI4,^0>,\p&fSh!L*GT4VThRH_Q^4=QZSkF#,r\-NW.<JI@[it1+uc'&k#hh.^g`i"Ut39K7s4Af
%mkM>=?k\I#J&onoTR[3-(/BZo@r#O];%78gld@C,=rM4tm(ZF)Xi?hi=S4BmMOVG!dIqf8k&GMpq4]+afnP]E=^%&[D1L*W42JWm
%iajn=D@#Yu_26VJDX.,(-a-sW#.HDr(Af@5W$mZ[+mfcPeK5ZZ2(U!U2Z<h7R.r>>"bTPqZ#^jfP9rU7-.A;-bU3GF11L3U-%TSN
%jkTT/i/\j@g(.XC&X\o:Q,PiQ>1Xj0WHnIArq2FQK_<5j*B>.K]".-FllF<!:Aj+HAfXT70`($;$aM*3Td5A@!3&"'iXL@?@e_H]
%TRj5\3Z3+&BGL5A2DH\E\$D"$YUiVs[RB\[kGPEa5.KFd6qUKMOo8kgXhmA&E3b?2lOQ)0ZMp)r3hJJ^66q+=)'^d-r8;a^cp9Uh
%1V\1H*=;SZD[N`^)[rSh(6q!n`piX)klYr?aT5)>[M6UZauc!+kee#JdrF`kIcGn/`ZO9o`$lS2N;2ms.gT3;P.t\J,p-OI1I6M0
%m,fu%j&q+g>'gr;fK1gI7mVe.kZ[kt+5HHr)Ms-G./EkM_Km*abQ62FA8`>]WB,UW'(]Fkj9$&:PI3aXN.BHNLst"@?a78hXohf"
%FNWFtOG"@:q/m\3'H@c*pR$!BoG9h0*UN)GI+,U$o;/p5b=!D>ks`N3Pk!T3($XKq9_slo]$2<7Q=Ro]P]gD(Z-I6%D4.Hb,',BS
%7Y2lugfO\ZNgZLS&mK8$=P7NH9jL!K\m#4HIcq1OO.r*Z??"UL@a3&:JV`AuLPUb<GSS$qbtck;YR&PAXH-Q^Y.o)^,6"3AbP/4t
%;RMr>b(rJVf=GLH3sqtf.5nQ>0!#L:!?D&<!4V\#\4bt8V;c_XXWV8t0RH5\+7c"6i,nZN@U5.A(?mP#Rm!adXpqn?mmj"`%UNo`
%PG$3UaQFCp$ts&h'bprs&`=L:,tV>e9(F`,"ID3OBWT/\lP7&<hAuA7L^b"T3#A74j#qYG8EeU2M8/8gJY,bX0FR-1+<''bq12m2
%00a7c!bF2Z%-hMZ5bqT\^;%("5:Seqe7#,1*\'4q$7\goec^1AFqC6UPN]6SFHA%Q"V%YA&l]#GV/\C.Q(>CanBTIK]\s3aFP=<?
%]Ee2#R(J1!O"d(Ggi!<g_A;)VL*0h[00a$7Xm>^#MtJ<$#?S*-5'j26hqsMEIoLUj\a>,a<Ed`><NoP_,_:4KC^@sn@!AV,R$8hU
%Y#3'_MN,(T7<+8@FWb69["X<8LY*9S6AUq"$)(qO#PT4hi?V!Dfbl0"OTY^D8MISNj>!<J(oXj_!,o$WRh(f6"YDbMcJ%ph%8#PL
%`TQ\'.3fK!1atD5-fWV_'p4;?'ZN4#_IX]t7i]W1At;aghL=Sn3(==3p)H.05,O^_OKDpQ,[%`)K]cimgbjHd"=>!SVe;lL-BHFE
%rdmrQBcs^_0dql$XsCW[NBkDc>k]F6GF)(3hcgE35r<Io"N:oh<hA5CB[cS5Xue:9ricc!,a*=5@Z+7'V^A>^$:2lrW)k)US+5^h
%CI'J6_SBdMXl;`/:b"I""SO&UE9Ig`"!mEKFO2E=Qm>!9V''4[hVAl250*a/Gn+5#ZkRUG=BC:$#Wb#`JD_!F@>Y>^jIm1^^d];%
%B-eNUP9aN]_U$7.%Zu:r5t!%)3sYm\bjL'f;bQ;B1b+Fe\PjjZR"cbX=T<XVb]\Ae!jUk*nXBYL#8(b5TH3,AY<ZJ@HhpR3#\R$0
%k6oR)dK_MGd,k<@.S`)s)OpL,$,ebh%$TX8*:&$'cLBEmqrfsens;$ZJV[6!de<lFGkW58-a_>`&$Da:mm8;(<Q92:9LS6`,?X;Z
%"YAf4'20W]LRj#0:YUiNJ\<C*HFkjn(fILrpb6-Be!chm+<,K^k$ToGN/tKkJKb!/cm+B<#V3R2%@V.1mK_d)IR:/^34';aR2ic5
%')3[lbr_&%i08qX!g1A<Qm<X]K&WYH<tQ5pR"h;lgC[GIZk4L[_!="\<3k[Vj8B@"5X*M[ni'/WLS@<*QH`h8WWr3`1PM-:nsnh&
%?&5A0>:0p`IV%NZ->XU11G`\r6uC<V[L&BfirfO0K#0J-HnZB,:fG/"/*d$:qC!j<.H,@07N-hX_93,La[<a/c6Nfr3-h6V?!)np
%K`pRPmQO)i&dWb]4rc-Uf%ED.7@^7g$QrL!`I<)ABfQ`g--_anZL]YV0(hrPRE=Mu$:\,:LTprnbFl9Co=i/]Z/$`;<A7%SZu&(m
%1aWjoA[mAP'f(i0(:5(bf.-`,E&Dlg,mk4mLhi>s%S@j;PqA&A<$H1BLIi,O&f^YY5U,u+JD4Vm=ok/Z5pCh@.1F]]UG,\sC2;KW
%"uEAVos4o?F-6baB-I[p3uM-s'+?5u[ucZ>9^kHijM8/I39pT-arm3!2c?,:*B[eaS\k';ShZBbKa9/c@Q,1r\.i0uJr.h+O932E
%79a0&KE'og3Y=f"AWr)LB?/WO[ZNQF'OUT]`7H.BiZ%^6J&D%BGdm?!:Lj&7nTCrBm@jbVndi"a*"8Md,]PYlZj\mrVL'.B3J0p^
%>R?EINq'9h'L;F$0>%eiisb;-VTtPX#qQU;iGd7j,`mXmj'u'ZYcu8B(e_-@Q9q;4P<.i:*n5e8T8]h'RE?@Z]Gi,ZEJT1?"XX'V
%<jE$9KYXmp2*uDl#ki(gckR#_Y!_NVmokMfCAah$)0HMR,%N-T$:BIKd]guk;JW#'E:&bhk?%`JcoUL)F]9cRE29_b6UID>r:=le
%BLgV&&!YOF":LiRL8d:lZu)B,?2MgMFe(Fg(#AOJGM7S=Ugm>/Lg+Z^U`T#V3)`lB=lR<Q_M]2B3X"Sd5O]V+aChkUV9#N"A$);t
%h&A>S+<k7K7%-rK%0F'^I]Xij%tE]bSFuTHe/p9V%L*-T;2R:%Nms!\7*[TN8Ou10[J!uR&$R3@cJjtra#a/DM7>G&\jTX1D4$V/
%\el)?MGi6<bToV$**j$mM1fs]qc#IDa5MK)9p(FW.+V"redSFH&a\P3Q>D\C,+YL[BrG?I6ZA--YgrO"$>BY^;fA*r^#cLC/PY0b
%'6Y13K0&ZWOQNH$L+!/1Pus-Fn)IJJ0Ymmn\,[-6+n@2i&r;m;Sh%9:lU@b+s+Wba7Zhq=KuiQ7KMpGgEV_,Of:KbXV=S)l@j>Q6
%TH#@=cW4_m!6pgt)^WBk)gjh[f(c'SH[5YbWd]HLgrhWFG1+,jkeF@!ea'9*MnStjPhLUtKM;37%?!8Zcn,Ul5Di\@ZQG's=]+hO
%48BP^aIemSO,NH4#)bPijS<fcr<HB%IWj=@Cas)6/H-,&hSLof+^(4-373C(H.0Nq2hp5?iX\ehOSt<q60ZBTL(h#Bi\+e/PU>Dh
%S`e9!$slI`1'tHf*m=Y6f#a"p-\;Z,!41N7c>J:^E/8[Q5iJ#mU+8Hg_UDisDae/..?'[<@f\%2?a,D5,+/ZLbi7H$OrGeS$8^[*
%S"RT1Sd2/Dc&IoqU^^*!&Q_7"XQ"s/doGmZ'g1na@#.75bkst;"c-L9`r>PI^40G9nd_0,/eP"pb:cW=a&]E\ZF`TAl`O[F6"lDR
%4I1(>k@#.R$?6Q!&<t1:o%/kun1F1r&bm1S0^L[NaCJn$j';X7`p:RajhS:R![EqC#/d>P)qtE`\e92IC+)sGDpf4aJfrk/@C26.
%-!Jo-q%_$*UpS8l[dc8K1`o43PgA>$MN%F/lPNC`KUl=l#j+IX3O2n'Nd9X.F0N#CK`A9nUfdkQc]o2E;FqQB:(kQti!7hhrr`6W
%4MiQW]oE\G/j]UELY*Ug89/sFQAEe>`fm#.-V3ft-0$hS6EVd*DLV5Dld?p+Wj0+^q/augNUU=?<M#D2r1ahk<(-)B`Y/E6(Y42o
%jKXKZ/dVeTX:!9]>L?Nq]fbWUdd2at80O=SKi='i7NI1JE@G<G1Ee<o+MNV=Xop%,\3B_nYQWBsE!_s]MM%t$<.%B+^rC":@<=aI
%YpOuGS$8fNl_J4O6YmU:=<)F3+PMCn.masFm8L_JAeN3PQO8dMSBQu\56ncraiu\c+)9ibL>]`Ll31WB.@:t2dcEjQ##UYGRo'He
%q5M#oSD#[U5WE<3L_00PF[ue&JVE`i#k]Mu+TM^8J`KZ\<[$@o"!@ZoOstq15C/\f@J,_.cl+8N+2VL1Yt)mq,pOU<cL?LoDA'BE
%U&p"k`*LGa()U9\qcB5u.Z.NGBq3!/`(A1#YJOr*N.H+eZI*C+[(/@2#lsutPBgnAR!(%-T?_ijdhG%>C`k#7P?B;(*h6]O<^^^5
%r$W=IiK,2g3KL+Wg8GQ\a,)b>/"6Y4iZc=#\NEuecCKsnlu5!1=+DHHVbqo4gOSTa?rM*_E"CVm&ck<;nIpmRV6GU3&lN\>_491<
%%i-c`crtmg"sc.R(1999bZ:,N+i?bgI/Y?i(dr6Y7$'X40Ma1BUT-!R3Rm=5b44r#_Ye9%/.u?"cB:caL5<Y5,mh!%B772=+:'#3
%9d+Rkn4rlYO-/s4eN)"6#SV5lJh&'k-bh-h8EN@p1Ha""RoK/T>V)=O#)i/2Y&e"!9oS"(C'%7]r)NsE'^6&0k6OLqBEQ8Hdrh_E
%4e$5EW6+NhT(G$<g1Z=(3;*XrJ!FLMSMOVgcJ-E9*U)@UV@)"\3KG<=ZOYD.#mr50R2h/U2[CV5KpM_o6Q@@<`?:)3h(V?JC<9si
%QK*[kVFB,X>rD-Oo,C*9$DOO8_9fYar7$GkaV#%h)>Q4.#VdP1\BCdFeJu)Y\:#MCiZOJNkEs(fP):C?ntWt$W?oP"EsOi_=26b]
%"-N4d+MIV&gc9$V#Gh[qSI:hI*VV5tI^a:X)kRhnZ8*R`bp+8_3)0MB8iAqjQnTEB"2](4*a0`sO3rZY$KMVL#a>JrV?hf<&Vlbj
%^`:;80^5KQ30QYf@?K['.k.T%g)kn"Dj4]DDgF"u8>ZiT+r<#s'VL&Q()^Q`#RM<:@71ho\haF9&`2RlA<?tQiT;@%Sk69Y(r>$j
%c,80VND's'C1XOsTe;1pE[;;q'bK]hZ:;_#f6B:7Bq-d'Z%CbiY7jI'Cs7V7Qs^!#X9gH=RLAW-*/k,(0aGSV>>!s-!_F^?%Ut4C
%R\Ug)Ft=skMM9,lpbtdMjJgU.TTbJ)e$,:3>7OQ5,YBnqgrJ=<!g99'$IA&XaDAX!G]*ZT('Rg'gW:d=Pj4kmKTIYb5Fi#mcOr>N
%6^3&\PALl?2XhU&3AA:2I7T,p5U*HQUR`O57//,UZ&;imWCF>/34t6.&d4?;g>VQ_^Um&t8^&J?rThQ*@m,BddrOr"XskD;ED'?a
%XiuD/=:<<@+'[4DNQm#i]HX('IWf%J3onLU9P6&KfXT!)3$mmY3L$m[n$,7Nrt=?W7#Md&(^i^8ZQbb^Be(IA6lDB:PSX&!GijVI
%/2l]P"X6@SDVBOOijVIU&Y+[niASa]cLsMUPK4VFq%]%QpI+p)-A/.D-gMGi2OYg@MUR;(9=[I!P!$rQ1ea[b9U[.`"ga>S-r.XO
%f*'*?Q&&AtFoWcKPJVm)P[e0,6qT!/*d`Bdcm[oeUmt'JKeb9L^q!o#3H/#M_`>;kU"&3SFZ>/($9DPD_e[hCa<4<Xp#5E$QU?.@
%4m9E:?UX!kPrLmKErNar>(M?O.^dcO(tTLr)b#U\VA`5ur-P,BYnDj(M15epN=U#".%cnb=09E&$l*gqX252d:aN9S!^h4+_c%uM
%P(VksQ/oclC*d`jVY56Ho3?%K+Ya8S8V,YJi%O$UB0PTK%U:N9l$+I#$K+B$*Pf3\reEl(P8In849GDT,NnS\1[=&[HO?;C3s4Xj
%,Yi_HdIHZA2NPrJ^Ve1iQ_W]tn[",h0O9sJ__to4p`V=J_5OIP(nJ[amN`;YW9kb=pm%P2/V4V,#76PN[$Od6hu`5(@@WC#B/#nl
%,9T#X;sE&W*%YBpT.1K4j&'7i-5c/lW*O[N$_i)&HCjSJIYWeq!-B$&gCW4_g5$+I+B$edGkG<O]WCi\ab:rSORmL9C7BD50:U`-
%`qmm^4<e2g@GR1?3!:'WpO^g,c?lWa5S6ODfs,DJEQa0"/L-C<a>*#5=CiX-RURqcXN:6]OFNtnZu;K->l1QFo::'#(!H:B:,a`R
%P$B>N8:]+A7m3LH5(%ef9o:[f'RJ(Me7b1lNZ@udVBlef7Hh@kMmRQCDaNKg>;?n]BnO$D=:m=]q'-^]=A'1t8+VCr;C"7oS;!:I
%^;#SL1sPVgW[&#)),&^>R/S8f!*1M'QY$T`/u"$"Gt>S*O*"Jt.!rb3j(rX;kE4_!+]SQ1!_JicnP<?!Hcs8fO<R'?=IKX>\A6:[
%[J""@<T[I[QKq3Jb\B%uTPn?SF6Q"C/:$T&K;ok<-C]>19^;#&Og3g`=g%)r'.9.3Jp*]<1_p.YBs=/$[lPe>8F+kV]VU;pmd#"L
%Wd5;7G.:^mJC]TS\q5Y.Di"!jF9"8rpg4eYPsj#sNioKK7F7<--VmN+Ih,+PQXnlKD#@RM>tl<BUFYm)A6iG$87]iO&)G2/[EW[^
%,jC;[pcCYn3oi5U>n`uKa.tb;[&f/qi-u*/6adg.Vebp#N:)PMr=P!kA4a:0m$5qn1kN[q3e%Qp@ZoTYE,2K'a(b<]m+J&pISM*I
%<=h\9SgcJm_i+2@K>KIX>$bf!&L(_YcP3&A(\sNBgkC5"e#m=:V%29*]Wm@i)q)W+nr+QfL&;pH'O/IX#AHnHO^.a4S:]"3='Cu9
%N#1P[f*pUD6")IcJunKMM:=AuV1^mkm.`A-;O8,-N@hH:`Qd>l^4YR(Ba\E+h%[C;8c9/Z'<mh`/**U\&shAU<jY+hVit'3AUW(^
%G9,1D>WnSi-gScRdS,bq1N)V$WY">k/G?5D>Ien'QEJ[kOckX_F]mO\D2:n`:u\:lJSS[H`c9A&Ag^Wh"f']t/SkKtp78<"OV``>
%GuW(qc,<[#<B:'b^SuR:"MV"%C$du&'tE4c"ka-0;\`Q[Z?]E%lEdH=Vu_oU%_sq4g=g[1-knehZW>j]e8jQ-<lJ?%C^cNPgW.FJ
%=\C;t>Pe&g%W!odcn[mE_NH+=nhDA#2raD8&\N)pP@XM"04pPAk1OQpS:&Zr*3r9(YjI@5',VFVj"fa#E9lJ`\*lDb1<<S(.3YGM
%Ye*&\3\@=u#$6MAg.g:;lW=tj%sgB`Qq5D46mkOIBn(LNm:q:RZn@B5*sbjr8>m$ob[aS^bX2c4B\#OtkW_I![@B1_;aB9)I/5+\
%509`&4[kmIJ]+j^c*d,@:@,(05mQmDKZuNA:&dZeJgWJN`9*ZDh!^tl>:>?"UZL$FMqkMW?r^19q=uT>^BLQ'Zkk5%Gr<6/c]>&[
%>LYTi]gF<RL(asChQ*#F_nhZk@dT*M2LF@A(;C,mm5qM+>@`:#r,Z0R7h!-*C1onYU0BlcfrTt`8;?l6"m)^Xhl4bQB4jQrAsEg>
%gl\tVBiNfNKM1JBFYi5@\n0ALI:nE];Y7@Fii':$$f.n<,1A9-=jTKt`10KN'u;IbVaDe9MdA?%C%3lG2XBah?Ak/Yc+W.g6d&G4
%]?UVg85\0<KNh2VgbP`qHM=AW%Unn+'CjJpK/Roo`l-mBIO\IT;4KdVNM/ls&isndAI/(/D1W&M,.P&L7oR:Z*2_51J0]\?=t1q(
%i72^$\E2r)g\:ZuQ1-\A?*liY4>WdCf>n_7:r7]q*KR1Q>@\E.PaHade05W[C\!6>J9a.3f0KZ25=7Q`MKn-iZD'I<Vbc=:PBcq2
%d)$AQ(0RE%fj#ICeX<1D?$$)H;]$NHH#O$P0tJ`%pVc:p#X+^-(eJ1_ZQ="CIhc89\=mSL]O!*T($'kW6RqB[XZ\nK*f_%=Re>">
%*Y.R%&K[Ik__!Xs7'%RJ'Q/Q4Z96//\@(dW*Y)Rgnm5mg1G7qSRe8$\.&C+sWn9XfCA(c=kr[GL:b4+Ho]$aH-XKP)GE8)lJcjX5
%h'6R"C)s^imn?eNX@'fES>n9GeK'Uj37Y*OZ3k*<Ct=KuoUW*!3fe)Xs7s("O3oS=MY_"GoLi?]r"ceb19Gu&UZ+9C:/@'/Ngb@(
%F]=8(`i@]TO(eRG\Rn'RS%d?Kn`2jac%-B&C-]1)PN>E\bn1E+BZ9EIS%u.S5FOLek")=L"Cag&=^=IMM8Vp?kJ=8*Yhm+_8'o7[
%a1>r6fKK*uTSZ0\?5rp,FYmgm`F=ILq#pd`d,\G44rKVN$0:T5!,4I'8/@AU,S3KM.Yq6Nl]_l<LBJ#G1mlOc0RdOX3U3rt''\r]
%%6"N\`"%j"E7ulK4://nlEa\Se8'l.!`Eus_()6Z.=h5k@3/6qg*iMn1>[^Z4(<^GNg%98-qp[arK!KPnr]NlE[a"D%oIRD)oGir
%P!$6T"D]V`&h:XR3p?YDLHMD%%RZ"\^jieiJX8p%df[lC:#k]m1cY)DVfGPIX/=iJW.OgM4Jlu5d4SV<#2tRGR.QeLRUFE1+o;U=
%/Ork&^][#H-O5&D9aJ%'j^F%Q\G2!r3H0QH&jMY$e=>D=#=eP#T6ddD;ohY&VueMUC*a981gA(#0Yt&"PRU_FVLJ(nD9Q]aO`eU-
%9J")@K+p,]5AE#$;H)%+,d\:;b^0(>7ZLm83jqc[%AIYCf5QJ!e=K3K*$sqgc"2AqS&1quP9;q3Bat9m%W0[4Rn*)#D$)r[-)>(.
%"qIZcB+Sqh#Et\,@5nX-Zg6+!laQSS+47OSLfWTf\Lg-)D0XS[SM*I_g-n0D!ds#P]_6Fq>(=qQb"tlkH\ip=o56NpB=cs6O0j+A
%'3AV369V5iGcQVmUt,S*'D9l0Fcf8dIoQIqN<EgVn5r^V((2dp>:>nPToe-_k*e%>)Q;6k',6]=8:l>OZV7VGf"_'Xd7F2"*+"R*
%W"?H'm3e%Tc6,%rG(A$hbA;@/39_#a&@nFY`7GpN>'hqtgV8-t,\BV+_)Uuq7'9PUTh(Oc-*6ZYQ=$-+]/YdNc/_(_^Ca@M-_.u1
%UijZ0]eDK7,!*gq/dT*\nn8qkKH/a:gYDREg&d]%3JAI6G2WL)49',&8s"sfD-G*n3R/m_I!;hKC5*P`?!Egq)qf0jRh4O5ESdS<
%WN$9tTa0:edFE+Es*7-mTUR8T9)S*^8fb3F[nBZVaAbq$/(*39Qf*_/:KX2;%A_uOC^*NN-9<UO-po#MD'=cC[;1m14A!$gQU@<X
%*V,#U#hKB^r^\]-+>&^O6S>k_*,6HYS*GNqG$@oV@->ub)=:pR35'RR[>iS7,b<;#OljSn>VY*#@\d>i*:d,QQ^^5P@-oa#[9Hf4
%_0f<4(m$]j5P?/+Gt7;s$[%8rnQUYZKG!B5pMP(^`LIE43NYEMU*I]Mn[,cnpt[/UNO27"e\aS<m@O"hX9.%lOS"C1*$bkK205Cf
%0[?R5o)t4C;o#%kkIYONrGaWNrR<9@"KWM@Cc"hH7%)-S``NtsXb%+M$sY<7/W0kJS7\pf%cCS>s#$;U4=]2a7j&S@0GGs!To9[p
%`V:Lu^a/&XQuRd4,f3+Zo.VkO./$Y.Eo8pQS'?0!3VH9[2)fgg@q)<ng(i=5:.6,bqochH6g)8</CXU(V6jCuK3"]ghGJH/jG0Ej
%fATSa7kQR+5j$5)KJC4/'42OlVXZdILt`+N];tFDUISiu&?`7U!:lL'NoCpmerV-a"%all?QN7`D$E`_RHlP29:KKW/p:[)rg>Q@
%IE[<G6&UZ''FkVQTNE@SJ_Er=`"u`sOCSGo^i0D2+S8-iN<@QF]l7p1*$>0[c'kAQ"/hO3FkM9[7W3er'5_jE=A\>;J'%4p%$Nn>
%&lOBldA'!JL9o%b#r@2J<nMq7[,1"!3tdO(o4Q*0,>e2ZFR11\QV=Qo*3=\E%%PQrl`[RPeeS4o:X12W)RoirRS:ef;(DK3n<C5G
%MTfL+\9Cf'%hY1"%%Z#r<3%2/)p"<J('od,`K+2Lrbl,kO!lX#,u2BP8e."]q[C%Ij/fHRN"/NbCage>_e=/Yq%(m`M:dt9Z\?:Y
%gpAre`uB\u$G<"Mp#3`CP%I:K)T8GC"J)W>*rd2C"eqgOiflta*%FpoH=OTE*l,1&!>6Q]hLs9^5T.Z`c?XCBZ/dsp@\$tZ8#&+e
%MKRtpi(@^/-n/#Z4`'?7+d#qXH+Lp%Ue#9:_\$RQo`)pC+KZO)%BtMY/9Y3QbOG[g$sY<7R1D\:'3ZgObVBH`Uh'`:`A<5_<_4U2
%!%)+h<RlN$LeM2.\-PRPBT_Ak\_/;8\(:d[3n),\h`nP&NNII/!tL,i10;70Pn"!<Y.hra!26G[\+c\ZTGo8+3bF)7p)\sm*L*4k
%?O;F&*C)dia6As;nfbpPiQC)TIun])@I1GJi>Vuk";S8+?V0nrLsW(%!LF'>f(Y<'eea^kWPBZOl._o-S4-.t`-g4%RA7DJ.a=aP
%8/s+R"()O6m?u=,&dPB)6A5KCR5hQjmJ(,%aksuI+FncIPK7M(D-JJA"p9dLjL5=W8gD\co;XI\SO=_s3tKS!!EJ]mAe[%!]_I8A
%qHq&MiaTV?;fM]UE;X'4gQ,2G4A.(sW1`0#3&3,7o-YD]>jn&<0(NjHlr'Rb=iAlWV"TV[YG_u!r'Je")#?5b%D[g!eoNaiDsQ%2
%(HE)/K=L_>'3+K!q9%%qZOL"&9G%+GNNXUAfbc:c&?bW:Ke0S<\dd`07/0oY&d!H"&n,6H@f/p%J7_-"*WeW,:mWHT4eBOcD.S,C
%7ar%PX&,6^W*"^.RLqYqgeOc>[t<qFW5Gg=E8PG>R.og-8siQ\-bEcMF:7ZSAP8eQFGp/gjJ-].!.PoY6BdRn/o_qXWVK7#Q:dCY
%eWd:ONHd6k7@N&!^gi>7L'N8G-!\K@8PY%]PVV3'L'ifC2=Elf8Sb#'!\D1<Hnii)%\5)7hWf3Y'0dT6"tRNEmG],4hpWtU!1a/1
%BShDTh?M73:#RY-TtD[g(t],3\7fV<GO+88<5S^WbHr86MYV9e9L]6n!R,K0;()jj1I2H\*aKn*X%+m7;DM\q(HZJ&qh'QS-X*mB
%O)F(Y$Ps\D\42mVPo;m&,`EP]E:(9q<_0`R"`jscPQP!>e3TO4J,V`A-C1t@J]B/O,J+f4on*o'R8q[V+s"2o@gCdTOO33#;'*qm
%Z0K.i,b5@GO\"4g5;\_/k9l`Wp96Mg,62>IUbb=I>Nq<T:;t3`$tS$7P/(qp(Y"%t#<*?n4J=Y1dd'sq$_<;b^I1-Rol*dobf=1G
%>.>cY;quD1?3Du6k%^X[h,'08+b^UVZ'963c"KYE5mDD/X(L\"V;j5GZ#J'&W+-fS3e1GnU:5_ud1WkN(aOXH\FSm.>kJ&5R>5_r
%ESPsN--mCJM+Mf?&k)ZHidA`0,>7EV;'UOtSs:NI0j*p>$RO]hbb\sqE9U`O+X/Ps(?Yd;HYtEh#Zhl8653X9YYA*.5n^K1nC"(T
%4qk<<a:r!!L_;Y/b.sHuKjg8]d-82t`Kg`]=,m!DFu0-$Yd7)u[>j"!1eWrB9s*Q.:""Ur7l(fekh)McFEdLW=OZ\+<hn"QRn,Od
%f)(kk5)BEqQ@bR<_UiTMR0M%PWW`fB?Ep%*dL7W#VI1'aZQlJ?#LTs(O:N!#%i:"2C6ag9eOid`jeomCj3Q_tErdi!1>6dZobD`5
%+FP[A!bYh5,CB\SL)H"YJPfT:anur675Te/J"k@L`&qL,\C6.ed1tW$3kuAS.tLPX.e,*=H3Nf&"Re[ea$b^t7XW.@4JS<([MRB4
%OT>-lm"r$-D[?m25OI(pfSJ\i#l[UBV\mMoS[[ZN*Ql90b<:&<N^RR,TFJrpe,bI=#iWlrHAH^X2@om4FKm-K"5?W^*3_tl?jt*I
%@h7$T8oKKBXUb$_Ll`&^Tng*BTeJ@A[.Z2V%i;g!au^mp$:4OR=9)QSRgq,?IGZjk1a,.nd_gIG7)1A=je\/B>Z)#=(C>"Tn6hYN
%V%$6(]s0j(@0>Gr["Se1B1als:S*sQ*:ai#*:+g7[KS,f9j)R7IO'o;8Hfq@K*kOoJ7B;/&D!%F/7[e`MPO&28!bW0jtAqH^%@2=
%P+oj<@SFYD%7l>dWeJ7E-7j?I_1_8Kn8;sWi:,Rg@!4j&4jPM7@VLE=LEc-tVOpD)L6CJ[_El=@>TCD1Z/V%DlmEl;M;f]kAe)-c
%bV\1gJYU@DLMXu12!Br8l"uTG6Q'uA[+%5g'qgR*b4(,C*2iRf[o3,iM#S[h6El^d0>9E7SlE>S9/%](`X^nrP?f7Tj,XdH<O7"'
%6=%M\'7Yu1#f[g'_0@)K'2'On"sXh=l8VrWmlado6nf4)iHUoRX/1/jdSRq.M6p:M@>;t6@?%Nm.GghM,Y&flDb'lIM`A(3lmcqa
%jB!)sM);/fma*4=dKi>LCgtP>\H&-f)</^a_+p;8O[`:r%:A.T;>N"3h=@TinQ5Jf*!mC^C"3L;$d9jbKZLKc8iZi3@^Z9#Vsr`^
%6mi%f#SgcaI`'0s64o!6*V@"_6i!\r/J7m$B>PI<d!jY+o#9%=B@9juA>Eoli6!"$=:saplJOb3P';JL+sqbr&iYaK)U:tp(?oXg
%dfZ=TCDdn%_:RDgMDrs=AS^I])%a"kCn+@SGX]g6Qr-L!-k<nT:h>H0!X<MmGl!I5^K:f,l*=g8;,p;U_(hTjepr#M1F32K`8t[k
%CBO+$pn\kOfi!'0[6EjVG>p+U6Kj^@`U=cu1F$9>q4Vg)N:lCnNBbn?<s`J@V#6(f-"?usJZp@6^r/>0F3*W-aSg4cH4UB:.SS6h
%`W8UC*Pg+CJK;ZQKHh)c<>_2=_ullQG'mb4D.+D)nSO&\Wt_AhYSs!Ac&e8P?$N1DL@OTL5W&BYMa>>c&BQhE.$RD^fYIa;f*^]P
%pH0Z)6fU=g4DT(23ZAN^3TZ7iIX&R8U!<$a\@MsM,`Z>0.m!I!Br+?;mluT%PS+n;2C:U.S'WpI'8EpAl*oFV6t:>&r*"s(&kfTj
%:;f^SSP$mS`3D4W^`;.^!fc0R$%fF=,F*g?(pMD1^&<bJ/$Jo:)i6R:#<6a8C$W/dJ5JY_K=QdqF3'`4R/t;C03eKP8*PW52;,Yc
%PXc8Po-E*!.UdB$@"s#=`2*0cU^>7uG]pr5'VMD;_][AB_q5Tf3Q?5Y;Ae"W:@FGno)>*qGGt'kK/Dp*AK?lo-+ZBYbgN6(q`LE[
%T9D=.G]8V>_E=!C^.VFAQ7Br\>j!(\M*dp#gq=^0")2B8n6\[@oGF9R)T++=Rprb:oPOX@8ehn(@Z'_9NgpDM*Djg2b>KdX"a7[M
%@VsgMG5hL3=j"5p16&]rn-9IM&XUE<e*eYRQ"\43_BeQhg;h<&5[e-gip/2/qC(QAYi#b7/6;a]3^YK?@`6.a1%cZQEma"RQmFgV
%+P'kJ%Xk_Kp-DL0O.O#8PZ<39EG+)fUND]g<?M<8c14;p&YX`TeU5aZ^lf_h?:rec^Vl6/L[_#PL_E8-HM\<Sqg(>*'t8"RUGLkl
%^nh3,OaBqC67'8`!:b,OJRj)TqeH<9FV<ik3;QJ%)(&f.>qD5&T\kYu_!`7P(D9hd)<R2*8=p+#!MX#P=jS3:FQ-R^![Z;UYmuOg
%5j0E:*RtJL2@,)Qp+bTE<qNH#G3l:@#12)E/Z#6WH[SJ</`N:N@%=^u^o,%e,K.eD0>Fff.IqV\6"n3q3/.lW,_R\`,5+EE9Ko&u
%q0$*=is0Uu/j,24<D^ag":cL/=:kW*na[uRm=TlWeAZ_,$F%\0#t49dq8'`[!qs_?)?K#f2nN1Jj"?la_!1"t(L4'Ceg]6adu^M>
%S7lN@i4#Z":9YT3"@$2m_i5O''!l-V8n!0&YT2g59d@S"l7eB1jXLdnr8;+YX9P'1;!DsLHiZM[/Wp5S;[S!!&<`5*P@=m./7Sj7
%K<StX3gJ_XiT5_RK\$sGFW=&RTnERG$>BLsV9*^VOp?m69M0sfds*UhK;^%qjrM+u#D)iPfIM@=d.)i?k0BPEd<?]ebp=E_bSVle
%0Ias<#TpX&SB.p'YSnH"!k:+73:IZR.^i(@o+B3FL#i9Feda`"/i?X?`\3j>8G_9)(c<YE,%qoFW"+iA*(7MDkJ_XY?9q&t1;'Ok
%D]Klt1Q"$@;rBFfO_#A!oJ4*nW"*WKPEGBC_/F!0[^uOW6Q@'T-kW'46$^aN&_oY""a)V5M$.Ro%a#hF<QiH?Gjc:mAEgl-k7WMI
%'injIpVs?k0C\gJ%&F8@+=!:X@'GM\huHWuY=5+3.*YJC';\lnj4-]qDfsEQU*q$#V`A-Z/'Wa$2g\DhND,]H'YApmLW.2d_Re]r
%o.#ql)Aq_$*iYf$Ks*?]*subI=*[&\3_hOZ(]0cR?8VAa:6($H-'b.1K1)P2ko)Qg!YHTuQGlQ.Z\-ijh_k3X@Eof*qi6jkC,Cdb
%UhDo_CNH^i*%"+!ds_M>('@]s?l?b]U4<`6d:q6O<EQm,\"SD=R2;^p0qn5mm[u.YCr0ZF7u'<gGo>@W;j`-Mc*Zau,@bjnaT`&U
%'u54DH%V>?TVJJ[UaKq&<>aOK7`TA<p6snKSaTId?tt^0B]YL*CmSZQ2!$JLcUaJ.FG2b3$rb^]F]G2s/&P7C#VA/#]Z:G];Tp!l
%Yb\A0f:]F3;BBEp(IiV)!VV?D=^_/V.%TkA$'_"fgZC/#Aq8J$Y"h]7fM#aciOMCqN'frs0`bh['oRfk'EW3L%GH[.Kpr13`5TYn
%>J`*thS=#Zo2]<00=cR)QK-#c?J2T.#TH;ViH8B;\j^e=ZXd:U#4_ZC?Q]t9M]RgmcK;^@[ib.LdC@lH-X8]D,dBqG@1sHa`.[S<
%@Wj@r[8t>oDfEsIh?8p4l-]MUkcui7?R*KW"=%k2j1o8j-jfXU_K41jTdRh`)mW<l<CqGAUL6*A&Cp36&<kgBNK+*ZKTb<3.:D?R
%<dNWk$dJNb(<,S>5AHU7*I/M(eo0NS^J,@*%EiQ*21BL*S\i9RD0)&+#V?5#J?dH5oCXFjKphMaJ;EW%0es36L_J>B/$t3/7KC$,
%936"1^jG(30\?F$8^cqGGnCRCMj]?/,@bZ1[Nte?jk@</BkE$jdZu'J8Ujm,F<!_%d#a?g>LLCa(+5N5kX4?-BIuK+Vo6,0g@b=n
%ojq0l&Zj8/"(e/>5#R=hc4uIr?8h@`q-4rS&iIUtK_H?MdYNZNMlm`$kJ=P-R',0V/3HA"JfY3^R:$qTkQ'YD7JVU80f4CbN)N1P
%'HNAu#HefX,dHrFGn81].=aF!36AYTX\Ic>=qhc\kmAp-Yu"*Nag[0/8Y^0P)XU(--P3/M'SJ[5T6fS6XJE\'=6!h7##^9F#UW5X
%O#dVUpe6JIGSmSL-+U%Bmc%c6/B;<XW3i1!/Y"Ru,B8MBJk$Jdf.%*Kf3Fbl/^5R_$oFQq"S0I/gb^\Td,LKT@%cno\.<GQD?GpP
%inRXRDA"Br>3D/+'N4)/I5m0fE4-:%:'4!04r\L)Y:S-s0%gK8I9E17%[2mG5hRun++0pS]o^GIFjP6lf1#7e5nm+'XU)&\%r=q/
%?1^sK)`1$nCupVfI.g'$nN<iX[Zbkjc,hA3_/YF\V$MWn5"76Gb5mW>+pl:8N?)ojLPlE"gp4^BBFYbo:tBg8"GW'@1V,oW&lQ3S
%AWQTl'4B2#(rl)[)<cTl-/sVL'Gjq"oJQN)</a44Nml?$O@TA(h$5C(%QM.-ln;k?4![@-Vh9#IZ#M';;'<@q1jO3#qsu*Oh)(5<
%,3YSY`5Fa21mZHDQ7TLM")iF.W0+af,&dS%8R+&jrVo4G"s48CJdJ<%)BOKMS4!r'P&;tB>/BkY0Oj?*GFB"p90mOB^rDm"fKjN?
%;fIjAZDg%[o'(?lC^1,HGKS:_0on60q*_+pe4nW`?=2Mnm+$SsEk<D2+^G68R#^7!mn%@thS6b(hqp<[caRuMrTK#dB6(U+f_<-0
%_]A:6&fAY2QJi<[`Q30OZ2TP>mNQM<cY/(V/JGX4Ot$ru:Id!W!Y)od/@+'>%'(%gCNP_jlO65a.p,UdHkW6Y%SStGYBa616am*J
%S%sTo2[4$P"DnqJ:iu.ZA[t$O^43S-!F-krm/H3ZU-HG4s6a-d5B;8O"TSDAI%ih\X8bAir;h;ET=l=F7,jc1d@J4:a/iVJOcf84
%iO-)emo9p]aX(,t2ZuJChXgT"=2+b1:I4*(K^H8mp',pnK@Yq,*+R9<d/i%dj,]?bJ!:0^,D#^?H(Z^2.Wt]S9_n,l23!+`s(@1W
%#_jZDn5o4pQ>iao;>WeR'B[5.UC\[)@K8s89a6+^SCcX-Jd@f1*<"]&!(aq#"opc:5UQKI5cA$qd/R%k6.>`p[+9\+Ii9,Pdf,lG
%s5/GTCNs>#;tFY,jPO;@0C[`)%''JSbP0th7GU1<R5r5Lj/dN.N]4EJ2lZd*F3fo2h>qIooq_Ha$"E@elMirFrf>?=T2biG<.Dg3
%)4OY+'O"K7o3=<570de,O$?8#HrBom,6mp=;uO,b_?3T6s51$V,8VK.4>s2<.C_tB:Vh>$*V%u+j,aB%EC&$IqPW6ueK<2P.OqIt
%XNp*_l5r8cWdfQMg99d;j2+Tls-)aJS$:rjmq&7Aec1b3rrTrPbHO$H[sT8=g8+SC/2O36B:LgibOO^Qi$Qu=Aa]A6dQ=,HWh*2i
%5=+Xa;Z2(qec2m7m??i8OQt0<A28]p<Us(%;>&7Vj]iTB^puZ..&$6(p&C!gi'1!08%qJ=L]+R?bl7js5=/rbf:r,>i$Qu="m7c;
%8GMgq"dnl&Pacdp'\oM],D?Ac3>P(>-'Y\bbfPL+FT2?C[9qLW`eL+-s!QY&2rVlK5L;UYrf=/X(Dq$oL=LjejnnPo-J^mtR5rMT
%j/dN.N]4EJ2sL;ZGL$eah?%P[oq_Nc$%hW0o)DoCs,YE>T9T?\P^d.O8.4"Er+FBNnt0R<3A&!/38_au-$;C#s1]-Jr5U8dW/?Ci
%/:WtYq*1PM,;GlLU07<<^d[?L"6WX-A3>fI9V;A!,_F(F8binTB&t,F'kp8Dj^2s6i4SJ"+@XgF!,LuRoV_6;-dDZ_oD^rjE\*=2
%Yk+B6;hk4^C]6b?gQl9UB5Y744KtdYVqeSOZo<5E*Z!CH;=2\sFhJ*Oo(Cct)?4W]VC/eO:CqfDeGe>sm=04AqkWpMV"U:fj;PmQ
%WqN@;=qR4`an[PMJ/`q7;'P1egA`*H^jhg,+!Y]?kM,3EPqr@Ue:+V^Vd%[M'\oMXVr559N^ST+/ZScJ(b&aKg7Ntde:,mM:QhI+
%Ns`6p(%hJ*C/Xs3[+9\/Ii98Tdeo^os5/JWa!g$le/u\oIs]GT^i8$`X:F#;f11?Ll2E-Tbc1"JB?e9`]X\K]8bp]BHZ#MC(21%U
%-ftA(&:C+7s5-HEIr&0_V#3HQr1bT:6f^tlr"N=6rpsqdhaIchUQ7W3l?lM/Ij50mO&Q$fe:s$VPlGYOs7sDS/pC:UE2h3]&H.HS
%42(b(b)/S2#HefX.#fXNb_i6M:-*oHST'DnNRF$K`_+9"m7?'Q-Lk[S<"]j\W\B%#>"HiF;9u#Z.,ejTKM.4kYQ?d]XR;3:CBZ,d
%m%C(>XjBEBoti9&g$(Vd?mnd9eqEl!g\]\GbDt?$mfr\3qMPA7Lb@uk-/[dgG%%&M?EB@+$Nr0'Xbj/KO!KZRNrAF5%p:QeF3\Vs
%GMa;2N7riHc84XhW`W7PZH+5L[<BA[3T]O9;iu:nm06=`Qm6@rba*Qf%n?5kCWMVBlCC"LJpeoB!t#X/ng"a%LM4b[(2H%%:?BT5
%aJ<XBS4T&/,OWC/a(raE7JP^MMYepFgZ.=m\C)o9ZrVoB.Maii*2AD.Vlh$Vq]jCF-SPM`]T<&^7Ja).J'^=1))]Y:h=peB;F*ct
%aq*eXZWCL]-Pc;@/>t2`A$?/(d8c7%a';LQ.OY\I?>V=>P'S(LPUg7+7T1fE\.Ve@5o%XJ_'h\;F1efXE\1re;<<t5-o=Co_Pr9_
%0dr>:UFLCh5DAI^qKe%[`-UbIo*IqJ8LK(m8YudnT3kdj)#nu,FF:(m1e8[HrVd/jQaaG2J+rp%V"_0.)aRXV?bcHTgQuj8lK)lJ
%F;uADbJk)i2nYr.8:95rbC6#>Cj.D4mcuSj^$*cPkK@eX3kJJ6GJ0a6U=.iEnfk:g/Lss:k6Lt+9C,BB*R$u*P%c0+h)X.J'/h8%
%Rc%!hgT2`dh6YY&]J!C4[A&Cf;A_(C6J@4V]%6K%S5,chU.Hi9[k@Pq^g,?T"Fq]\:t")MNH^1!c_Hui6T(;umpP(Ge?5JK6p)ud
%gGMQIr=eOd4'LM-RVL,tHJ)Ta:+#T9i0Mmh[VH'e;45uOfeqFeQHn+ic9YoDZB\7]I:0?rl7(+0Va!n0%`lSD^`]V\hR`W4^cA&9
%d?US2?r(dIL=pglqR1,:S=e*sFG^;Js.m(4(CZAuEnc<qXfQ.$LY=Y1[(P3Q:0,;[h_lgi,-A#TZG!GCR'\)VE7G3H::l&"N+A0L
%`O`7=,eMA0PBDqo):qZ*3K\86$d"7uf&a-(E/'NgY;FAd:H=`N[,*ObdRHaIVg=l(jMBJ5WJpurRkr+.m3*Fh,t'U1T3q&2j4r2U
%B&aRQ9B&<PC"3o@"X(FP:I@cjYc0!*:U&-7+UKLIg$'2F7TLR'\eC*fM2B;Dq>.>kPe@0J+ZZga])6rmq1NPU.nu3'iM7CbCqX?V
%o@_OeW>aqB\KC^HZuLK=Ve"9<2NEJ*ZLoTt3-VdCDOb*l/;a,6ED4,_81C:7q8lcLSGWsnC3L+N],2(XR!#m3("`XHMO(9gA8Aql
%d;Mfe7!aW.SXLajrMa[3R'H-MdOI`"JLh;98Rm<kI7pUbDrH+7\s(Ii9Z5<RC89t_m4n.U16&g5^X,8G*;]c3Wr\i;WUS16E1ic7
%EKVk-6n:#^7MCu;Y?+he;@tnk.jD+Q^*!o=R,b:2BY@ZOb7ZO(h6_n95Yq1d@r#gBAgVf,R.P\Y$,t]O#lpkd?]uJI#8?#Sn:/Qf
%4LJQ+\eRb;`-jg%V!.RU?frNda+IE"hj7--a;K5.%6mBB]qH>'-'@D8Z#u7rFo^a2#1VFlY)!X,;GN``]khYr-Sc[3S1g.VMha-.
%QgtS"fab__l48h"]^]IoX&!`7<Uj$cO]5G$^#+<^QrLFD`lfK-,FLI?0!0?!T.d=Ao2@Nl6#o3`S'K!&iqpmU@\&Yb.9Mk2\u!VJ
%V-'2!Mhjd\b=\DZ"-:!+f9]omC["<=^TAkV)\_$P:#/<ZVNV<UK8C-Q`C$&1H1GgJrQLu1UiYU?<'sM3J1N:0YX5^XChT=UBWe8%
%A*P0,WX%[m]imXq%@=5(0H9&OE9L7kY6Q!%npC=HCM#h)IjQ()InK*i[uNOVC#(*oS9GBf_=PODFG(^Nrt8h"6\&U7=SDe-BA$`B
%e3LCC.4=l)'5O/uERKs`;N2$thS@'@T@#ICN1=g-O[s;FMWCND7C4)+JhN.2HJQSk+&r6+S5+oqhCYFcHMWBSgIA+:4s>H;rr7@d
%`'3DfY02BYm`'CdgI?u+]4jp<(d:UBVkfMF?=k<O$We0_CjRMq,?[Dfg92MeTqJ0cF@h2(*j8]`G(gT(&8'RX!bP&I9:n6lIDTQM
%?,+>>NJT1)/XKuSr6rEQ<WE'nYLigR]AHrnbLL7_]mT]Y:M9!clCWNR7=)fe^U*&uoFq)amf-sHg)p=SJ,Y;4#Im:4)T6RKp1*i5
%>9'Vr-;KqeaAAr,TNW3dk,NJF&"ouK"nHV]7Iuq!Crf@d6G66YWY;6e70gVnV?cXQU=\dUW9aA`J*P3;\k-m#i]FR9*S]&\fFC7J
%leAULSPeO!jI`E^^V@M]L-GD1j]bXTs89dh='\b#DSLJ-s6f$Q?f->*k1)EHphP<Ds,@!NG'<>\QZ$c+&YZu9gWS=n`b41Yqpj<U
%d=;0bIXCjBDl0X&rRq,.?'t0]7iU[QXH"(N]uGHkp\Tpeh`m+jdKp.oeDG2WDsfXB2]qpAs)HBTro9u:QSb9I.;$!CDa!!!]JokX
%i$/J;miKh;Mul?>hu<KFpKudkHMn3&%du*7h/>4>r#\'(ro-ME3.Cqp`VT#Nk3\Y)hgBqNo'NLXr9SK#l=-tErq#;4]LW46s7pFf
%%fZ+8^4#U!*P`JDiul)8RmK<FA0BnsCalQ;N.:+u+Cg*$n8&#ooYd\gI.>arIt%(f5QAK"2fJ`h-"2:1)7P>PnGiIPQbQ)3Tu4X[
%N(kD`7>7a6arQL`2X,i?".;$&L0h(I@L,aBBAcAAJ`a4BJ#Ehu&jP!31H-_/b0n+#1s->i$Us%4'2kPI<H,blasgM$g<Bq_`>fRc
%9J3,X>?lK/F<]PQY*^SJYZXO9k#mE24@skST](TsC;"-To9^)q^OAa404ngi3&07!Jk&$1`AsIea@/atJ#T=cI#G#%"jq7P,0CjM
%"VZXE*3f%J_$mZZIpfFBiZDFseL9(t6K/r<6.-K+@(9RWomo\"%`sdQ8Wi26AH1T!D]u)6h>2Y%7gDUKT\\6^=("_4"Lb%V$uIr^
%$E<;;_3c/q@5LEoZUbq-[EAb!7\jW.BGdHei(djH`&aWl\^IU(9R`R00ZpMi(3ll\M?@&9*pDtPTVk8c)gH!eJB<?g9bIotit,)0
%j<A9rBFdAUA9"Wgm/2a'c0A#@>A(`.VpRuDoOu?:?`hOdn2*9ddFLinXIqln,)S&Kf,gn06C[+p%n"@[!-Y$^C3+"+n3DPX6>Lqb
%)5]&&6u]Bf3?"7\j,iRW+_q-OcV0:I:9\5dGQ!c-rdjmlYfIc_@kZQ^l+d-FD9[Us$=G/`DEXLViqZCf#*f%!]u-ojEpFcJ74`ND
%0*dCidD$T7<+5]GU7VO7J(1B^3pQ*!;IR.Z"k-V=3'rFUO[\84K^S>%FSTHeGK27H#98eqBOrQp85PlaAi4m6+tf2>4A,NF>%;m<
%'TC6UY-^t<:D,3p'$2.-Ih]%d6X)DXk&_?4^@:E033Z[(N)%>A]84J*0lEMI'd6G(8j(."-bnjG@o0ab@`s@)E3?)A5:g7</)`*@
%P:Rim7BN&40Ff^]9W*K9:&:Tl?EJ(0k=t(b%tD!f752p?^p=X!'H8<7_[S$AMs\EL;&^9%6Bkrr23u5`m]_[U"=_t8B+g8P&>XTq
%=STJlNX=HR-!9lKW)'HVs!B:\cm^.I?0.^o@R#XOn?=Krm'ro!DEA7Z0mV%OZNAuQ?[3)M`5d4Yp!&X%#M70q"6)_:CKSHZq.WY#
%g58_'g?SGf*,M\$QP&E6Y]fo9O]&#A"%tdV#V\3Tec,E+.iuWJ?n0:bZGdHZC&>(q>d7q;j#1#D-j5@p/7Qfn/Y/YhJbFGS0nK&'
%i<)#Z('Q(@Yk+8-T4hMNIjUDY\Lo'QRLs_0R7$W]%Ei1o4QV"+3u2.EokgTe2f8AQ:-K^7rFbHW_n.tX^,MXPQt]71DOjI`<!:CN
%\gjJ-a9n-*O@n@)"SY'iR$S>jZZ1-Jjl>=pZLon#GkGVX,%ogAHMN4c>.oDKGSJ'($d<:rle-e!pqO'R*alqQ)h!-A/nlMBi(*Y=
%cn9=nD1$^<Sdmd/J;iHchW_QAclKFLq"PsNX(.o@IL8Ssac"nM@>g1B_;-948.N\2C0g`3<(H,LC7Kq;IdA/n`s3dM0`9JALP$hU
%#-msu&mW_0i_CR;1t7%S?9.g<VS$XN*r\+7(,+M?fl6OKD(RVZpj0`d/ejUI>=0'.qP<';lGH3RN60f*GJL0>l[u@,365e'os%\6
%EmVNa3cI[6l"u9\:LVDtQY=!$NnIWaI2_Of5#P^cO!/:O?c!"i\SRda#@22l55mj2Pebc$L[R%"'oTC/\okG-CMt:##g7r-YO)V)
%EV?XA0:j<Z.=4spG4pLI7KW=l[u[X(<e;-++3b)U<.+c+Rfd84et,%\.IHMT$'BX[(A:O<lUL>DP$:+5`8+K9mI%keUbt%-f$3$K
%i9m?B'5EX1M^)#"YjqHr?koSqq@%,Q>=`m)Hi"N2?#tnUE8dcs[C8qS:OP8/2bEEAHs^gLK=LpIm<eR#I<=>LB5c\6\*r#)\+B<a
%4TM(eI36Pb8(oDkk\T?1B,YK[Vm>ul9lR@m-\4)CUO7L]&k"f+O,0FqadIL?*Tau<O,Z2*.c:c=K3esUB6ZM*_.3_B^L[&CYHQhO
%GY*rQI!l1MXr5Lc>,%npCOqn42l).[-Tc_!0WZ.i@2hp$ftsG7oN*Kgr=h^gZ,+Pan,[pKJ`1'g+%is%37Du`d[fY?Vb<IGkV/s`
%Ekm+.L'])I*Bld>P/^I.&)c1W*hu^e%B^]?oqT^I7-5JJ[!SVnnJ-VYoqTe@:!5)TZPDGJlI=/kai/@_R=)eG5#BDMN4ARtmp'#i
%a[pN6&O&6!PK1;Wo%m</E:eq3,paO>d06h/E=)hQ^"cZ+Q%@_829@;6$cdtn5DJp*,WM5QU)DCc34W*DZ/Vj&_<*Il(-C;440e$A
%--,t[JuU+K4ioi%i)nX$5VU=YQELU6:u<muctr(`CGp#SSmgk12mi%%^UXm*RZtaG@V]h1`h#SfR3GhV4<lX'!O?JKDU$\[*)\#'
%Q?#`W5R^=<,p6r+ATmekVVSYEXVj`kpu^ME`Ka:DV'R6u'jm)))'N]dV$"RjA4)3u?\T*njEm`pdWt(QJhN-<]KVPr#?br$jk#NQ
%.pqCQ06Z1ro6)r"Xh!QG!c3:!%(=.7`'d-^MX<aO38@&?/E#^Y`1/LcL?1hZJm0"7C,?>t9%JW*/;<K>BP?S*oc3VR:c_]5LUf;%
%aoX0N)/*I!!Kr60AJON232UZNI5JJfNWQ76['(ZkOAcRWI2-aY>fH),:QAAE",jUp)b"q\/m(D]%l4`0..RY#aQHU0SRFKa`lD:_
%P>,14A7tMP,/]Q9H>=N0i"91O/-<*a@_4`5-A9AK7)\_A9rZe-NJ+XGnf97CY@37*iC=eDaTELYH,5[G3&;.p^p,UVm(f;q*L#Ga
%g`m#Sl&:2]krg)T<9[A&Ls_$ST9F!)2kIDRO=#g6Ng)(PF`.r!9Q6mLXldRV%^?@#[0/+[.[TU\rlT0p!$d'Km_*=#eJ/Ii**Z6n
%Jg7<E(B#G*<'#PdZ/!qc<+$S$^,E$f_ju@4,<,m$k*.(tlq'UFgk&h8Ybb8*Y364;%7r^S?A49pOb9&cZd4GGM1)FrU^-?E8#q0b
%)*4ragPZ)5,/0cH"4I^20#l&Ve3`:fFgRud%Uthl(1fZC3m%eX`+nK_%Ds`<-$[3D0:@D.N$%RHj'rVW/hgGE[.PtCpYM(4&Xcnq
%ea1b8pea]0P'gZS[g\&3l:E+>/.Bf/""V;4*(aR@^Q>iiFU-fA?oh!WpS48l&=%r.@^A]J]4md1m.D2Ldq"@b/d0O4&&ZL'7$?JI
%;&BV<P+(Ig_4BeC,=dZjG*!X\$C:*Wa!@r;&Yfqn2W.eo4g$0<VN;2k4=/O<L0BXkkQ^HC#<[a@)B(/(IF:5Pr-$G(GtJi!D6L/T
%J3YgFcDf9KRed-]G(murRE^[JVE1MS.AUs^#c:^)BoF%p(H$m`8Y<6?lg6C2AO@KR[i;hqak>+t]!G<;lQN++'M\B!:f(ES@AJAW
%S\`=bTCA?-HuX6!_s<mX?uosMLFUFF-l5BmLuJtsf+PC5EQ#0A&6t65Lo@$OTnZ+ci0u:8+Odi*Ls=P?;3QnY_%"(!BHIc3#"?:Z
%Jt3I"8kGSJ0#\8g7Tkiq5A/'k/S&YM:rIV]rHG)ofMOZ4a3P@2D-4'@\[C;7'gjBKm#eLm`^97/2[;WTDqVV(2/.AEF,Wq:#!<-)
%dm?>)IXq57e\TRsWc3D1+Aga$WGIC9BjZ[./FTtu_D:]S'ZH7B/_nfoBCquZk$u0ehUb?dOIM1%'J3+@(p05!5DRm>M[7W8h_L]s
%S2,#U:?(mRIn:t#p<S>qpQn6oNo8XqNl4-09@D@,#_Aqr7rG8LBj`(KT_<@naFHPjTqaHcKn<h50(PnMdGo\l&GHduZ,70$]7CQ(
%5b_8f7(-@:MU7pZfM,ka_1R7E1K@s0jG20@!d$87peuMH.>.k7+2>aqmbpo`_C`]2[tG[ILsX\Cl56I_SPSU,8/X+[RTbdW:_UW6
%TLE./6Q0`g]&@"7i(eC0A$E;5_%Y?FbuNOEdttEm.]fD,c,*IA6sD@gS3N"4'lX01Y4,O\WhluO<2]A'22F$3G^7'*<eL0Mj7FNB
%N0HR;gn3>1@`ubPJ8[AchjUmJ\V4[o"sti#nMjkDp?Q4Fn^Pj#1.MpM/#+@2(^]bRYa_AP&N0?0^rt==6O<2t1L=KCnFHpZO(Gk"
%A[nfU(rM?`(4uq!;C05hUlr2d3=WU.$O)2mk7hHu:#V@$0SJgl,=U`o_'lT<5OTl&q"T5:XUf4X<MOW2\Ln"qoOX*6Z6_Qa\l+e2
%n-]Df.D*XuL?MkC$W.`8$?IBUnGEP(Jr1oo;s^"CjRa]XBB3J!SN4Mrj_#@=]C@/AYd/\5I"c-&M.3Ytk[e'fEY:eZB;i@./n\N'
%HXDTDZlOCj4/@`DOImgBD,#+3WQ5pneWRtlB-\u6"%@=FeX-aZcQh6AV8Z@n0,/hR@DVH!O*577on5>.,(Jl$`%!IpX;EHrOS_kp
%8q>;;Tq_\LDNNh50M]I:Ig_3;PdZr2m5S&nXUI7)n0QQBL(N$39eqK?KP!BOS$"^f,a2)tP(h3M__ar=WQ$<CQ]0i';1o>12'u<*
%6,&sJ=W\-!_)!^Q4R2B'glf?gYf#3"O!6Ce^08DM*IG'Yil@0iLW_ZT0^]^^rLd!JngW(3.hlhSEIf)FAH-X>OXMK]cG3#*T^in_
%n]7R/9.b\.OBLtE&b0B5k4_o,D)&bQRXE#3cPm9^^M+*VYWX;2M2h\iZ+2W3"GAHB7.\:)oE4,\,<Ktd]W4gk;W5W\U;D$4$77hl
%ZP)LP@]c[bWChY`F/EO_GJEc'eE:(oQeD#@Lum_(bF\B'mr>6*ZFHYDNr#'jVNB;faFb^I69'*^Z9YD(gaQLI=!nA438Ui`XMb6M
%T>BaTPNhU\L1#ou9N^..36SjZMT><9Sg"k4$Ab3(LnQ[\bA8AL;<8f+hU%ncWC)o&@#!8q/IS-[5W#pHX-7^i3B4bb#:pAuQc=U6
%+r77m":,Z1(4hg;*?dYqpj&*d,Meu./e2/PK!U%:Sm3uln/j%1juf-Lou5kYCo#4Jbn_:BZm9_SL*-qGS'B3J]sp_Mq&F4(p%?T;
%%V.XQP/r1uZi]17i$ap1P?;i&>%K`HBZg-3*ZCInH#5n\I0O]k"ZOI(^0]`VnQ"o9ll/@<^m`>5*XD3>EpO%(.>$JoLD0(+jBP^S
%Fkc5!H5G)[q$!m/mIm3X_B'(3mbqGAL=7D:>[B[HUpHF1CNtV\AMC!6=NgeGe`64&6iLboKO+`uPs($.R2u&Y$HrAK?a&tQ_a3>l
%XGC+pG0!9-E#?^%QD`kQ1UF*Tg^j*"\?\P#copbsg*!Z;)%U$I;mu#3"fDRnc1k<13]3_+"?]`@9[/7B%Ls[qi6Bd,.u`k/ahF?>
%G./L;m%+#iLK;@>+^Z>g#:&E15[$4hiG@2R=#G/H'RHX6p4r9ehrO+6@cQuFNa%fF,%oh.^[K;!rK;MUDTSGRq=e%9(ZOeqak-8m
%LRQ:%Gh[/#%2X$&`?b-o=Zr`V;9(.4*$J0UiZ*9b['jsZ48&aC:8_4ap4%9I$&fA(e?0N5OYcLhFS]N`M36#Z-(N87.X`SM`%2Tf
%A/KQo-MGni'-k\eo^9'5Dbmd0=@+!o4Vr$]ad>52VN@73Rr2(L<h%A@f>>($T_i`^fFOIjQ\)S)*(HJEgo"r"pj[7N1>qI5``$B[
%WkD_qS:ME;404VE$K59mP*WT"3.<i*1L<99*sKb/QFp5P5FN>iXq^;JQJ=EIn2?%E_a-&@3?5PUO'k.,Le*8+[tb@>RTppnH!-`3
%TKGnHf!UL^''`iW?;o#>p5c'k@GmtVYL!.UT.oETB/Po]qXbs6bm)/nSag4SChR2J$@[EcOD2,m^@3I\55]iQL(+V[=rkA%E/FS3
%$@4Wfd_^_a",dFml1\=HHj^t/?==b>CU%`Fa;J(lq36"(;T"U!hgORs6'Al:c`4ep:^p)X_79Kc<!+M)\_`ZbE;u\bKoq4saf&T?
%)=kMZ8CeKV50h%dE$KCO9`("iFKCFKj9:f?>,Q2."l0h'FM=LE8+>sokR`Pfb0NQ2nSiPD&((n@A30O<Gl=p*Saa53fX`r2-G7u%
%PK4X:M4.0O0'?3BVA!5"S@rsNOYE<hG8:q2h,Kc=dfN=oC#@tb17`[JWGYG.#qr.hL4UXi@ld>/0qJ$FT<.:q?%paV24^J^_sF`f
%SL2#%8<_+4puc*ITp0g3+8`J2Zg%*]1l>qpl!gM'#p[KeVcM8<_:hB<j#ksU?u7slBn,E"NYpaFP4diNFO-i5;\=,tVUO!PSJ#QE
%O'C)4"BY\=CH>17Z&pAq1[l&8SI-sn''%Pb.\W[u=D];la1Im2"k[rr@@Bq!4AD`%P>B8Aidpin_J)&*GVPaCPa^X`FIM].3pgWG
%=jr5>\oTpk0eg?j==pEW0.,,?EK'm%m&#_d+odSuUn4YKnSC-I'm8NhDRu4k7'\5nS_5hsD'$ej?LE?Oe[2+LWCo842Fm2'O'Bai
%)bj*saup\<n&]6H[6trh[!73.8<I`p(J6;d<950*SO8<=c=0@..V]h]>OZ*M)kME]IZ@V2L]f,4et$+Acgp[[C5E899Rc%jIX52W
%#Du[(_ng*@#e%_%ba0ZAF$3(qXBtWnSnW.H_>,Ko7Th@,mnd\g'6/oN)>Ihgq5SGEK)*LVgRfeLZfHJ/d[9Qn/A,oCGO@&ib9ZI7
%5M[Ns'YK7$8`U<XF-0d"VY[IKih(qVZgdfZKi^T-?2pUiRY;ZCOjlS2EIEo[;^q)).3Zf3p\s53oP17s3$aZ'&">TR1[NL+:Gk`&
%GCDL<3,Q]dY<0r7(*V:]o4\KND#=mXTm`7AI#s-LiH@:\lo67TVVWJE[ddkg-6WuBJG[D^7])W-<((gp[<p5?1(K0=cG;"u37j!K
%J2]X%/>"i^B"[.J_u\QdARWs`J58'+,KUM.6YrWY_Z(WZd;[S=4Z_^F,3,c^%=5n0,%iqtBH3e)`$]tNH9B=EfV<7FJcXXeZ1iWd
%IaF97U8UJmHUU*6POjHj'^o>l:IlkKYo&D_9(>:NYA?YZKXHo11lftUMs-%C7-`+cqIe4K/@qEAf>U/0>*nc.ac#:u6q3.Hf6$os
%,?L]XeWnYKPNC#L*Hg3^2''!WV8O*nl@K2X#q*j\VdP;LJ1)R[*bgus5Fjh;8(MD'(/CYZ_\5c#9$#8[L>]^a85l)pp>U>(GA>V$
%cR\qgKP<NnDs&@\<0=C?29Z6D'48ej)`l2:Wgq[)`H&8-72gr,RO5\ma-kW8c1M:4b5t9/9[TnR5M/'H+Pq<'GdXp"Hot\l:,8Ad
%kE1%UmC7[Of"@))%qcX$E<arO$3f6B#*F%-Q7lrg-G.:@kXo,7QoW6a+[;U'k<.8h']%]k/&@f$8n\eP:E0BR32]hr4.hJpm.`!I
%jb9lQH$o-lO4=3\l^i<VJ*l6PP=;P@.eT)t9b!;CQW?fS>JXS5LRFG?il[4UrD\kIpOMEc%nWhQk_)7"kdg<^\P)?umbD^N.T5`<
%T0at_[^D?^AXXK2(:t=*e<Vg.E8nt$Lnq&RrS"c_XApF29Unpt3_3`JnY)/BbcMVLUNG9m\Mc]NeR0?nO_C;\W/s<,e&m#m4M=EC
%+D7^8/&m:k>2osuVon7CYoNUL6:!:LcE)uX[)H"+A*ue_3A$UBlRm-cdrk&Bm-;F@Z,^Y#h77_$S@>nIJV$`iEpC43<PN)_W>_*R
%q2rWkh;9SOSBIW9eO_N'Is(OP@?_#X+a-ts7Vo2eVg$_p.9j&GIkh,bTnR%GB-CBALnGLYYt&l.d#gCKL1^nQ"."s)M1tBRDPm;r
%NkJq;05Dk%4AZ@I\phJONbDPfJ>b"q3Uu_bHZfE,AF,Q!s/hSslrW41V?8#*ig`Ei:#sP?GIs"'4VYP1OMpUd2<f,@;,DbjEAm]U
%:*t5*aHiSGX&W"^mUb/SUIo0uS/FHI5j&:GW,bhtkPQ,t&O8+!;/%!_k^1T_RrFs?Y&R9[S9Yj7C`R;[!EC#JEDh;N\99Hd5;e:m
%LNDND2j87cRHlo.#XP[@8903u^]6`&rRd"p!%p5_!G?>@Hs/O?>Y,6Z=iV/Qi[;t1SIH)m"Y"Rk'$e@WUsb<d%/4_28FC]O>g/1G
%&TuWARKnP1n.uJ?>078!O2=ts95ZNr)\!$)a&(t*[W.6e7MLk+G1.V,OJ\OC+@l$R0;7:c2N+%2^T5*EB;E$_4Bd#SF6Nb&.3**,
%o+]RJU=NsP^]o-2BuiSt)7WLI@X2'e>\"sW.*<Qn,k.W-7K&XZW*bc)C(onBbARVZ>cp!>X%=rf.sm:L],g5%j'*&WVfO,Ii-s&I
%00K9rmHrN_IK)9D@?I=E+Glnt?iAsNb;X@I1puU"*ZlGq`1.`+U&)V<nP)uh4s&iFS&59,AlpiPNGl4H4Zf/e^\R0]h9l##067$Q
%>qI_p6*2R,N$WImd!r^H+Wu\5C-Ep<5Jp/<g>E7I`SptG0=W,WC.sh-Z;U[SKLo3H0E9u>b7sWK`=n<:OITEk?%+ur890^Op`t]J
%`K#Z-CqX=;blui_3^6X)*$k8gs.hO_$5gg.]\FR6EGu^.cYUPo]5d7RH*_LlOX9Oh2pUhooqV!P:ej&3^:p@RNETs-,WfG;ptEo3
%9t35Fhmik0.1S9*j[5k?@q*[!>1OOWjl5P4l^+tWHf?)j.XW[Q\UZCm>q28&Rjtn!>^4uWXC1H0mMuqlE3/"tl+dE*Ib9?*lR8W^
%Wl(i4"62Rb+nE3l#p%(/ZYIpK:m+O_SKZdd$$Z)K+*7+LQb:Tf%+-hgQ>)iX12R\rdtTAPcaPWM12u9,a7u-<Z];ETPa5*:T:ghO
%0(XfA8Wp#sR5Yi.j`9AH]Fg)p0[%+s$5M5HZS=MKc5VVpbZSr9Vr"/d>?iLm@`u\aGaZ')?S=K\VP!oE#Lhmn;m;iQ"cnL-$#$<t
%2^X.c.TCYmRs@A_>4foiT-i?!VP*+s,_qQRGr'An;i@'LR5[M0HjE'4c^S@$`%@0-413;%.<s4".sU_9NB,'SkEn2^l$643T!ng1
%??G&jeJI,JYs:f=#BU-tKK1G0>%b?i,KZW/,q_09CU"f-S[&^tPR[)d9Nqc]]tADrkdR$%^0]b*e%'D\8`U;]Lg8B;'P#4S\q99.
%Pl68hStOZm0%@t@@3I@`[RUda-$'7@c,^>dB@YhZ#J:Od&30j-YE;%uk##gAR(=;&bIe\#j.Gfrcq3:,r"Ne8G'`+p,jW7fg2QCc
%=pI7LFbH=*1&>FYh8"tEll"6H2lKuL:#:h8_0VW/a;OaZ:-7G]E_0J4LJC>l$Fq&MJ<qES,%oj.1NF*&p[]2)32W_3.FSqWAMa$"
%.gdUT1;h4*Em,2pfo]J-XNa#\&uhH:-H^F`J65$)&QHeCh'>"chR\rH*Uod'm>#Xh"fRU<=#fH]U&[nio16]-5c.R[h0`B1%f%Kt
%X+a%ZNm&'$:G%HnY?W0r_P)N5R`<)A(M466PM,:Z`!J(*RdaiajFZ%-b/!F;71;5r+;,`oQ+ML6ELY/:rZjKYbp!<E4PC>)WPuAT
%U\VjB;IY2E\`VK_(mVsY\C)3D:6N&u?o#USXGY9jakKO4+T_(Am;#Iqj]SdIL@r"`Dr6.5[<BGH%<oN8D"(/-RW#L2l@s-hh2?r/
%_*]D;C9'cId.4=YVPt%6VB(W[_G!=bBpM'ncR(\T2PA0s!A+`7m]a@[Gjd%+[)>'>&hfQ2:6t9:FA\'8?A.ABj-0)P(&#\`9k[c!
%5f3U>U$3]!57+6YDI]9GANf]LNV`6/h)kuJ0"YH(T&Em/pF<;D)P`$=;Op4!JgH%NPGAn+bW8>1I`"D-_7(@CTu%7;(bIaM`eXgs
%Sa%%^BZqWAR);+$Y%jmR-7jt6Dmm#\Z`cmgm0`U8lBXJ4Nqdr#lg16'DBtEj2<Q#]T$%77XHYerVq@./KH30+FQ>V;N!Pf,TX/^M
%He-Q+qsr<$oS<,`,;T"caTqb)"%A>km`HWNIW`CRP'7t@J*<tVDYfOT$$kE:,lKpP^d6cXn>rDj8S#$9?>7&";jD[34U)Em:@[PO
%8nIjP]2(Hr1i+r7DR+I<*Af$+&`o*o2]:k%[+Rr;795+.l=Z-[7-7>=WBmaW>Y.\l\'@41YU>,Xj4Ao-4IRRoV=B-,Y=Ch-VfOtQ
%idTs\PkPbe/=ZAhO7GKSEl,`M&+=nYUZ'bt(_B^e_g?U]s"H&o*g+P]WYk^-IsAeqPEU]f:FSguB0nBd6W2cm5a93j#m_h'-:9M!
%[(+cHN9#&od3oVKHU.D<Q[Z@Tk8gOY.?`oQLVk0I1V!4dK_4L*4SaWK#"]Oh\'VC1i%.abW@^N+_08cg/FQj05t&XoC1tk/(doTN
%%T=Sj,t'uU%;G&\Ded<iji)j][=_'$AKE#]KUg)maZ@QG7i+4Q;"!.?+]:\/"5_D=*^TA%<[ZRV',W"ml15eOaK>%Ei=@duD`3KJ
%^WI+eQD=pZ4*:8+_j+^[3m:]$V136\hdQb'R;^g*3t,.HXaPmpk(Tk4,ru;DTWrU=@5jZ!2#+Mq7&qjQ&>7(?>#e3'`guBo45>R0
%]7\jO<D.rpHbRe7%$?eB'KLgZk=[o0,-Bm%k8uHD$#tb@e[I*+"?1:,1NOuW*)^-PF"&:!0etPOV6m/V(GP)/hKulj2)p;#Ms=T#
%QU6/1C#JH5EOXUXHchCQ^&_<j`_/!q%_\WJLO2-T+h]4d5og=ChuI+WP/pHAkq>5bD8h\M`./%Sb.VLR07dX"pn\6NPZjfA45=)-
%!#HGe#r'AiA\Jf!&D5Z-%)Ju"#n:^T%%ZG_;IjGJ`Lemj,,gf",R2b(Vr0o'`BUtA3,uqn9!\*uN9nXtr\=A+rK.B?9Tf&NDAO;=
%Rpb[LLn4JZ"ha8dp:XuNHc0njm0o8>'K#uP0$i95,)8*Ibb+:h'Z]bYM/B4*d[OcPQ+057jhf&nO*D2B@5#jkm!%g(oK/*/+poq.
%K8@2R!/m-MLh;-o48-JO*`HD?K6K2-'fO%'h10Aa-%$q/IV-O8*tn+p`m,\&2rTH^.J;*--=_'%@E0IgPhBpL6Yq\YLlN]EO]6u[
%5R7u?N=;P9jZ/`q.CpOX4Q71.,t%tVS]#)Jd=+c1$(8s15c">`50kee5U6>o,o!A1;GncB[u%lU=C/b?-'7(1j"NgRB[2]C,cn5_
%_+KhL5f.3r(CnOSfS_)%*T+]t:T9[<`Bc6fmb/\*3BG&2;i][@j-]@WFi9:V%m*dM>lQOLBX2Di*H3+=FdH`1,0&funCA9I\K#tb
%)^9V2Om#geKf1p"i(upApkm[d6t2;d<GP<GA6]dXo]X868,En+?NRDQ.=96hm&a"UdR"HaL^cq6I`b6J,s_H"(WX?Qg9.o(DIK9/
%52%/3SbuU<67?QYB?5u=kg,u@g7A5ZW^BriLU5dnT9ImIZlc+PW3u3cXtC+M&72t@6BOYGpd`1QnhV+D5YFlgePdNSrW5C96Xc\I
%SI8Y3$Gg%;/0SRu-+nPF4(Ba[]U%:j;gZrR1DA\c[(T+W`U^UV27(*c0_[C#dS)rU^b&[P?&.:j&+]"rld-WX+6O>XZKm]&Ct#RP
%)TL*')(XB@Kls*tXH_5Q!k-!U"H*0]$sLm[MoiC`FT_@_\QDm.GZ6LWs0o>Wfkq.0(YYd]:^Wh`G-eF&\!D3-^4)l6n)hqc`-8iS
%HJ3^3_91V=/Xo8_Hg]PCMcWPE)ga4dm,iP'I4me^L4ba?j="noV9M+2XUqdm)'_/sQmFeW6i!cpXeqIplRC]Yg1I2?qX1ee5rM8c
%.kCu-3B-HS^*MHHVA^0"mF'S6pbM"2.#Tc_E)eRuS*j#.oG\(.MsBJBLZ*arNcpo#fb&;\HPYFB63tm$Ca7XdeCN96CO,/Gk:%9$
%qe<(0l;;uFH.iepZ2;$=Xt>!tR#jZZo,FteS5]+gDT9>)='u?fiXR7)Mt\W^G6>IqI38)P'C>Fc@eG-'")OgNG<&lpG(eW?E(B^j
%g<)M%lVZ\TL38N]RqF.O\m=In8GSmGdh92+q71DqaQqMsJb]KeD]<O"9a#HJV:Q,[h#;QO0%;CL8h/g5RXJoR6:q[#T^lnpMC&>5
%aN^YR6uZ(6+C:V(]2$f$EW0-(<%>.0>r!Z\6'`Qlc@Nc!4^rI,_FK#Gq`FY>@c4U(;)QW`&#>c=9jd?=pW;I[#b,BHGs^L*2rmjM
%.aGg:Agi<ZVJMEWN$Ho5WPJ`8nZ-$r,3bF\=22N=,dBSVgAW]>TesEb%.DssUWJ6B(uq=>0It6rJ\bbl;pTEG'OaY"NcXGNPUL%*
%NW,DXW>QUM1i/p2$&iMsJVC3gGcbe7cRrdSV93fZSi*sKk(d"*QPOn5dpj*B2#j#:p^,_:.Qsd`_`t)3bPj?9dh63>';">BB#QVn
%=JT6QqQshj`TN#b1!)+[nKD0YG:k)5!*`TD(6LAZFpOiV8DY=iIgUl=AJ@8bpDG6e:,IR"THY4&Z;1W7D\.W>X48>($Qk]nECE2j
%V9P=,D%r^P60\Jj9;t=Q>"iBAmJ880'(W`g,\\i29i\=ecO!?em.A"aVsmk;[DjCQ6%mW/RJ=!t=ua;.3;):tCn.QCF8_S8ro.!d
%r%A!5bAY,+Ief%+Da+2kJ7&9DQ[a;RDf8s2IJ`<S07WMYmpH(]e^_i]^4AZ?eT^X]=+>MelMJ'J^3OkorEm><D]ni&pqa._p#YZB
%a"Mr4rrH1:i]@~>
%AI9_PrivateDataEnd
